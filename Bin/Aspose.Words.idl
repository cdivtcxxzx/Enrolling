// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: <could not determine filename>

[
  uuid(BFA4FDAD-E4ED-3856-93A8-687ADA1DA8B5),
  version(5.3),
  helpstring("Aspose.Words"),
  custom(90883F05-3D28-11D2-8F17-00A0C9A6186D, Aspose.Words, Version=5.3.0.0, Culture=neutral, PublicKeyToken=716fcc553a201e56)

]
library Aspose_Words
{
    // TLib :     // TLib : System.Drawing.dll : {D37E2A3E-8545-3A39-9F4F-31827C9124AB}
    importlib("System.Drawing.tlb");
    // TLib : mscorlib.dll : {BED7F4EA-1A96-11D2-8F08-00A0C9A6186D}
    importlib("mscorlib.tlb");
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface INodeCollection;
    interface IMailMergeDataSource;
    interface _TextColumn;
    interface _BorderCollection;
    interface _Border;
    interface _PleaseReportException;
    interface _ControlChar;
    interface _Document;
    interface _CompositeNode;
    interface _Node;
    interface _Range;
    interface _FormFieldCollection;
    interface _NodeCollection;
    interface _NodeChangedEventArgs;
    interface _NodeChangedEventHandler;
    interface _FormField;
    interface _SpecialChar;
    interface _Inline;
    interface _PageSetup;
    interface _Shading;
    interface _Paragraph;
    interface _TabStopCollection;
    interface _TabStop;
    interface _ParagraphFormat;
    interface _StyleCollection;
    interface _Style;
    interface _Font;
    interface _DocumentVisitor;
    interface _Section;
    interface _HeaderFooterCollection;
    interface _HeaderFooter;
    interface _Story;
    interface _ParagraphCollection;
    interface _TableCollection;
    interface _Table;
    interface _RowCollection;
    interface _Row;
    interface _RowFormat;
    interface _CellCollection;
    interface _Cell;
    interface _CellFormat;
    interface _Run;
    interface _ShapeBase;
    interface _Shape;
    interface _Stroke;
    interface _Fill;
    interface _ImageData;
    interface _ImageSize;
    interface _ConvertUtil;
    interface _OleFormat;
    interface _TextBox;
    interface _TextPath;
    interface _GroupShape;
    interface _Body;
    interface _NodeImporter;
    interface _ListCollection;
    interface _List;
    interface _ListLevelCollection;
    interface _ListLevel;
    interface _ListFormat;
    interface _FieldStart;
    interface _FieldChar;
    interface _FieldSeparator;
    interface _FieldEnd;
    interface _BookmarkStart;
    interface _Bookmark;
    interface _BookmarkEnd;
    interface _DocumentBuilder;
    interface _Field;
    interface _DocumentProperty;
    interface _BuiltInDocumentProperties;
    interface _DocumentPropertyCollection;
    interface _CustomDocumentProperties;
    interface _VariableCollection;
    interface _DropDownItemCollection;
    interface _FieldExtractedEventHandler;
    interface _Footnote;
    interface _InlineStory;
    interface _SaveOptions;
    interface _Comment;
    interface _SmartTag;
    interface _CustomXmlPropertyCollection;
    interface _CustomXmlProperty;
    interface _SectionCollection;
    interface _MailMerge;
    interface _MergeFieldEventHandler;
    interface _MergeFieldEventArgs;
    interface _MergeFieldEventArgsBase;
    interface _MergeImageFieldEventHandler;
    interface _MergeImageFieldEventArgs;
    interface _MappedDataFieldCollection;
    interface _UnsupportedFileFormatException;
    interface _RunCollection;
    interface _FileCorruptedException;
    interface _BookmarkCollection;
    interface _ReplaceEvaluator;
    interface _ReplaceEvaluatorArgs;
    interface _NodeList;
    interface _FootnoteOptions;
    interface _CompatibilityOptions;
    interface _ViewOptions;
    interface _ComHelper;
    interface _PageEventArgs;
    interface _PageEventHandler;
    interface _DocumentRenderer;
    interface _TextColumnCollection;
    interface _PageNavigator;
    interface _License;

    [
      odl,
      uuid(22EEB8AC-2457-300F-A246-2D981B1120E4),
      version(1.0),
      dual,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.INodeCollection)    

    ]
    interface INodeCollection : IDispatch {
        [id(0x60020000), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
    };

    [
      odl,
      uuid(2AE9F4A1-883C-33F6-A970-8A51822BEFC5),
      version(1.0),
      dual,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.IMailMergeDataSource)    

    ]
    interface IMailMergeDataSource : IDispatch {
        [id(0x60020000), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT MoveNext([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetValue(
                        [in] BSTR fieldName, 
                        [out] VARIANT* fieldValue, 
                        [out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      uuid(98B0468E-FFE9-30AA-B092-B34028216BA7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumn)
    ]
    coclass TextColumn {
        [default] interface _TextColumn;
        interface _Object;
    };

    [
      uuid(3C8CCDBD-8309-32D5-84CE-3FA00F620AC7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderCollection)
    ]
    coclass BorderCollection {
        [default] interface _BorderCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(9483A930-7CFF-3ABA-A8A9-9149D6B7DAA4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderType)    
]
    enum {
        BorderType_Bottom = 0,
        BorderType_Left = 1,
        BorderType_Right = 2,
        BorderType_Top = 3,
        BorderType_Horizontal = 4,
        BorderType_Vertical = 5,
        BorderType_DiagonalDown = 6,
        BorderType_DiagonalUp = 7
    } BorderType;

    [
      uuid(F10F0785-4662-3EEE-B16D-A2A8F159E6A5),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Border)
    ]
    coclass Border {
        [default] interface _Border;
        interface _Object;
    };

    [
      uuid(2CFCBE18-AF9D-380C-8AEB-69ABFBFF1473),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PleaseReportException)
    ]
    coclass PleaseReportException {
        [default] interface _PleaseReportException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    typedef [uuid(8A3E35FA-2D74-3995-B317-29B2E9B46C4D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineStyle)    
]
    enum {
        LineStyle_None = 0,
        LineStyle_Single = 1,
        LineStyle_Thick = 2,
        LineStyle_Double = 3,
        LineStyle_Hairline = 5,
        LineStyle_Dot = 6,
        LineStyle_DashLargeGap = 7,
        LineStyle_DotDash = 8,
        LineStyle_DotDotDash = 9,
        LineStyle_Triple = 10,
        LineStyle_ThinThickSmallGap = 11,
        LineStyle_ThickThinSmallGap = 12,
        LineStyle_ThinThickThinSmallGap = 13,
        LineStyle_ThinThickMediumGap = 14,
        LineStyle_ThickThinMediumGap = 15,
        LineStyle_ThinThickThinMediumGap = 16,
        LineStyle_ThinThickLargeGap = 17,
        LineStyle_ThickThinLargeGap = 18,
        LineStyle_ThinThickThinLargeGap = 19,
        LineStyle_Wave = 20,
        LineStyle_DoubleWave = 21,
        LineStyle_DashSmallGap = 22,
        LineStyle_DashDotStroker = 23,
        LineStyle_Emboss3D = 24,
        LineStyle_Engrave3D = 25,
        LineStyle_Outset = 26,
        LineStyle_Inset = 27
    } LineStyle;

    typedef [uuid(F114FE05-59DF-3CF5-AD8D-69BD99E087D7), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionStart)    
]
    enum {
        SectionStart_Continuous = 0,
        SectionStart_NewColumn = 1,
        SectionStart_NewPage = 2,
        SectionStart_EvenPage = 3,
        SectionStart_OddPage = 4
    } SectionStart;

    typedef [uuid(F2C3C48E-FEAC-3861-B23E-8C099BF8BAC1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageVerticalAlignment)    
]
    enum {
        PageVerticalAlignment_Bottom = 3,
        PageVerticalAlignment_Center = 1,
        PageVerticalAlignment_Justify = 2,
        PageVerticalAlignment_Top = 0
    } PageVerticalAlignment;

    typedef [uuid(1BAA0B96-EAFE-3A11-A9BD-9A181ABA7698), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PaperSize)    
]
    enum {
        PaperSize_A3 = 0,
        PaperSize_A4 = 1,
        PaperSize_A5 = 2,
        PaperSize_B4 = 3,
        PaperSize_B5 = 4,
        PaperSize_Executive = 5,
        PaperSize_Folio = 6,
        PaperSize_Ledger = 7,
        PaperSize_Legal = 8,
        PaperSize_Letter = 9,
        PaperSize_EnvelopeDL = 10,
        PaperSize_Quarto = 11,
        PaperSize_Statement = 12,
        PaperSize_Tabloid = 13,
        PaperSize_Paper10x14 = 14,
        PaperSize_Paper11x17 = 15,
        PaperSize_Custom = 16
    } PaperSize;

    [
      uuid(50D022BB-72C9-3120-A96E-C1CA5102F17C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ControlChar)
    ]
    coclass ControlChar {
        [default] interface _ControlChar;
        interface _Object;
    };

    typedef [uuid(E42CE2C0-0C30-32E1-9EBA-5129C25D7780), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StoryType)    
]
    enum {
        StoryType_MainText = 1,
        StoryType_Footnotes = 2,
        StoryType_Endnotes = 3,
        StoryType_Comments = 4,
        StoryType_Textbox = 5,
        StoryType_EvenPagesHeader = 6,
        StoryType_PrimaryHeader = 7,
        StoryType_EvenPagesFooter = 8,
        StoryType_PrimaryFooter = 9,
        StoryType_FirstPageHeader = 10,
        StoryType_FirstPageFooter = 11
    } StoryType;

    typedef [uuid(F7C3B59A-2A14-3CD2-ABA5-F561E326B994), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterType)    
]
    enum {
        HeaderFooterType_HeaderEven = 0,
        HeaderFooterType_HeaderPrimary = 1,
        HeaderFooterType_FooterEven = 2,
        HeaderFooterType_FooterPrimary = 3,
        HeaderFooterType_HeaderFirst = 4,
        HeaderFooterType_FooterFirst = 5
    } HeaderFooterType;

    typedef [uuid(F34F0DBA-AD60-39BA-B0AC-3F761336B4DE), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteType)    
]
    enum {
        FootnoteType_Footnote = 0,
        FootnoteType_Endnote = 1
    } FootnoteType;

    [
      uuid(79E9E093-F4DB-3FDD-8E42-27DDB59AD30D),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Document)
    ]
    coclass Document {
        [default] interface _Document;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(A81C3ABF-0E61-3B3A-9766-45654DA5F985),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompositeNode)
    ]
    coclass CompositeNode {
        [default] interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(72AE25B1-1CD2-3751-9A39-4109C0935614),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Node)
    ]
    coclass Node {
        [default] interface _Node;
        interface _Object;
    };

    typedef [uuid(BEB2B1D0-9B48-371B-8CDD-084ED4A6AD0F), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeType)    
]
    enum {
        NodeType_Any = 0,
        NodeType_Document = 1,
        NodeType_Section = 2,
        NodeType_Body = 3,
        NodeType_HeaderFooter = 4,
        NodeType_Table = 5,
        NodeType_Row = 6,
        NodeType_Cell = 7,
        NodeType_Paragraph = 8,
        NodeType_BookmarkStart = 9,
        NodeType_BookmarkEnd = 10,
        NodeType_GroupShape = 11,
        NodeType_Shape = 12,
        NodeType_Comment = 13,
        NodeType_Footnote = 14,
        NodeType_Run = 15,
        NodeType_FieldStart = 16,
        NodeType_FieldSeparator = 17,
        NodeType_FieldEnd = 18,
        NodeType_FormField = 19,
        NodeType_SpecialChar = 20,
        NodeType_SmartTag = 21,
        NodeType_System = 22,
        NodeType_Null = 23
    } NodeType;

    [
      uuid(5888DDCD-03BC-3932-926C-0E78AAE0F750),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Range)
    ]
    coclass Range {
        [default] interface _Range;
        interface _Object;
    };

    [
      uuid(C180C73A-BF21-35C8-96EA-F9DEE6B12DDD),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormFieldCollection)
    ]
    coclass FormFieldCollection {
        [default] interface _FormFieldCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(8E846F23-9039-3C43-881A-F28B753F4D4E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeCollection)
    ]
    coclass NodeCollection {
        [default] interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(37834402-CFD0-3159-8D61-CD6D313A87C7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventArgs)
    ]
    coclass NodeChangedEventArgs {
        [default] interface _NodeChangedEventArgs;
        interface _Object;
    };

    typedef [uuid(7B35E5B4-24B5-3381-94E2-A34667D7AD31), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedAction)    
]
    enum {
        NodeChangedAction_Insert = 0,
        NodeChangedAction_Remove = 1
    } NodeChangedAction;

    [
      uuid(C2641BAE-61DA-31CD-A1ED-565EA1941534),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventHandler)
    ]
    coclass NodeChangedEventHandler {
        [default] interface _NodeChangedEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(19197C1D-F62B-3143-856C-A9A448B87AF7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormField)
    ]
    coclass FormField {
        [default] interface _FormField;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(822D654D-6E18-34D6-BBB8-083B0D71AD0E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SpecialChar)
    ]
    coclass SpecialChar {
        [default] interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(44D89966-900A-3615-B94A-C343E0BDF573),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Inline)
    ]
    coclass Inline {
        [default] interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(35E1DA37-0FC2-3B0E-9194-7E74D0AC4AD2),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageSetup)
    ]
    coclass PageSetup {
        [default] interface _PageSetup;
        interface _Object;
    };

    typedef [uuid(65ECCEFE-4B4B-3F44-8B82-010EE8D61F3E), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Underline)    
]
    enum {
        Underline_None = 0,
        Underline_Single = 1,
        Underline_Words = 2,
        Underline_Double = 3,
        Underline_Dotted = 4,
        Underline_Thick = 6,
        Underline_Dash = 7,
        Underline_DashLong = 39,
        Underline_DotDash = 9,
        Underline_DotDotDash = 10,
        Underline_Wavy = 11,
        Underline_DottedHeavy = 20,
        Underline_DashHeavy = 23,
        Underline_DashLongHeavy = 55,
        Underline_DotDashHeavy = 25,
        Underline_DotDotDashHeavy = 26,
        Underline_WavyHeavy = 27,
        Underline_WavyDouble = 43
    } Underline;

    typedef [uuid(18DC00B3-7DA6-357D-912A-4A020AA31F30), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextEffect)    
]
    enum {
        TextEffect_None = 0,
        TextEffect_LasVegasLights = 1,
        TextEffect_BlinkingBackground = 2,
        TextEffect_SparkleText = 3,
        TextEffect_MarchingBlackAnts = 4,
        TextEffect_MarchingRedAnts = 5,
        TextEffect_Shimmer = 6
    } TextEffect;

    [
      uuid(478E2D5F-5241-3819-8F70-8937086E94E5),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Shading)
    ]
    coclass Shading {
        [default] interface _Shading;
        interface _Object;
    };

    typedef [uuid(132D36CB-B5FD-31F1-B7D1-9BBEAC98FE74), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextureIndex)    
]
    enum {
        TextureIndex_Texture10Percent = 3,
        TextureIndex_Texture12Pt5Percent = 37,
        TextureIndex_Texture15Percent = 38,
        TextureIndex_Texture17Pt5Percent = 39,
        TextureIndex_Texture20Percent = 4,
        TextureIndex_Texture22Pt5Percent = 40,
        TextureIndex_Texture25Percent = 5,
        TextureIndex_Texture27Pt5Percent = 41,
        TextureIndex_Texture2Pt5Percent = 35,
        TextureIndex_Texture30Percent = 6,
        TextureIndex_Texture32Pt5Percent = 42,
        TextureIndex_Texture35Percent = 43,
        TextureIndex_Texture37Pt5Percent = 44,
        TextureIndex_Texture40Percent = 7,
        TextureIndex_Texture42Pt5Percent = 45,
        TextureIndex_Texture45Percent = 46,
        TextureIndex_Texture47Pt5Percent = 47,
        TextureIndex_Texture50Percent = 8,
        TextureIndex_Texture52Pt5Percent = 48,
        TextureIndex_Texture55Percent = 49,
        TextureIndex_Texture57Pt5Percent = 50,
        TextureIndex_Texture5Percent = 2,
        TextureIndex_Texture60Percent = 9,
        TextureIndex_Texture62Pt5Percent = 51,
        TextureIndex_Texture65Percent = 52,
        TextureIndex_Texture67Pt5Percent = 53,
        TextureIndex_Texture70Percent = 10,
        TextureIndex_Texture72Pt5Percent = 54,
        TextureIndex_Texture75Percent = 11,
        TextureIndex_Texture77Pt5Percent = 55,
        TextureIndex_Texture7Pt5Percent = 36,
        TextureIndex_Texture80Percent = 12,
        TextureIndex_Texture82Pt5Percent = 56,
        TextureIndex_Texture85Percent = 57,
        TextureIndex_Texture87Pt5Percent = 58,
        TextureIndex_Texture90Percent = 13,
        TextureIndex_Texture92Pt5Percent = 59,
        TextureIndex_Texture95Percent = 60,
        TextureIndex_Texture97Pt5Percent = 61,
        TextureIndex_TextureCross = 24,
        TextureIndex_TextureDarkCross = 18,
        TextureIndex_TextureDarkDiagonalCross = 19,
        TextureIndex_TextureDarkDiagonalDown = 16,
        TextureIndex_TextureDarkDiagonalUp = 17,
        TextureIndex_TextureDarkHorizontal = 14,
        TextureIndex_TextureDarkVertical = 15,
        TextureIndex_TextureDiagonalCross = 25,
        TextureIndex_TextureDiagonalDown = 22,
        TextureIndex_TextureDiagonalUp = 23,
        TextureIndex_TextureHorizontal = 20,
        TextureIndex_TextureNone = 0,
        TextureIndex_TextureSolid = 1,
        TextureIndex_TextureVertical = 21
    } TextureIndex;

    [
      uuid(D8045330-0AC5-347E-83D6-C915B1DEDD82),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Paragraph)
    ]
    coclass Paragraph {
        [default] interface _Paragraph;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(A459224A-BDB7-3941-817F-DD30BA33EAC3), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphAlignment)    
]
    enum {
        ParagraphAlignment_Left = 0,
        ParagraphAlignment_Center = 1,
        ParagraphAlignment_Right = 2,
        ParagraphAlignment_Justify = 3,
        ParagraphAlignment_Distributed = 4
    } ParagraphAlignment;

    [
      uuid(64C80499-FC78-339D-BC81-61875C23128E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStopCollection)
    ]
    coclass TabStopCollection {
        [default] interface _TabStopCollection;
        interface _Object;
    };

    [
      uuid(F8E7B989-7ACE-3858-BA01-563C8427BD40),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStop)
    ]
    coclass TabStop {
        [default] interface _TabStop;
        interface _Object;
    };

    typedef [uuid(81BDC07E-77A3-3CE2-9661-87957D12B664), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabAlignment)    
]
    enum {
        TabAlignment_Left = 0,
        TabAlignment_Center = 1,
        TabAlignment_Right = 2,
        TabAlignment_Decimal = 3,
        TabAlignment_Bar = 4,
        TabAlignment_List = 6,
        TabAlignment_Clear = 7
    } TabAlignment;

    typedef [uuid(31191F46-1A78-357E-8669-F706AF2745AB), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabLeader)    
]
    enum {
        TabLeader_None = 0,
        TabLeader_Dots = 1,
        TabLeader_Dashes = 2,
        TabLeader_Line = 3,
        TabLeader_Heavy = 4,
        TabLeader_MiddleDot = 5
    } TabLeader;

    typedef [uuid(AD228819-9000-3521-917B-BFECB7A52015), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineSpacingRule)    
]
    enum {
        LineSpacingRule_AtLeast = 0,
        LineSpacingRule_Exactly = 1,
        LineSpacingRule_Multiple = 2
    } LineSpacingRule;

    typedef [uuid(0575CFA6-0FB7-3AB0-A865-A688E61A12DD), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.OutlineLevel)    
]
    enum {
        OutlineLevel_Level1 = 0,
        OutlineLevel_Level2 = 1,
        OutlineLevel_Level3 = 2,
        OutlineLevel_Level4 = 3,
        OutlineLevel_Level5 = 4,
        OutlineLevel_Level6 = 5,
        OutlineLevel_Level7 = 6,
        OutlineLevel_Level8 = 7,
        OutlineLevel_Level9 = 8,
        OutlineLevel_BodyText = 9
    } OutlineLevel;

    typedef [uuid(7D4D8B91-8F47-3483-85D7-0E236DE119EB), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.HorizontalAlignment)    
]
    enum {
        HorizontalAlignment_None = 0,
        HorizontalAlignment_Left = 1,
        HorizontalAlignment_Center = 2,
        HorizontalAlignment_Right = 3,
        HorizontalAlignment_Inside = 4,
        HorizontalAlignment_Outside = 5
    } HorizontalAlignment;

    typedef [uuid(9C6D6EA2-DA45-368F-91EB-C6D7CAB02130), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.VerticalAlignment)    
]
    enum {
        VerticalAlignment_None = 0,
        VerticalAlignment_Top = 1,
        VerticalAlignment_Center = 2,
        VerticalAlignment_Bottom = 3,
        VerticalAlignment_Inside = 4,
        VerticalAlignment_Outside = 5,
        VerticalAlignment_Inline = 0xffffffff
    } VerticalAlignment;

    typedef [uuid(5FB0BCE9-1134-3943-84CC-9C0CEAEE7790), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeightRule)    
]
    enum {
        HeightRule_AtLeast = 0,
        HeightRule_Exactly = 1,
        HeightRule_Auto = 2
    } HeightRule;

    typedef [uuid(3801888B-D1AD-3785-8DAD-A9CF8E5E166D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.RelativeHorizontalPosition)    
]
    enum {
        RelativeHorizontalPosition_Margin = 0,
        RelativeHorizontalPosition_Page = 1,
        RelativeHorizontalPosition_Column = 2,
        RelativeHorizontalPosition_Character = 3,
        RelativeHorizontalPosition_Default = 2
    } RelativeHorizontalPosition;

    typedef [uuid(0F9172A8-9F04-37D9-9BF8-E1200F21A83E), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.RelativeVerticalPosition)    
]
    enum {
        RelativeVerticalPosition_Margin = 0,
        RelativeVerticalPosition_Page = 1,
        RelativeVerticalPosition_Paragraph = 2,
        RelativeVerticalPosition_Line = 3,
        RelativeVerticalPosition_Default = 2
    } RelativeVerticalPosition;

    typedef [uuid(08EC284D-B1C9-3675-9EF0-2DA4521B4D30), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.WrapType)    
]
    enum {
        WrapType_None = 3,
        WrapType_Inline = 0,
        WrapType_TopBottom = 1,
        WrapType_Square = 2,
        WrapType_Tight = 4,
        WrapType_Through = 5
    } WrapType;

    typedef [uuid(3BC20647-2B57-35AE-8A09-AC2BDB98E0FF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextOrientation)    
]
    enum {
        TextOrientation_Horizontal = 0,
        TextOrientation_Downward = 1,
        TextOrientation_Upward = 3,
        TextOrientation_HorizontalRotatedFarEast = 4,
        TextOrientation_VerticalFarEast = 5
    } TextOrientation;

    [
      uuid(A165F225-30F7-3616-BB83-FC6DE542BF9F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphFormat)
    ]
    coclass ParagraphFormat {
        [default] interface _ParagraphFormat;
        interface _Object;
    };

    [
      uuid(5C12744C-B62C-38A5-B7D0-363E4601E0E0),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleCollection)
    ]
    coclass StyleCollection {
        [default] interface _StyleCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(396B08E4-58B5-3865-BA5E-761A7B2C1691), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleIdentifier)    
]
    enum {
        StyleIdentifier_BookTitle = 264,
        StyleIdentifier_CommentReference = 39,
        StyleIdentifier_DefaultParagraphFont = 65,
        StyleIdentifier_Emphasis = 88,
        StyleIdentifier_EndnoteReference = 42,
        StyleIdentifier_FollowedHyperlink = 86,
        StyleIdentifier_FootnoteReference = 38,
        StyleIdentifier_HtmlAcronym = 95,
        StyleIdentifier_HtmlCite = 97,
        StyleIdentifier_HtmlCode = 98,
        StyleIdentifier_HtmlDefinition = 99,
        StyleIdentifier_HtmlKeyboard = 100,
        StyleIdentifier_HtmlSample = 102,
        StyleIdentifier_HtmlTypewriter = 103,
        StyleIdentifier_HtmlVariable = 104,
        StyleIdentifier_Hyperlink = 85,
        StyleIdentifier_IntenseEmphasis = 261,
        StyleIdentifier_IntenseReference = 263,
        StyleIdentifier_LineNumber = 40,
        StyleIdentifier_PageNumber = 41,
        StyleIdentifier_PlaceholderText = 156,
        StyleIdentifier_Strong = 87,
        StyleIdentifier_SubtleEmphasis = 260,
        StyleIdentifier_SubtleReference = 262,
        StyleIdentifier_BalloonText = 153,
        StyleIdentifier_BodyText = 66,
        StyleIdentifier_BodyText2 = 80,
        StyleIdentifier_BodyText3 = 81,
        StyleIdentifier_BodyText1I = 77,
        StyleIdentifier_BodyText1I2 = 78,
        StyleIdentifier_BodyTextInd = 67,
        StyleIdentifier_BodyTextInd2 = 82,
        StyleIdentifier_BodyTextInd3 = 83,
        StyleIdentifier_Closing = 63,
        StyleIdentifier_CommentSubject = 106,
        StyleIdentifier_CommentText = 30,
        StyleIdentifier_Date = 76,
        StyleIdentifier_DocumentMap = 89,
        StyleIdentifier_EmailSignature = 91,
        StyleIdentifier_EndnoteText = 43,
        StyleIdentifier_Footer = 32,
        StyleIdentifier_FootnoteText = 29,
        StyleIdentifier_Header = 31,
        StyleIdentifier_Heading1 = 1,
        StyleIdentifier_Heading2 = 2,
        StyleIdentifier_Heading3 = 3,
        StyleIdentifier_Heading4 = 4,
        StyleIdentifier_Heading5 = 5,
        StyleIdentifier_Heading6 = 6,
        StyleIdentifier_Heading7 = 7,
        StyleIdentifier_Heading8 = 8,
        StyleIdentifier_Heading9 = 9,
        StyleIdentifier_HtmlAddress = 96,
        StyleIdentifier_HtmlTopOfForm = 92,
        StyleIdentifier_HtmlBottomOfForm = 93,
        StyleIdentifier_HtmlPreformatted = 101,
        StyleIdentifier_IntenseQuote = 181,
        StyleIdentifier_Macro = 45,
        StyleIdentifier_MessageHeader = 73,
        StyleIdentifier_NoteHeading = 79,
        StyleIdentifier_PlainText = 90,
        StyleIdentifier_Quote = 180,
        StyleIdentifier_Salutation = 75,
        StyleIdentifier_Signature = 64,
        StyleIdentifier_Subtitle = 74,
        StyleIdentifier_Title = 62,
        StyleIdentifier_Bibliography = 265,
        StyleIdentifier_BlockText = 84,
        StyleIdentifier_Caption = 34,
        StyleIdentifier_EnvelopeAddress = 36,
        StyleIdentifier_EnvelopeReturn = 37,
        StyleIdentifier_Index1 = 10,
        StyleIdentifier_Index2 = 11,
        StyleIdentifier_Index3 = 12,
        StyleIdentifier_Index4 = 13,
        StyleIdentifier_Index5 = 14,
        StyleIdentifier_Index6 = 15,
        StyleIdentifier_Index7 = 16,
        StyleIdentifier_Index8 = 17,
        StyleIdentifier_Index9 = 18,
        StyleIdentifier_IndexHeading = 33,
        StyleIdentifier_List = 47,
        StyleIdentifier_List2 = 50,
        StyleIdentifier_List3 = 51,
        StyleIdentifier_List4 = 52,
        StyleIdentifier_List5 = 53,
        StyleIdentifier_ListBullet = 48,
        StyleIdentifier_ListBullet2 = 54,
        StyleIdentifier_ListBullet3 = 55,
        StyleIdentifier_ListBullet4 = 56,
        StyleIdentifier_ListBullet5 = 57,
        StyleIdentifier_ListContinue = 68,
        StyleIdentifier_ListContinue2 = 69,
        StyleIdentifier_ListContinue3 = 70,
        StyleIdentifier_ListContinue4 = 71,
        StyleIdentifier_ListContinue5 = 72,
        StyleIdentifier_ListNumber = 49,
        StyleIdentifier_ListNumber2 = 58,
        StyleIdentifier_ListNumber3 = 59,
        StyleIdentifier_ListNumber4 = 60,
        StyleIdentifier_ListNumber5 = 61,
        StyleIdentifier_ListParagraph = 179,
        StyleIdentifier_NoSpacing = 157,
        StyleIdentifier_Normal = 0,
        StyleIdentifier_NormalWeb = 94,
        StyleIdentifier_NormalIndent = 28,
        StyleIdentifier_TableOfAuthorities = 44,
        StyleIdentifier_TableOfFigures = 35,
        StyleIdentifier_ToaHeading = 46,
        StyleIdentifier_Toc1 = 19,
        StyleIdentifier_Toc2 = 20,
        StyleIdentifier_Toc3 = 21,
        StyleIdentifier_Toc4 = 22,
        StyleIdentifier_Toc5 = 23,
        StyleIdentifier_Toc6 = 24,
        StyleIdentifier_Toc7 = 25,
        StyleIdentifier_Toc8 = 26,
        StyleIdentifier_Toc9 = 27,
        StyleIdentifier_TocHeading = 266,
        StyleIdentifier_Revision = 178,
        StyleIdentifier_OutlineList1 = 108,
        StyleIdentifier_OutlineList2 = 109,
        StyleIdentifier_OutlineList3 = 110,
        StyleIdentifier_NoList = 107,
        StyleIdentifier_ColorfulGrid = 171,
        StyleIdentifier_ColorfulGridAccent1 = 189,
        StyleIdentifier_ColorfulGridAccent2 = 203,
        StyleIdentifier_ColorfulGridAccent3 = 217,
        StyleIdentifier_ColorfulGridAccent4 = 231,
        StyleIdentifier_ColorfulGridAccent5 = 245,
        StyleIdentifier_ColorfulGridAccent6 = 259,
        StyleIdentifier_ColorfulList = 170,
        StyleIdentifier_ColorfulListAccent1 = 188,
        StyleIdentifier_ColorfulListAccent2 = 202,
        StyleIdentifier_ColorfulListAccent3 = 216,
        StyleIdentifier_ColorfulListAccent4 = 230,
        StyleIdentifier_ColorfulListAccent5 = 244,
        StyleIdentifier_ColorfulListAccent6 = 258,
        StyleIdentifier_ColorfulShading = 169,
        StyleIdentifier_ColorfulShadingAccent1 = 187,
        StyleIdentifier_ColorfulShadingAccent2 = 201,
        StyleIdentifier_ColorfulShadingAccent3 = 215,
        StyleIdentifier_ColorfulShadingAccent4 = 229,
        StyleIdentifier_ColorfulShadingAccent5 = 243,
        StyleIdentifier_ColorfulShadingAccent6 = 257,
        StyleIdentifier_DarkList = 168,
        StyleIdentifier_DarkListAccent1 = 186,
        StyleIdentifier_DarkListAccent2 = 200,
        StyleIdentifier_DarkListAccent3 = 214,
        StyleIdentifier_DarkListAccent4 = 228,
        StyleIdentifier_DarkListAccent5 = 242,
        StyleIdentifier_DarkListAccent6 = 256,
        StyleIdentifier_LightGrid = 160,
        StyleIdentifier_LightGridAccent1 = 174,
        StyleIdentifier_LightGridAccent2 = 192,
        StyleIdentifier_LightGridAccent3 = 206,
        StyleIdentifier_LightGridAccent4 = 220,
        StyleIdentifier_LightGridAccent5 = 234,
        StyleIdentifier_LightGridAccent6 = 248,
        StyleIdentifier_LightList = 159,
        StyleIdentifier_LightListAccent1 = 173,
        StyleIdentifier_LightListAccent2 = 191,
        StyleIdentifier_LightListAccent3 = 205,
        StyleIdentifier_LightListAccent4 = 219,
        StyleIdentifier_LightListAccent5 = 233,
        StyleIdentifier_LightListAccent6 = 247,
        StyleIdentifier_LightShading = 158,
        StyleIdentifier_LightShadingAccent1 = 172,
        StyleIdentifier_LightShadingAccent2 = 190,
        StyleIdentifier_LightShadingAccent3 = 204,
        StyleIdentifier_LightShadingAccent4 = 218,
        StyleIdentifier_LightShadingAccent5 = 232,
        StyleIdentifier_LightShadingAccent6 = 246,
        StyleIdentifier_MediumGrid1 = 165,
        StyleIdentifier_MediumGrid1Accent1 = 183,
        StyleIdentifier_MediumGrid1Accent2 = 197,
        StyleIdentifier_MediumGrid1Accent3 = 211,
        StyleIdentifier_MediumGrid1Accent4 = 225,
        StyleIdentifier_MediumGrid1Accent5 = 239,
        StyleIdentifier_MediumGrid1Accent6 = 253,
        StyleIdentifier_MediumGrid2 = 166,
        StyleIdentifier_MediumGrid2Accent1 = 184,
        StyleIdentifier_MediumGrid2Accent2 = 198,
        StyleIdentifier_MediumGrid2Accent3 = 212,
        StyleIdentifier_MediumGrid2Accent4 = 226,
        StyleIdentifier_MediumGrid2Accent5 = 240,
        StyleIdentifier_MediumGrid2Accent6 = 254,
        StyleIdentifier_MediumGrid3 = 167,
        StyleIdentifier_MediumGrid3Accent1 = 185,
        StyleIdentifier_MediumGrid3Accent2 = 199,
        StyleIdentifier_MediumGrid3Accent3 = 213,
        StyleIdentifier_MediumGrid3Accent4 = 227,
        StyleIdentifier_MediumGrid3Accent5 = 241,
        StyleIdentifier_MediumGrid3Accent6 = 255,
        StyleIdentifier_MediumList1 = 163,
        StyleIdentifier_MediumList1Accent1 = 177,
        StyleIdentifier_MediumList1Accent2 = 195,
        StyleIdentifier_MediumList1Accent3 = 209,
        StyleIdentifier_MediumList1Accent4 = 223,
        StyleIdentifier_MediumList1Accent5 = 237,
        StyleIdentifier_MediumList1Accent6 = 251,
        StyleIdentifier_MediumList2 = 164,
        StyleIdentifier_MediumList2Accent1 = 182,
        StyleIdentifier_MediumList2Accent2 = 196,
        StyleIdentifier_MediumList2Accent3 = 210,
        StyleIdentifier_MediumList2Accent4 = 224,
        StyleIdentifier_MediumList2Accent5 = 238,
        StyleIdentifier_MediumList2Accent6 = 252,
        StyleIdentifier_MediumShading1 = 161,
        StyleIdentifier_MediumShading1Accent1 = 175,
        StyleIdentifier_MediumShading1Accent2 = 193,
        StyleIdentifier_MediumShading1Accent3 = 207,
        StyleIdentifier_MediumShading1Accent4 = 221,
        StyleIdentifier_MediumShading1Accent5 = 235,
        StyleIdentifier_MediumShading1Accent6 = 249,
        StyleIdentifier_MediumShading2 = 162,
        StyleIdentifier_MediumShading2Accent1 = 176,
        StyleIdentifier_MediumShading2Accent2 = 194,
        StyleIdentifier_MediumShading2Accent3 = 208,
        StyleIdentifier_MediumShading2Accent4 = 222,
        StyleIdentifier_MediumShading2Accent5 = 236,
        StyleIdentifier_MediumShading2Accent6 = 250,
        StyleIdentifier_Table3DEffects1 = 142,
        StyleIdentifier_Table3DEffects2 = 143,
        StyleIdentifier_Table3DEffects3 = 144,
        StyleIdentifier_TableClassic1 = 114,
        StyleIdentifier_TableClassic2 = 115,
        StyleIdentifier_TableClassic3 = 116,
        StyleIdentifier_TableClassic4 = 117,
        StyleIdentifier_TableColorful1 = 118,
        StyleIdentifier_TableColorful2 = 119,
        StyleIdentifier_TableColorful3 = 120,
        StyleIdentifier_TableColumns1 = 121,
        StyleIdentifier_TableColumns2 = 122,
        StyleIdentifier_TableColumns3 = 123,
        StyleIdentifier_TableColumns4 = 124,
        StyleIdentifier_TableColumns5 = 125,
        StyleIdentifier_TableContemporary = 145,
        StyleIdentifier_TableElegant = 146,
        StyleIdentifier_TableGrid = 154,
        StyleIdentifier_TableGrid1 = 126,
        StyleIdentifier_TableGrid2 = 127,
        StyleIdentifier_TableGrid3 = 128,
        StyleIdentifier_TableGrid4 = 129,
        StyleIdentifier_TableGrid5 = 130,
        StyleIdentifier_TableGrid6 = 131,
        StyleIdentifier_TableGrid7 = 132,
        StyleIdentifier_TableGrid8 = 133,
        StyleIdentifier_TableList1 = 134,
        StyleIdentifier_TableList2 = 135,
        StyleIdentifier_TableList3 = 136,
        StyleIdentifier_TableList4 = 137,
        StyleIdentifier_TableList5 = 138,
        StyleIdentifier_TableList6 = 139,
        StyleIdentifier_TableList7 = 140,
        StyleIdentifier_TableList8 = 141,
        StyleIdentifier_TableNormal = 105,
        StyleIdentifier_TableProfessional = 147,
        StyleIdentifier_TableSimple1 = 111,
        StyleIdentifier_TableSimple2 = 112,
        StyleIdentifier_TableSimple3 = 113,
        StyleIdentifier_TableSubtle1 = 148,
        StyleIdentifier_TableSubtle2 = 149,
        StyleIdentifier_TableTheme = 155,
        StyleIdentifier_TableWeb1 = 150,
        StyleIdentifier_TableWeb2 = 151,
        StyleIdentifier_TableWeb3 = 152,
        StyleIdentifier_User = 4094,
        StyleIdentifier_Nil = 4095
    } StyleIdentifier;

    [
      uuid(EFF3F20A-05BE-3ED7-B384-DC7CBC6C9330),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Style)
    ]
    coclass Style {
        [default] interface _Style;
        interface _Object;
    };

    typedef [uuid(7804D1C4-67A0-39B5-A90E-9B80DD329FE0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleType)    
]
    enum {
        StyleType_Paragraph = 1,
        StyleType_Character = 2,
        StyleType_Table = 3,
        StyleType_List = 4
    } StyleType;

    [
      uuid(2BEB7633-B45D-30B9-BDD6-D1F7AEF8D8FA),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Font)
    ]
    coclass Font {
        [default] interface _Font;
        interface _Object;
    };

    typedef [uuid(E4EA3D9B-FB15-3FC0-B5AF-685D66E3A76A), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LoadFormat)    
]
    enum {
        LoadFormat_Auto = 0,
        LoadFormat_Doc = 1,
        LoadFormat_Html = 2,
        LoadFormat_Rtf = 3,
        LoadFormat_WordML = 4,
        LoadFormat_Docx = 5,
        LoadFormat_Odt = 6,
        LoadFormat_Unknown = 0x7fffffff
    } LoadFormat;

    [
      uuid(5E67F457-20F1-35DE-B36C-6D0840E8B400),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentVisitor)
    ]
    coclass DocumentVisitor {
        [default] interface _DocumentVisitor;
        interface _Object;
    };

    typedef [uuid(2402DBAC-3FC4-3F96-BAA5-2990A7D3BF94), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VisitorAction)    
]
    enum {
        VisitorAction_Continue = 0,
        VisitorAction_SkipThisNode = 1,
        VisitorAction_Stop = 2
    } VisitorAction;

    [
      uuid(11964795-BF06-3C80-9295-4E49E379C1AC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Section)
    ]
    coclass Section {
        [default] interface _Section;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(43BB0C02-822A-34FF-9E45-8538BB0142F9), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PaperTray)    
]
    enum {
        PaperTray_AutomaticSheetFeed = 7,
        PaperTray_DefaultBin = 0,
        PaperTray_EnvelopeFeed = 5,
        PaperTray_FormSource = 15,
        PaperTray_LargeCapacityBin = 11,
        PaperTray_LargeFormatBin = 10,
        PaperTray_LowerBin = 2,
        PaperTray_ManualEnvelopeFeed = 6,
        PaperTray_ManualFeed = 4,
        PaperTray_MiddleBin = 3,
        PaperTray_OnlyBin = 1,
        PaperTray_PaperCassette = 14,
        PaperTray_SmallFormatBin = 9,
        PaperTray_TractorFeed = 8,
        PaperTray_UpperBin = 1
    } PaperTray;

    typedef [uuid(19C14A6C-E47A-309D-AECD-575E57A7B881), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineNumberRestartMode)    
]
    enum {
        LineNumberRestartMode_RestartPage = 0,
        LineNumberRestartMode_RestartSection = 1,
        LineNumberRestartMode_Continuous = 2
    } LineNumberRestartMode;

    typedef [uuid(27EE96FE-530E-39D1-8E53-BFD851BD3B2B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Orientation)    
]
    enum {
        Orientation_Portrait = 1,
        Orientation_Landscape = 2
    } Orientation;

    typedef [uuid(9B47CDC9-D3E3-3F0C-B759-EA8BE56594C9), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageBorderAppliesTo)    
]
    enum {
        PageBorderAppliesTo_AllPages = 0,
        PageBorderAppliesTo_FirstPage = 1,
        PageBorderAppliesTo_OtherPages = 2
    } PageBorderAppliesTo;

    typedef [uuid(DCE15FAA-28BC-3722-88BA-89AE214A9819), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageBorderDistanceFrom)    
]
    enum {
        PageBorderDistanceFrom_Text = 0,
        PageBorderDistanceFrom_PageEdge = 1
    } PageBorderDistanceFrom;

    [
      uuid(9ED6A827-C0B7-3633-BC95-C4A6A2443357),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterCollection)
    ]
    coclass HeaderFooterCollection {
        [default] interface _HeaderFooterCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(2DEFD913-5011-31AA-BC43-76F6127EE1E6),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooter)
    ]
    coclass HeaderFooter {
        [default] interface _HeaderFooter;
        interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(8945D1FA-4F5D-3FC1-8E27-38137CE9F929),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Story)
    ]
    coclass Story {
        [default] interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(9EF948F7-E29B-3486-A480-B8854B618E02),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphCollection)
    ]
    coclass ParagraphCollection {
        [default] interface _ParagraphCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(C5749BE8-0993-365D-84F3-4C813930C2C0),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.TableCollection)
    ]
    coclass TableCollection {
        [default] interface _TableCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(66B9F515-B9BD-3E11-B11D-BF879B6E58A8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Table)
    ]
    coclass Table {
        [default] interface _Table;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(2734416A-79B4-34BC-A2C4-3EAE7613896B),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowCollection)
    ]
    coclass RowCollection {
        [default] interface _RowCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(3CB1A15B-E5D2-30AE-BE83-B3D371F43752),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Row)
    ]
    coclass Row {
        [default] interface _Row;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(BDFCDC4E-0628-322D-A719-7CADE6EAE6A4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowAlignment)    
]
    enum {
        RowAlignment_Left = 0,
        RowAlignment_Center = 1,
        RowAlignment_Right = 2
    } RowAlignment;

    typedef [uuid(039707DB-E5F0-3647-920A-5F8E659257BE), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellMerge)    
]
    enum {
        CellMerge_None = 0,
        CellMerge_First = 1,
        CellMerge_Previous = 2
    } CellMerge;

    typedef [uuid(5689125A-E5C3-3514-9F66-7F604561A1F9), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellVerticalAlignment)    
]
    enum {
        CellVerticalAlignment_Top = 0,
        CellVerticalAlignment_Center = 1,
        CellVerticalAlignment_Bottom = 2
    } CellVerticalAlignment;

    [
      uuid(5D16517C-CCB8-3F19-AE80-02E3AE41B3DE),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowFormat)
    ]
    coclass RowFormat {
        [default] interface _RowFormat;
        interface _Object;
    };

    [
      uuid(306C5F9C-09AF-35CA-B284-DEB2C78B06E1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellCollection)
    ]
    coclass CellCollection {
        [default] interface _CellCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(1F7E74B6-0A92-3F54-A492-AB8694C0FD31),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Cell)
    ]
    coclass Cell {
        [default] interface _Cell;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(0FA03EBB-8967-35F5-A26E-8BD5C56AB1C7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellFormat)
    ]
    coclass CellFormat {
        [default] interface _CellFormat;
        interface _Object;
    };

    [
      uuid(8CAECF04-BB59-35CE-BF95-D26188621861),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Run)
    ]
    coclass Run {
        [default] interface _Run;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(EAF7387E-B8A3-3D01-BA7F-8CABD643AE2E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeBase)
    ]
    coclass ShapeBase {
        [default] interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(015003F1-F329-3559-88DF-A27D5B74379B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeType)    
]
    enum {
        ShapeType_Image = 75,
        ShapeType_TextBox = 202,
        ShapeType_Group = 0xffffffff,
        ShapeType_OleObject = 0xfffffffe,
        ShapeType_OleControl = 201,
        ShapeType_NonPrimitive = 0,
        ShapeType_Rectangle = 1,
        ShapeType_RoundRectangle = 2,
        ShapeType_Ellipse = 3,
        ShapeType_Diamond = 4,
        ShapeType_Triangle = 5,
        ShapeType_RightTriangle = 6,
        ShapeType_Parallelogram = 7,
        ShapeType_Trapezoid = 8,
        ShapeType_Hexagon = 9,
        ShapeType_Octagon = 10,
        ShapeType_Plus = 11,
        ShapeType_Star = 12,
        ShapeType_Arrow = 13,
        ShapeType_ThickArrow = 14,
        ShapeType_HomePlate = 15,
        ShapeType_Cube = 16,
        ShapeType_Balloon = 17,
        ShapeType_Seal = 18,
        ShapeType_Arc = 19,
        ShapeType_Line = 20,
        ShapeType_Plaque = 21,
        ShapeType_Can = 22,
        ShapeType_Donut = 23,
        ShapeType_TextSimple = 24,
        ShapeType_TextOctagon = 25,
        ShapeType_TextHexagon = 26,
        ShapeType_TextCurve = 27,
        ShapeType_TextWave = 28,
        ShapeType_TextRing = 29,
        ShapeType_TextOnCurve = 30,
        ShapeType_TextOnRing = 31,
        ShapeType_StraightConnector1 = 32,
        ShapeType_BentConnector2 = 33,
        ShapeType_BentConnector3 = 34,
        ShapeType_BentConnector4 = 35,
        ShapeType_BentConnector5 = 36,
        ShapeType_CurvedConnector2 = 37,
        ShapeType_CurvedConnector3 = 38,
        ShapeType_CurvedConnector4 = 39,
        ShapeType_CurvedConnector5 = 40,
        ShapeType_Callout1 = 41,
        ShapeType_Callout2 = 42,
        ShapeType_Callout3 = 43,
        ShapeType_AccentCallout1 = 44,
        ShapeType_AccentCallout2 = 45,
        ShapeType_AccentCallout3 = 46,
        ShapeType_BorderCallout1 = 47,
        ShapeType_BorderCallout2 = 48,
        ShapeType_BorderCallout3 = 49,
        ShapeType_AccentBorderCallout1 = 50,
        ShapeType_AccentBorderCallout2 = 51,
        ShapeType_AccentBorderCallout3 = 52,
        ShapeType_Ribbon = 53,
        ShapeType_Ribbon2 = 54,
        ShapeType_Chevron = 55,
        ShapeType_Pentagon = 56,
        ShapeType_NoSmoking = 57,
        ShapeType_Seal8 = 58,
        ShapeType_Seal16 = 59,
        ShapeType_Seal32 = 60,
        ShapeType_WedgeRectCallout = 61,
        ShapeType_WedgeRRectCallout = 62,
        ShapeType_WedgeEllipseCallout = 63,
        ShapeType_Wave = 64,
        ShapeType_FoldedCorner = 65,
        ShapeType_LeftArrow = 66,
        ShapeType_DownArrow = 67,
        ShapeType_UpArrow = 68,
        ShapeType_LeftRightArrow = 69,
        ShapeType_UpDownArrow = 70,
        ShapeType_IrregularSeal1 = 71,
        ShapeType_IrregularSeal2 = 72,
        ShapeType_LightningBolt = 73,
        ShapeType_Heart = 74,
        ShapeType_QuadArrow = 76,
        ShapeType_LeftArrowCallout = 77,
        ShapeType_RightArrowCallout = 78,
        ShapeType_UpArrowCallout = 79,
        ShapeType_DownArrowCallout = 80,
        ShapeType_LeftRightArrowCallout = 81,
        ShapeType_UpDownArrowCallout = 82,
        ShapeType_QuadArrowCallout = 83,
        ShapeType_Bevel = 84,
        ShapeType_LeftBracket = 85,
        ShapeType_RightBracket = 86,
        ShapeType_LeftBrace = 87,
        ShapeType_RightBrace = 88,
        ShapeType_LeftUpArrow = 89,
        ShapeType_BentUpArrow = 90,
        ShapeType_BentArrow = 91,
        ShapeType_Seal24 = 92,
        ShapeType_StripedRightArrow = 93,
        ShapeType_NotchedRightArrow = 94,
        ShapeType_BlockArc = 95,
        ShapeType_SmileyFace = 96,
        ShapeType_VerticalScroll = 97,
        ShapeType_HorizontalScroll = 98,
        ShapeType_CircularArrow = 99,
        ShapeType_CustomShape = 100,
        ShapeType_UturnArrow = 101,
        ShapeType_CurvedRightArrow = 102,
        ShapeType_CurvedLeftArrow = 103,
        ShapeType_CurvedUpArrow = 104,
        ShapeType_CurvedDownArrow = 105,
        ShapeType_CloudCallout = 106,
        ShapeType_EllipseRibbon = 107,
        ShapeType_EllipseRibbon2 = 108,
        ShapeType_FlowChartProcess = 109,
        ShapeType_FlowChartDecision = 110,
        ShapeType_FlowChartInputOutput = 111,
        ShapeType_FlowChartPredefinedProcess = 112,
        ShapeType_FlowChartInternalStorage = 113,
        ShapeType_FlowChartDocument = 114,
        ShapeType_FlowChartMultidocument = 115,
        ShapeType_FlowChartTerminator = 116,
        ShapeType_FlowChartPreparation = 117,
        ShapeType_FlowChartManualInput = 118,
        ShapeType_FlowChartManualOperation = 119,
        ShapeType_FlowChartConnector = 120,
        ShapeType_FlowChartPunchedCard = 121,
        ShapeType_FlowChartPunchedTape = 122,
        ShapeType_FlowChartSummingJunction = 123,
        ShapeType_FlowChartOr = 124,
        ShapeType_FlowChartCollate = 125,
        ShapeType_FlowChartSort = 126,
        ShapeType_FlowChartExtract = 127,
        ShapeType_FlowChartMerge = 128,
        ShapeType_FlowChartOfflineStorage = 129,
        ShapeType_FlowChartOnlineStorage = 130,
        ShapeType_FlowChartMagneticTape = 131,
        ShapeType_FlowChartMagneticDisk = 132,
        ShapeType_FlowChartMagneticDrum = 133,
        ShapeType_FlowChartDisplay = 134,
        ShapeType_FlowChartDelay = 135,
        ShapeType_TextPlainText = 136,
        ShapeType_TextStop = 137,
        ShapeType_TextTriangle = 138,
        ShapeType_TextTriangleInverted = 139,
        ShapeType_TextChevron = 140,
        ShapeType_TextChevronInverted = 141,
        ShapeType_TextRingInside = 142,
        ShapeType_TextRingOutside = 143,
        ShapeType_TextArchUpCurve = 144,
        ShapeType_TextArchDownCurve = 145,
        ShapeType_TextCircleCurve = 146,
        ShapeType_TextButtonCurve = 147,
        ShapeType_TextArchUpPour = 148,
        ShapeType_TextArchDownPour = 149,
        ShapeType_TextCirclePour = 150,
        ShapeType_TextButtonPour = 151,
        ShapeType_TextCurveUp = 152,
        ShapeType_TextCurveDown = 153,
        ShapeType_TextCascadeUp = 154,
        ShapeType_TextCascadeDown = 155,
        ShapeType_TextWave1 = 156,
        ShapeType_TextWave2 = 157,
        ShapeType_TextWave3 = 158,
        ShapeType_TextWave4 = 159,
        ShapeType_TextInflate = 160,
        ShapeType_TextDeflate = 161,
        ShapeType_TextInflateBottom = 162,
        ShapeType_TextDeflateBottom = 163,
        ShapeType_TextInflateTop = 164,
        ShapeType_TextDeflateTop = 165,
        ShapeType_TextDeflateInflate = 166,
        ShapeType_TextDeflateInflateDeflate = 167,
        ShapeType_TextFadeRight = 168,
        ShapeType_TextFadeLeft = 169,
        ShapeType_TextFadeUp = 170,
        ShapeType_TextFadeDown = 171,
        ShapeType_TextSlantUp = 172,
        ShapeType_TextSlantDown = 173,
        ShapeType_TextCanUp = 174,
        ShapeType_TextCanDown = 175,
        ShapeType_FlowChartAlternateProcess = 176,
        ShapeType_FlowChartOffpageConnector = 177,
        ShapeType_Callout90 = 178,
        ShapeType_AccentCallout90 = 179,
        ShapeType_BorderCallout90 = 180,
        ShapeType_AccentBorderCallout90 = 181,
        ShapeType_LeftRightUpArrow = 182,
        ShapeType_Sun = 183,
        ShapeType_Moon = 184,
        ShapeType_BracketPair = 185,
        ShapeType_BracePair = 186,
        ShapeType_Seal4 = 187,
        ShapeType_DoubleWave = 188,
        ShapeType_ActionButtonBlank = 189,
        ShapeType_ActionButtonHome = 190,
        ShapeType_ActionButtonHelp = 191,
        ShapeType_ActionButtonInformation = 192,
        ShapeType_ActionButtonForwardNext = 193,
        ShapeType_ActionButtonBackPrevious = 194,
        ShapeType_ActionButtonEnd = 195,
        ShapeType_ActionButtonBeginning = 196,
        ShapeType_ActionButtonReturn = 197,
        ShapeType_ActionButtonDocument = 198,
        ShapeType_ActionButtonSound = 199,
        ShapeType_ActionButtonMovie = 200,
        ShapeType_MinValue = 0xfffffffe
    } ShapeType;

    typedef [uuid(4320FD87-496C-3508-A82C-E1A4589AEB38), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBoxWrapMode)    
]
    enum {
        TextBoxWrapMode_Square = 0,
        TextBoxWrapMode_None = 2
    } TextBoxWrapMode;

    typedef [uuid(E9A4BA38-1FBD-3EFD-AD16-0CC77B64FED1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.LayoutFlow)    
]
    enum {
        LayoutFlow_Horizontal = 0,
        LayoutFlow_TopToBottomIdeographic = 1,
        LayoutFlow_BottomToTop = 2,
        LayoutFlow_TopToBottom = 3,
        LayoutFlow_HorizontalIdeographic = 4,
        LayoutFlow_Vertical = 5
    } LayoutFlow;

    typedef [uuid(92BB7594-24CE-3494-9A09-FE3274B09444), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPathAlignment)    
]
    enum {
        TextPathAlignment_Stretch = 0,
        TextPathAlignment_Center = 1,
        TextPathAlignment_Left = 2,
        TextPathAlignment_Right = 3,
        TextPathAlignment_LetterJustify = 4,
        TextPathAlignment_WordJustify = 5
    } TextPathAlignment;

    typedef [uuid(D992612F-6D0B-3F53-B271-D0E996782E0C), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeLineStyle)    
]
    enum {
        ShapeLineStyle_Single = 0,
        ShapeLineStyle_Double = 1,
        ShapeLineStyle_ThickThin = 2,
        ShapeLineStyle_ThinThick = 3,
        ShapeLineStyle_Triple = 4
    } ShapeLineStyle;

    typedef [uuid(C5F21899-474F-35B0-9E09-9F9ABEE5593D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.DashStyle)    
]
    enum {
        DashStyle_Solid = 0,
        DashStyle_ShortDash = 1,
        DashStyle_ShortDot = 2,
        DashStyle_ShortDashDot = 3,
        DashStyle_ShortDashDotDot = 4,
        DashStyle_Dot = 5,
        DashStyle_Dash = 6,
        DashStyle_LongDash = 7,
        DashStyle_DashDot = 8,
        DashStyle_LongDashDot = 9,
        DashStyle_LongDashDotDot = 10
    } DashStyle;

    typedef [uuid(B8D2AA67-B894-3695-8FDB-5496B3597D61), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowType)    
]
    enum {
        ArrowType_None = 0,
        ArrowType_Arrow = 1,
        ArrowType_Block = 2,
        ArrowType_Diamond = 3,
        ArrowType_Oval = 4,
        ArrowType_Open = 5
    } ArrowType;

    typedef [uuid(0352AED7-D3E3-3200-A42F-D19985925DF5), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowWidth)    
]
    enum {
        ArrowWidth_Narrow = 0,
        ArrowWidth_Medium = 1,
        ArrowWidth_Wide = 2
    } ArrowWidth;

    typedef [uuid(2C6C389F-5EDF-34E7-9DB2-6BECBEBFA2F0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowLength)    
]
    enum {
        ArrowLength_Short = 0,
        ArrowLength_Medium = 1,
        ArrowLength_Long = 2
    } ArrowLength;

    typedef [uuid(D653E033-4C85-3A8F-9B5C-EAA5A41D49E4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.JoinStyle)    
]
    enum {
        JoinStyle_Bevel = 0,
        JoinStyle_Miter = 1,
        JoinStyle_Round = 2
    } JoinStyle;

    typedef [uuid(944CC36B-ED26-3CBC-B8AB-CB334025CD00), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.EndCap)    
]
    enum {
        EndCap_Round = 0,
        EndCap_Square = 1,
        EndCap_Flat = 2
    } EndCap;

    typedef [uuid(CCC7773A-370F-3ED7-B90B-A5356D83DDAF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.FlipOrientation)    
]
    enum {
        FlipOrientation_None = 0,
        FlipOrientation_Horizontal = 1,
        FlipOrientation_Vertical = 2,
        FlipOrientation_Both = 3
    } FlipOrientation;

    typedef [uuid(997A6DA2-12CB-3061-B2F9-8123BEBE2966), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.WrapSide)    
]
    enum {
        WrapSide_Both = 0,
        WrapSide_Left = 1,
        WrapSide_Right = 2,
        WrapSide_Largest = 3,
        WrapSide_Default = 0
    } WrapSide;

    [
      uuid(F1DFF3D1-2EB7-3423-BA83-BDC17501A8D4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Shape)
    ]
    coclass Shape {
        [default] interface _Shape;
        interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(FCCD66B0-4974-30AF-A2A1-819E4200FA8D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Stroke)
    ]
    coclass Stroke {
        [default] interface _Stroke;
        interface _Object;
    };

    [
      uuid(A3F36116-03DA-3875-A7BE-96FDB5A820B0),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Fill)
    ]
    coclass Fill {
        [default] interface _Fill;
        interface _Object;
    };

    [
      uuid(F8FE1C91-8B27-32C1-8329-DDA15F68D21A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageData)
    ]
    coclass ImageData {
        [default] interface _ImageData;
        interface _Object;
    };

    [
      uuid(DC31C140-46CC-31D0-ABB7-EB7C951DACF4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageSize)
    ]
    coclass ImageSize {
        [default] interface _ImageSize;
        interface _Object;
    };

    [
      uuid(013D9A0E-0207-3869-8D16-ED8C8E9811BE),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ConvertUtil)
    ]
    coclass ConvertUtil {
        [default] interface _ConvertUtil;
        interface _Object;
    };

    typedef [uuid(431E5EE5-0F95-30B8-92EA-4A83D09374EC), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageType)    
]
    enum {
        ImageType_NoImage = 0,
        ImageType_Unknown = 1,
        ImageType_Emf = 2,
        ImageType_Wmf = 3,
        ImageType_Pict = 4,
        ImageType_Jpeg = 5,
        ImageType_Png = 6,
        ImageType_Bmp = 7
    } ImageType;

    [
      uuid(2F5E63E8-40B7-3426-B4F3-724B4C4222DB),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.OleFormat)
    ]
    coclass OleFormat {
        [default] interface _OleFormat;
        interface _Object;
    };

    [
      uuid(AA2652E8-01B3-33D3-A983-52A5993013E9),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBox)
    ]
    coclass TextBox {
        [default] interface _TextBox;
        interface _Object;
    };

    [
      uuid(9A7885D9-E68F-3F78-AFE6-0306A8462A5D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPath)
    ]
    coclass TextPath {
        [default] interface _TextPath;
        interface _Object;
    };

    [
      uuid(93933157-0EC5-399A-B3D1-62CBD8897AA1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.GroupShape)
    ]
    coclass GroupShape {
        [default] interface _GroupShape;
        interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(4F5AA7EA-6D46-3B15-9D26-06170A1EF7EE),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Body)
    ]
    coclass Body {
        [default] interface _Body;
        interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(F41E2929-66D5-3AAE-9526-BEE0928AAFD4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ImportFormatMode)    
]
    enum {
        ImportFormatMode_UseDestinationStyles = 0,
        ImportFormatMode_KeepSourceFormatting = 1
    } ImportFormatMode;

    [
      uuid(6D711CE1-612C-3CBD-80F9-B89B5723A2E1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeImporter)
    ]
    coclass NodeImporter {
        [default] interface _NodeImporter;
        interface _Object;
    };

    [
      uuid(F6CAA64D-4D32-31A9-8E2F-FC0E8D4129B9),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListCollection)
    ]
    coclass ListCollection {
        [default] interface _ListCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(050795DB-53F5-3D30-BDFE-111381FA694D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListTemplate)    
]
    enum {
        ListTemplate_BulletDefault = 0,
        ListTemplate_BulletDisk = 0,
        ListTemplate_BulletCircle = 1,
        ListTemplate_BulletSquare = 2,
        ListTemplate_BulletDiamonds = 3,
        ListTemplate_BulletArrowHead = 4,
        ListTemplate_BulletTick = 5,
        ListTemplate_NumberDefault = 6,
        ListTemplate_NumberArabicDot = 6,
        ListTemplate_NumberArabicParenthesis = 7,
        ListTemplate_NumberUppercaseRomanDot = 8,
        ListTemplate_NumberUppercaseLetterDot = 9,
        ListTemplate_NumberLowercaseLetterParenthesis = 10,
        ListTemplate_NumberLowercaseLetterDot = 11,
        ListTemplate_NumberLowercaseRomanDot = 12,
        ListTemplate_OutlineNumbers = 13,
        ListTemplate_OutlineLegal = 14,
        ListTemplate_OutlineBullets = 15,
        ListTemplate_OutlineHeadingsArticleSection = 16,
        ListTemplate_OutlineHeadingsLegal = 17,
        ListTemplate_OutlineHeadingsNumbers = 18,
        ListTemplate_OutlineHeadingsChapter = 19
    } ListTemplate;

    [
      uuid(566E1170-93C6-33FB-B28C-427CEEE8BE0C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.List)
    ]
    coclass List {
        [default] interface _List;
        interface _Object;
    };

    [
      uuid(6A66957A-E122-3BB6-9C46-C4F4057F9126),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelCollection)
    ]
    coclass ListLevelCollection {
        [default] interface _ListLevelCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(FDC89311-1B27-39DC-ABF3-9CE83F033DD8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevel)
    ]
    coclass ListLevel {
        [default] interface _ListLevel;
        interface _Object;
    };

    typedef [uuid(2DF49526-82D8-3E08-9368-65A1E2CE92CF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelAlignment)    
]
    enum {
        ListLevelAlignment_Left = 0,
        ListLevelAlignment_Center = 1,
        ListLevelAlignment_Right = 2
    } ListLevelAlignment;

    typedef [uuid(A0AC8361-9A07-342B-BC91-9146CAF7287A), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListTrailingCharacter)    
]
    enum {
        ListTrailingCharacter_Tab = 0,
        ListTrailingCharacter_Space = 1,
        ListTrailingCharacter_Nothing = 2
    } ListTrailingCharacter;

    [
      uuid(DEAC0DD9-B680-3531-BF00-BB93BDF0D0EA),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ListFormat)
    ]
    coclass ListFormat {
        [default] interface _ListFormat;
        interface _Object;
    };

    [
      uuid(262102E7-6D7A-3BE8-9CA6-26D8974B34CF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldStart)
    ]
    coclass FieldStart {
        [default] interface _FieldStart;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(F5A7B431-F73E-3C88-8A22-575B46BB1D79),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldChar)
    ]
    coclass FieldChar {
        [default] interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    typedef [uuid(60CF2529-FCB5-3CC4-9A3B-C1ECBC3FAAF7), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldType)    
]
    enum {
        FieldType_FieldNone = 0,
        FieldType_FieldAddressBlock = 93,
        FieldType_FieldAdvance = 84,
        FieldType_FieldAsk = 38,
        FieldType_FieldAuthor = 17,
        FieldType_FieldAutoNum = 54,
        FieldType_FieldAutoNumLegal = 53,
        FieldType_FieldAutoNumOutline = 52,
        FieldType_FieldAutoText = 79,
        FieldType_FieldAutoTextList = 89,
        FieldType_FieldBarCode = 63,
        FieldType_FieldBidiOutline = 92,
        FieldType_FieldComments = 19,
        FieldType_FieldCompare = 80,
        FieldType_FieldCreateDate = 21,
        FieldType_FieldDatabase = 78,
        FieldType_FieldDate = 31,
        FieldType_FieldDDE = 45,
        FieldType_FieldDDEAuto = 46,
        FieldType_FieldDocProperty = 85,
        FieldType_FieldDocVariable = 64,
        FieldType_FieldEditTime = 25,
        FieldType_FieldEmbed = 58,
        FieldType_FieldEquation = 49,
        FieldType_FieldFileName = 29,
        FieldType_FieldFileSize = 69,
        FieldType_FieldFillIn = 39,
        FieldType_FieldFormCheckBox = 71,
        FieldType_FieldFormDropDown = 83,
        FieldType_FieldFormTextInput = 70,
        FieldType_FieldFormula = 34,
        FieldType_FieldGreetingLine = 94,
        FieldType_FieldGoToButton = 50,
        FieldType_FieldHyperlink = 88,
        FieldType_FieldIf = 7,
        FieldType_FieldIncludePicture = 67,
        FieldType_FieldIncludeText = 68,
        FieldType_FieldIndex = 8,
        FieldType_FieldIndexEntry = 4,
        FieldType_FieldInfo = 14,
        FieldType_FieldKeyword = 18,
        FieldType_FieldLastSavedBy = 20,
        FieldType_FieldLink = 56,
        FieldType_FieldListNum = 90,
        FieldType_FieldMacroButton = 51,
        FieldType_FieldMergeField = 59,
        FieldType_FieldMergeRec = 44,
        FieldType_FieldMergeSeq = 75,
        FieldType_FieldNext = 41,
        FieldType_FieldNextIf = 42,
        FieldType_FieldNoteRef = 72,
        FieldType_FieldNumChars = 28,
        FieldType_FieldNumPages = 26,
        FieldType_FieldNumWords = 27,
        FieldType_FieldOCX = 87,
        FieldType_FieldPage = 33,
        FieldType_FieldPageRef = 37,
        FieldType_FieldPrint = 48,
        FieldType_FieldPrintDate = 23,
        FieldType_FieldPrivate = 77,
        FieldType_FieldQuote = 35,
        FieldType_FieldRef = 3,
        FieldType_FieldRefDoc = 11,
        FieldType_FieldRevisionNum = 24,
        FieldType_FieldSaveDate = 22,
        FieldType_FieldSection = 65,
        FieldType_FieldSectionPages = 66,
        FieldType_FieldSequence = 12,
        FieldType_FieldSet = 6,
        FieldType_FieldShape = 95,
        FieldType_FieldSkipIf = 43,
        FieldType_FieldStyleRef = 10,
        FieldType_FieldSubject = 16,
        FieldType_FieldSymbol = 57,
        FieldType_FieldTemplate = 30,
        FieldType_FieldTime = 32,
        FieldType_FieldTitle = 15,
        FieldType_FieldTOA = 73,
        FieldType_FieldTOAEntry = 74,
        FieldType_FieldTOC = 13,
        FieldType_FieldTOCEntry = 9,
        FieldType_FieldUserAddress = 62,
        FieldType_FieldUserInitials = 61,
        FieldType_FieldUserName = 60
    } FieldType;

    [
      uuid(58E78F5E-DF6B-3F82-9C33-CAEAF54FE36D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldSeparator)
    ]
    coclass FieldSeparator {
        [default] interface _FieldSeparator;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(9E88EFE9-266E-3F8A-811B-B5F72692E922),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldEnd)
    ]
    coclass FieldEnd {
        [default] interface _FieldEnd;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(57E83F0C-0976-3F59-82C9-86FAACF75D29),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkStart)
    ]
    coclass BookmarkStart {
        [default] interface _BookmarkStart;
        interface _Node;
        interface _Object;
    };

    [
      uuid(71A77A4D-2849-3086-BC64-7EE2DAA95174),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Bookmark)
    ]
    coclass Bookmark {
        [default] interface _Bookmark;
        interface _Object;
    };

    [
      uuid(300D8B49-252B-39BC-9962-81FCE942B981),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkEnd)
    ]
    coclass BookmarkEnd {
        [default] interface _BookmarkEnd;
        interface _Node;
        interface _Object;
    };

    [
      uuid(5BFE5EA5-65DA-3C37-A31B-334FF4D67BE6),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBuilder)
    ]
    coclass DocumentBuilder {
        [default] interface _DocumentBuilder;
        interface _Object;
    };

    [
      uuid(4B2CFD3B-9C33-3300-B597-E70C62CC7AB8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.Field)
    ]
    coclass Field {
        [default] interface _Field;
        interface _Object;
    };

    [
      uuid(4F097D2C-6EE4-30D1-AED3-CD5CAE44B8A9),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentProperty)
    ]
    coclass DocumentProperty {
        [default] interface _DocumentProperty;
        interface _Object;
    };

    typedef [uuid(FCF0673A-2619-3CBC-B7D6-992CA77FF951), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.PropertyType)    
]
    enum {
        PropertyType_Boolean = 0,
        PropertyType_DateTime = 1,
        PropertyType_Double = 2,
        PropertyType_Number = 3,
        PropertyType_String = 4,
        PropertyType_StringArray = 5,
        PropertyType_ObjectArray = 6,
        PropertyType_Other = 7
    } PropertyType;

    [
      uuid(FDEA7749-9CA7-3F37-AB32-6908123BF5CD),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.BuiltInDocumentProperties)
    ]
    coclass BuiltInDocumentProperties {
        [default] interface _BuiltInDocumentProperties;
        interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(F4ED112F-1108-32F4-A973-11E151BFD51E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentPropertyCollection)
    ]
    coclass DocumentPropertyCollection {
        [default] interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(7FAEB54B-FFBF-3A50-ACBC-28BA3884D804),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.CustomDocumentProperties)
    ]
    coclass CustomDocumentProperties {
        [default] interface _CustomDocumentProperties;
        interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(64719061-E21B-3537-9EF5-B39D040C6CF0),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VariableCollection)
    ]
    coclass VariableCollection {
        [default] interface _VariableCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(945C7C7E-5FB3-39E0-BF69-F6A33BD2A89A), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BreakType)    
]
    enum {
        BreakType_ParagraphBreak = 0,
        BreakType_PageBreak = 1,
        BreakType_ColumnBreak = 2,
        BreakType_SectionBreakContinuous = 3,
        BreakType_SectionBreakNewColumn = 4,
        BreakType_SectionBreakNewPage = 5,
        BreakType_SectionBreakEvenPage = 6,
        BreakType_SectionBreakOddPage = 7,
        BreakType_LineBreak = 8
    } BreakType;

    typedef [uuid(BB813DD1-C60F-3E68-AD2B-4AD35D43291E), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.TextFormFieldType)    
]
    enum {
        TextFormFieldType_RegularText = 0,
        TextFormFieldType_NumberText = 1,
        TextFormFieldType_DateText = 2
    } TextFormFieldType;

    [
      uuid(D3160B2F-6E02-309D-AC20-2219496B4B3E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.DropDownItemCollection)
    ]
    coclass DropDownItemCollection {
        [default] interface _DropDownItemCollection;
        interface _Object;
        interface IList;
        interface ICollection;
        interface IEnumerable;
    };

    [
      uuid(81F45484-D246-3961-ADE3-BC597919EFBC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldExtractedEventHandler)
    ]
    coclass FieldExtractedEventHandler {
        [default] interface _FieldExtractedEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(B0F0F245-EF73-31FB-9235-45AE6AC90542),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Footnote)
    ]
    coclass Footnote {
        [default] interface _Footnote;
        interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(929E2771-7B64-3E77-B023-12FBEC0E822A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.InlineStory)
    ]
    coclass InlineStory {
        [default] interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(AFEAA8CC-5297-3610-A3B2-21C3B9314141),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOptions)
    ]
    coclass SaveOptions {
        [default] interface _SaveOptions;
        interface _Object;
    };

    typedef [uuid(E7BBB833-E4A3-327C-A5B7-70126AF276AF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CssStyleSheetType)    
]
    enum {
        CssStyleSheetType_Inline = 0,
        CssStyleSheetType_Embedded = 1,
        CssStyleSheetType_External = 2
    } CssStyleSheetType;

    typedef [uuid(7449D19E-7503-3821-8C52-3E64986A10C2), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ProtectionType)    
]
    enum {
        ProtectionType_AllowOnlyComments = 1,
        ProtectionType_AllowOnlyFormFields = 2,
        ProtectionType_AllowOnlyRevisions = 0,
        ProtectionType_ReadOnly = 3,
        ProtectionType_NoProtection = 0xffffffff
    } ProtectionType;

    typedef [uuid(63F33309-982F-33B2-A2AA-B01C48EAFDDF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveFormat)    
]
    enum {
        SaveFormat_None = 0,
        SaveFormat_Doc = 1,
        SaveFormat_Text = 2,
        SaveFormat_AsposePdf = 3,
        SaveFormat_Html = 4,
        SaveFormat_WordML = 5,
        SaveFormat_Rtf = 6,
        SaveFormat_Docx = 8,
        SaveFormat_Docm = 9,
        SaveFormat_Odt = 12,
        SaveFormat_Mhtml = 13
    } SaveFormat;

    [
      uuid(EB09E8D1-6687-3A4A-9A55-B2891B07011E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Comment)
    ]
    coclass Comment {
        [default] interface _Comment;
        interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(B286A4CE-D52C-32B2-B035-4EA0D98478CB),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.SmartTag)
    ]
    coclass SmartTag {
        [default] interface _SmartTag;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(BF9C2D8E-767B-3329-A8B2-B9F6C32BEFB3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlPropertyCollection)
    ]
    coclass CustomXmlPropertyCollection {
        [default] interface _CustomXmlPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(D9ED7AC4-5C4D-3FCD-AACB-CF26703A4871),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlProperty)
    ]
    coclass CustomXmlProperty {
        [default] interface _CustomXmlProperty;
        interface _Object;
    };

    [
      uuid(81691EEB-7443-399B-9161-16F652B78945),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionCollection)
    ]
    coclass SectionCollection {
        [default] interface _SectionCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(58627287-9BE0-3C15-B4BE-2133DDCB4963),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MailMerge)
    ]
    coclass MailMerge {
        [default] interface _MailMerge;
        interface _Object;
    };

    [
      uuid(B49B7161-DE8A-3068-9B67-85AB5E4948CD),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventHandler)
    ]
    coclass MergeFieldEventHandler {
        [default] interface _MergeFieldEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(12A16A5D-F3B5-389C-BAC6-3F983DC2D296),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgs)
    ]
    coclass MergeFieldEventArgs {
        [default] interface _MergeFieldEventArgs;
        interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(68D90401-9DF9-3D85-86B8-2155FB5D221C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgsBase)
    ]
    coclass MergeFieldEventArgsBase {
        [default] interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(D178D906-DA94-3EA3-9FE9-7422E659A1C4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventHandler)
    ]
    coclass MergeImageFieldEventHandler {
        [default] interface _MergeImageFieldEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(E37A685B-30F8-3A17-B2B5-1CD7F6B596B8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventArgs)
    ]
    coclass MergeImageFieldEventArgs {
        [default] interface _MergeImageFieldEventArgs;
        interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(1C4CB4F5-3BC3-3FFE-A2A1-18938B5FDCD6),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MappedDataFieldCollection)
    ]
    coclass MappedDataFieldCollection {
        [default] interface _MappedDataFieldCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(AC47F9FD-5832-344D-A22D-A56014D07CC2),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.UnsupportedFileFormatException)
    ]
    coclass UnsupportedFileFormatException {
        [default] interface _UnsupportedFileFormatException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    [
      uuid(2E825E27-AFCD-3ECF-A405-95693B4218AE),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.RunCollection)
    ]
    coclass RunCollection {
        [default] interface _RunCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(D6CADDC7-3E81-3BDA-8417-811CC831C3AC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileCorruptedException)
    ]
    coclass FileCorruptedException {
        [default] interface _FileCorruptedException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    [
      uuid(72690B24-4CC5-3284-ADFB-CD99A0B6F829),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkCollection)
    ]
    coclass BookmarkCollection {
        [default] interface _BookmarkCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(3E7F5F7B-F300-37C1-A129-0BB765D0EE94),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluator)
    ]
    coclass ReplaceEvaluator {
        [default] interface _ReplaceEvaluator;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(DD84C088-8068-3486-839E-8B5827DA2DD8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluatorArgs)
    ]
    coclass ReplaceEvaluatorArgs {
        [default] interface _ReplaceEvaluatorArgs;
        interface _Object;
    };

    typedef [uuid(56ACF588-C73F-3A93-B12D-8311020956E2), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceAction)    
]
    enum {
        ReplaceAction_Replace = 0,
        ReplaceAction_Skip = 1,
        ReplaceAction_Stop = 2
    } ReplaceAction;

    [
      uuid(74614A2C-201F-3D1C-93B2-265B3901897C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeList)
    ]
    coclass NodeList {
        [default] interface _NodeList;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(4552D2EC-975C-3896-A1F5-8863224DA8A0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveType)    
]
    enum {
        SaveType_OpenInWord = 0,
        SaveType_OpenInBrowser = 1
    } SaveType;

    typedef [uuid(EFE11751-658C-398C-9C61-AEAAA6B32580), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageBounds)    
]
    enum {
        PageBounds_None = 0,
        PageBounds_Separator = 1,
        PageBounds_Border = 2,
        PageBounds_Border3D = 3
    } PageBounds;

    [
      uuid(B2D4C75E-ECA8-3569-AD0B-C52F48897D1C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteOptions)
    ]
    coclass FootnoteOptions {
        [default] interface _FootnoteOptions;
        interface _Object;
    };

    typedef [uuid(92379327-124C-3DAF-B03C-BA0231B177C4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteLocation)    
]
    enum {
        FootnoteLocation_BottomOfPage = 1,
        FootnoteLocation_BeneathText = 2,
        FootnoteLocation_EndOfSection = 0,
        FootnoteLocation_EndOfDocument = 3
    } FootnoteLocation;

    typedef [uuid(8132C6B7-41A9-34B0-AEC5-058FF1C963DB), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NumberStyle)    
]
    enum {
        NumberStyle_Arabic = 0,
        NumberStyle_UppercaseRoman = 1,
        NumberStyle_LowercaseRoman = 2,
        NumberStyle_UppercaseLetter = 3,
        NumberStyle_LowercaseLetter = 4,
        NumberStyle_Ordinal = 5,
        NumberStyle_Number = 6,
        NumberStyle_OrdinalText = 7,
        NumberStyle_Hex = 8,
        NumberStyle_ChicagoManual = 9,
        NumberStyle_Kanji = 10,
        NumberStyle_KanjiDigit = 11,
        NumberStyle_AiueoHalfWidth = 12,
        NumberStyle_IrohaHalfWidth = 13,
        NumberStyle_ArabicFullWidth = 14,
        NumberStyle_ArabicHalfWidth = 15,
        NumberStyle_KanjiTraditional = 16,
        NumberStyle_KanjiTraditional2 = 17,
        NumberStyle_NumberInCircle = 18,
        NumberStyle_DecimalFullWidth = 19,
        NumberStyle_Aiueo = 20,
        NumberStyle_Iroha = 21,
        NumberStyle_LeadingZero = 22,
        NumberStyle_Bullet = 23,
        NumberStyle_Ganada = 24,
        NumberStyle_Chosung = 25,
        NumberStyle_GB1 = 26,
        NumberStyle_GB2 = 27,
        NumberStyle_GB3 = 28,
        NumberStyle_GB4 = 29,
        NumberStyle_Zodiac1 = 30,
        NumberStyle_Zodiac2 = 31,
        NumberStyle_Zodiac3 = 32,
        NumberStyle_TradChinNum1 = 33,
        NumberStyle_TradChinNum2 = 34,
        NumberStyle_TradChinNum3 = 35,
        NumberStyle_TradChinNum4 = 36,
        NumberStyle_SimpChinNum1 = 37,
        NumberStyle_SimpChinNum2 = 38,
        NumberStyle_SimpChinNum3 = 39,
        NumberStyle_SimpChinNum4 = 40,
        NumberStyle_HanjaRead = 41,
        NumberStyle_HanjaReadDigit = 42,
        NumberStyle_Hangul = 43,
        NumberStyle_Hanja = 44,
        NumberStyle_Hebrew1 = 45,
        NumberStyle_Arabic1 = 46,
        NumberStyle_Hebrew2 = 47,
        NumberStyle_Arabic2 = 48,
        NumberStyle_HindiLetter1 = 49,
        NumberStyle_HindiLetter2 = 50,
        NumberStyle_HindiArabic = 51,
        NumberStyle_HindiCardinalText = 52,
        NumberStyle_ThaiLetter = 53,
        NumberStyle_ThaiArabic = 54,
        NumberStyle_ThaiCardinalText = 55,
        NumberStyle_VietCardinalText = 56,
        NumberStyle_NumberInDash = 57,
        NumberStyle_LowercaseRussian = 58,
        NumberStyle_UppercaseRussian = 59,
        NumberStyle_None = 255
    } NumberStyle;

    typedef [uuid(E13A241A-F8B7-324C-8CB2-EBCC45A63326), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteNumberingRule)    
]
    enum {
        FootnoteNumberingRule_Continuous = 0,
        FootnoteNumberingRule_RestartSection = 1,
        FootnoteNumberingRule_RestartPage = 2
    } FootnoteNumberingRule;

    [
      uuid(BDAD3300-9700-3789-90DD-C2D58001155E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompatibilityOptions)
    ]
    coclass CompatibilityOptions {
        [default] interface _CompatibilityOptions;
        interface _Object;
    };

    [
      uuid(3D972440-809C-350F-AB16-5336E2356E13),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ViewOptions)
    ]
    coclass ViewOptions {
        [default] interface _ViewOptions;
        interface _Object;
    };

    typedef [uuid(3C23930B-8997-3682-9E9B-B0D8E1B29242), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ViewType)    
]
    enum {
        ViewType_None = 0,
        ViewType_Normal = 4,
        ViewType_Outline = 3,
        ViewType_PageLayout = 1,
        ViewType_Web = 5
    } ViewType;

    typedef [uuid(7EF37554-9795-3D19-B1EE-B64438BBA5F9), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ZoomType)    
]
    enum {
        ZoomType_None = 0,
        ZoomType_FullPage = 1,
        ZoomType_PageWidth = 2,
        ZoomType_TextFit = 3
    } ZoomType;

    [
      uuid(DE039A51-3147-37C4-838F-04B04DE4D3C1),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ComHelper)
    ]
    coclass ComHelper {
        [default] interface _ComHelper;
        interface _Object;
    };

    [
      uuid(FF225667-00AA-33D9-A17F-9522A5A3A0D4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageEventArgs)
    ]
    coclass PageEventArgs {
        [default] interface _PageEventArgs;
        interface _Object;
    };

    [
      uuid(83066462-C1DB-3DE6-B75C-D093EC3290D6),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageEventHandler)
    ]
    coclass PageEventHandler {
        [default] interface _PageEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(18FF5323-4969-3B82-AAEB-DA06438848E4),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.DocumentRenderer)
    ]
    coclass DocumentRenderer {
        [default] interface _DocumentRenderer;
        interface _Object;
    };

    [
      uuid(D04F9754-20BE-3299-B407-F444D88F8311),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumnCollection)
    ]
    coclass TextColumnCollection {
        [default] interface _TextColumnCollection;
        interface _Object;
    };

    [
      uuid(5FCDB60D-0518-3CA2-9ED6-2CA6E9109B2E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageNavigator)
    ]
    coclass PageNavigator {
        [default] interface _PageNavigator;
        interface _Object;
    };

    [
      uuid(B9E378A2-06B7-370D-AF86-54DBFED882A6),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.License)
    ]
    coclass License {
        [default] interface _License;
        interface _Object;
    };

    [
      odl,
      uuid(4A4654E5-D1F8-3684-B7CA-E0ED5165B644),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumn)    

    ]
    interface _TextColumn : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020004), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020006), propget]
        HRESULT SpaceAfter([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT SpaceAfter([in] double pRetVal);
    };

    [
      odl,
      uuid(A68ED0A9-5A2B-379C-AA65-C6E91F4B2F94),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderCollection)    

    ]
    interface _BorderCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BorderType BorderType, 
                        [out, retval] _Border** pRetVal);
        [id(0x60020006), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Border** pRetVal);
        [id(0x60020007), propget]
        HRESULT Left([out, retval] _Border** pRetVal);
        [id(0x60020008), propget]
        HRESULT Right([out, retval] _Border** pRetVal);
        [id(0x60020009), propget]
        HRESULT Top([out, retval] _Border** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Bottom([out, retval] _Border** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Horizontal([out, retval] _Border** pRetVal);
        [id(0x6002000c), propget]
        HRESULT Vertical([out, retval] _Border** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002000e), propget]
        HRESULT LineWidth([out, retval] double* pRetVal);
        [id(0x6002000e), propput]
        HRESULT LineWidth([in] double pRetVal);
        [id(0x60020010), propget]
        HRESULT LineStyle([out, retval] LineStyle* pRetVal);
        [id(0x60020010), propput]
        HRESULT LineStyle([in] LineStyle pRetVal);
        [id(0x60020012), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020012), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x60020014), propget]
        HRESULT DistanceFromText([out, retval] double* pRetVal);
        [id(0x60020014), propput]
        HRESULT DistanceFromText([in] double pRetVal);
        [id(0x60020016), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x60020018)]
        HRESULT ClearFormatting();
    };

    [
      odl,
      uuid(2254AD04-A151-3921-AC32-F3C28EB81483),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Border)    

    ]
    interface _Border : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT LineStyle([out, retval] LineStyle* pRetVal);
        [id(0x60020005), propput]
        HRESULT LineStyle([in] LineStyle pRetVal);
        [id(0x60020007), propget]
        HRESULT LineWidth([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT LineWidth([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT IsVisible([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002000c), propget]
        HRESULT DistanceFromText([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DistanceFromText([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(8FD7E919-198E-3AF3-A632-EAAA391DA81F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PleaseReportException)    

    ]
    interface _PleaseReportException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(518AD666-F312-3F94-963E-FA6BCD8AEFFF),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ControlChar)    

    ]
    interface _ControlChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(3133DA66-BA7C-3E9F-A426-783A3C1DD18D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Document)    

    ]
    interface _Document : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT AttachedTemplate([out, retval] BSTR* pRetVal);
        [id(0x60020026), propput]
        HRESULT AttachedTemplate([in] BSTR pRetVal);
        [id(0x60020028), propget]
        HRESULT IsTemplate([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propput]
        HRESULT IsTemplate([in] VARIANT_BOOL pRetVal);
        [id(0x6002002a), propget]
        HRESULT ShadeFormData([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propput]
        HRESULT ShadeFormData([in] VARIANT_BOOL pRetVal);
        [id(0x6002002c), propget]
        HRESULT TrackRevisions([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propput]
        HRESULT TrackRevisions([in] VARIANT_BOOL pRetVal);
        [id(0x6002002e), propget]
        HRESULT BuiltInDocumentProperties([out, retval] _BuiltInDocumentProperties** pRetVal);
        [id(0x6002002f), propget]
        HRESULT CustomDocumentProperties([out, retval] _CustomDocumentProperties** pRetVal);
        [id(0x60020030), propget]
        HRESULT Variables([out, retval] _VariableCollection** pRetVal);
        [id(0x60020031), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
        [id(0x60020032), propget]
        HRESULT MailMerge([out, retval] _MailMerge** pRetVal);
        [id(0x60020033), propget]
        HRESULT ProtectionType([out, retval] ProtectionType* pRetVal);
        [id(0x60020034), propget]
        HRESULT Sections([out, retval] _SectionCollection** pRetVal);
        [id(0x60020035), propget]
        HRESULT FirstSection([out, retval] _Section** pRetVal);
        [id(0x60020036), propget]
        HRESULT LastSection([out, retval] _Section** pRetVal);
        [id(0x60020037), propget]
        HRESULT SaveOptions([out, retval] _SaveOptions** pRetVal);
        [id(0x60020037), propputref]
        HRESULT SaveOptions([in] _SaveOptions* pRetVal);
        [id(0x60020039), propget]
        HRESULT ViewOptions([out, retval] _ViewOptions** pRetVal);
        [id(0x6002003a), propget]
        HRESULT CompatibilityOptions([out, retval] _CompatibilityOptions** pRetVal);
        [id(0x6002003b), propget]
        HRESULT FootnoteOptions([out, retval] _FootnoteOptions** pRetVal);
        [id(0x6002003c), propget]
        HRESULT EndnoteOptions([out, retval] _FootnoteOptions** pRetVal);
        [id(0x6002003d), propget]
        HRESULT HasRevisions([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propget]
        HRESULT HasMacros([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003f), propget]
        HRESULT VersionsCount([out, retval] long* pRetVal);
        [id(0x60020040), propget]
        HRESULT DefaultTabStop([out, retval] double* pRetVal);
        [id(0x60020040), propput]
        HRESULT DefaultTabStop([in] double pRetVal);
        [id(0x60020042)]
        HRESULT add_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x60020043)]
        HRESULT remove_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x60020044)]
        HRESULT add_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x60020045)]
        HRESULT remove_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x60020046)]
        HRESULT add_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x60020047)]
        HRESULT remove_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x60020048)]
        HRESULT add_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020049)]
        HRESULT remove_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x6002004a), propget]
        HRESULT Lists([out, retval] _ListCollection** pRetVal);
        [id(0x6002004b), propget]
        HRESULT OriginalFileName([out, retval] BSTR* pRetVal);
        [id(0x6002004c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Clone)]
        HRESULT Clone_2([out, retval] _Document** pRetVal);
        [id(0x6002004d)]
        HRESULT AppendDocument(
                        [in] _Document* srcDoc, 
                        [in] ImportFormatMode ImportFormatMode);
        [id(0x6002004e)]
        HRESULT Save([in] BSTR fileName);
        [id(0x6002004f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2(
                        [in] BSTR fileName, 
                        [in] SaveFormat fileFormat);
        [id(0x60020050),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_3(
                        [in] _Stream* stream, 
                        [in] SaveFormat SaveFormat);
        [id(0x60020051),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_4(
                        [in] VARIANT destination, 
                        [in] SaveFormat fileFormat);
        [id(0x60020052),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_5(
                        [in] BSTR fileName, 
                        [in] SaveFormat fileFormat, 
                        [in] SaveType SaveType, 
                        [in] IUnknown* response);
        [id(0x60020053)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020054),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ImportNode)]
        HRESULT ImportNode_2(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [in] ImportFormatMode ImportFormatMode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020055)]
        HRESULT EnsureMinimum();
        [id(0x60020056)]
        HRESULT AcceptAllRevisions();
        [id(0x60020057)]
        HRESULT Protect([in] ProtectionType type);
        [id(0x60020058),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Protect)]
        HRESULT Protect_2(
                        [in] ProtectionType type, 
                        [in] BSTR password);
        [id(0x60020059)]
        HRESULT Unprotect();
        [id(0x6002005a)]
        HRESULT UpdateWordCount();
        [id(0x6002005b)]
        HRESULT UpdateTableLayout();
        [id(0x6002005c)]
        HRESULT RemoveMacros();
        [id(0x6002005d)]
        HRESULT UpdateFields();
        [id(0x6002005e)]
        HRESULT JoinRunsWithSameFormatting([out, retval] long* pRetVal);
    };

    [
      odl,
      uuid(1DF36492-61F6-32E0-927B-FFD07CBD1CC8),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompositeNode)    

    ]
    interface _CompositeNode : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
    };

    [
      odl,
      uuid(4455CF9E-10FF-3DE9-90B6-CFB4AB7D39BE),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Node)    

    ]
    interface _Node : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(CA56C037-F94B-3193-9DBF-473A4C43A552),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Range)    

    ]
    interface _Range : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT FormFields([out, retval] _FormFieldCollection** pRetVal);
        [id(0x60020006), propget]
        HRESULT Bookmarks([out, retval] _BookmarkCollection** pRetVal);
        [id(0x60020007)]
        HRESULT Delete();
        [id(0x60020008)]
        HRESULT Replace(
                        [in] BSTR oldValue, 
                        [in] BSTR newValue, 
                        [in] VARIANT_BOOL isMatchCase, 
                        [in] VARIANT_BOOL isMatchWholeWord, 
                        [out, retval] long* pRetVal);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Replace)]
        HRESULT Replace_2(
                        [in] IUnknown* pattern, 
                        [in] BSTR replacement, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Replace)]
        HRESULT Replace_3(
                        [in] IUnknown* pattern, 
                        [in] _ReplaceEvaluator* evaluator, 
                        [in] VARIANT_BOOL isForward, 
                        [out, retval] long* pRetVal);
        [id(0x6002000b)]
        HRESULT UpdateFields();
    };

    [
      odl,
      uuid(9E5269A6-285E-3585-B28E-0924C645304E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormFieldCollection)    

    ]
    interface _FormFieldCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _FormField** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] BSTR bookmarkName, 
                        [out, retval] _FormField** pRetVal);
        [id(0x60020008)]
        HRESULT Remove([in] _FormField* FormField);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Remove)]
        HRESULT Remove_2([in] BSTR FormField);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(47276ED5-BBD6-3101-AA11-0C8900D5495D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeCollection)    

    ]
    interface _NodeCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
    };

    [
      odl,
      uuid(999D0307-4592-34E5-B758-0E123501950A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventArgs)    

    ]
    interface _NodeChangedEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Node([out, retval] _Node** pRetVal);
        [id(0x60020005), propget]
        HRESULT OldParent([out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT NewParent([out, retval] _Node** pRetVal);
        [id(0x60020007), propget]
        HRESULT Action([out, retval] NodeChangedAction* pRetVal);
    };

    [
      odl,
      uuid(0696BC04-3FA9-33FA-9C86-06D24A195F86),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventHandler)    

    ]
    interface _NodeChangedEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _NodeChangedEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _NodeChangedEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(A64BFD8F-7B91-3435-897F-5336A0763FF7),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormField)    

    ]
    interface _FormField : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018)]
        HRESULT SetTextInputValue([in] VARIANT newValue);
        [id(0x60020019), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020019), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002001b), propget]
        HRESULT type([out, retval] FieldType* pRetVal);
        [id(0x6002001c), propget]
        HRESULT result([out, retval] BSTR* pRetVal);
        [id(0x6002001c), propput]
        HRESULT result([in] BSTR pRetVal);
        [id(0x6002001e), propget]
        HRESULT StatusText([out, retval] BSTR* pRetVal);
        [id(0x6002001e), propput]
        HRESULT StatusText([in] BSTR pRetVal);
        [id(0x60020020), propget]
        HRESULT OwnStatus([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT OwnStatus([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT HelpText([out, retval] BSTR* pRetVal);
        [id(0x60020022), propput]
        HRESULT HelpText([in] BSTR pRetVal);
        [id(0x60020024), propget]
        HRESULT OwnHelp([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT OwnHelp([in] VARIANT_BOOL pRetVal);
        [id(0x60020026), propget]
        HRESULT CalculateOnExit([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT CalculateOnExit([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT EntryMacro([out, retval] BSTR* pRetVal);
        [id(0x60020028), propput]
        HRESULT EntryMacro([in] BSTR pRetVal);
        [id(0x6002002a), propget]
        HRESULT ExitMacro([out, retval] BSTR* pRetVal);
        [id(0x6002002a), propput]
        HRESULT ExitMacro([in] BSTR pRetVal);
        [id(0x6002002c), propget]
        HRESULT Enabled([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propput]
        HRESULT Enabled([in] VARIANT_BOOL pRetVal);
        [id(0x6002002e), propget]
        HRESULT TextInputFormat([out, retval] BSTR* pRetVal);
        [id(0x6002002e), propput]
        HRESULT TextInputFormat([in] BSTR pRetVal);
        [id(0x60020030), propget]
        HRESULT TextInputType([out, retval] TextFormFieldType* pRetVal);
        [id(0x60020030), propput]
        HRESULT TextInputType([in] TextFormFieldType pRetVal);
        [id(0x60020032), propget]
        HRESULT MaxLength([out, retval] long* pRetVal);
        [id(0x60020032), propput]
        HRESULT MaxLength([in] long pRetVal);
        [id(0x60020034), propget]
        HRESULT DropDownItems([out, retval] _DropDownItemCollection** pRetVal);
        [id(0x60020035), propget]
        HRESULT DropDownSelectedIndex([out, retval] long* pRetVal);
        [id(0x60020035), propput]
        HRESULT DropDownSelectedIndex([in] long pRetVal);
        [id(0x60020037), propget]
        HRESULT Checked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020037), propput]
        HRESULT Checked([in] VARIANT_BOOL pRetVal);
        [id(0x60020039), propget]
        HRESULT IsCheckBoxExactSize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020039), propput]
        HRESULT IsCheckBoxExactSize([in] VARIANT_BOOL pRetVal);
        [id(0x6002003b), propget]
        HRESULT CheckBoxSize([out, retval] double* pRetVal);
        [id(0x6002003b), propput]
        HRESULT CheckBoxSize([in] double pRetVal);
    };

    [
      odl,
      uuid(7AA29F7D-1D1B-3322-8555-513715A273ED),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SpecialChar)    

    ]
    interface _SpecialChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(403E7E30-627C-3B5F-A973-2E2FBACAEEFE),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Inline)    

    ]
    interface _Inline : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(8FB299DE-558B-3D26-9122-B0BCC5FD45BD),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageSetup)    

    ]
    interface _PageSetup : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT OddAndEvenPagesHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020005), propput]
        HRESULT OddAndEvenPagesHeaderFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020007), propget]
        HRESULT DifferentFirstPageHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT DifferentFirstPageHeaderFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT MirrorMargins([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propput]
        HRESULT MirrorMargins([in] VARIANT_BOOL pRetVal);
        [id(0x6002000b), propget]
        HRESULT SectionStart([out, retval] SectionStart* pRetVal);
        [id(0x6002000b), propput]
        HRESULT SectionStart([in] SectionStart pRetVal);
        [id(0x6002000d), propget]
        HRESULT SuppressEndnotes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d), propput]
        HRESULT SuppressEndnotes([in] VARIANT_BOOL pRetVal);
        [id(0x6002000f), propget]
        HRESULT VerticalAlignment([out, retval] PageVerticalAlignment* pRetVal);
        [id(0x6002000f), propput]
        HRESULT VerticalAlignment([in] PageVerticalAlignment pRetVal);
        [id(0x60020011), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020011), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020013), propget]
        HRESULT PageWidth([out, retval] double* pRetVal);
        [id(0x60020013), propput]
        HRESULT PageWidth([in] double pRetVal);
        [id(0x60020015), propget]
        HRESULT PageHeight([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT PageHeight([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT PaperSize([out, retval] PaperSize* pRetVal);
        [id(0x60020017), propput]
        HRESULT PaperSize([in] PaperSize pRetVal);
        [id(0x60020019), propget]
        HRESULT Orientation([out, retval] Orientation* pRetVal);
        [id(0x60020019), propput]
        HRESULT Orientation([in] Orientation pRetVal);
        [id(0x6002001b), propget]
        HRESULT LeftMargin([out, retval] double* pRetVal);
        [id(0x6002001b), propput]
        HRESULT LeftMargin([in] double pRetVal);
        [id(0x6002001d), propget]
        HRESULT RightMargin([out, retval] double* pRetVal);
        [id(0x6002001d), propput]
        HRESULT RightMargin([in] double pRetVal);
        [id(0x6002001f), propget]
        HRESULT TopMargin([out, retval] double* pRetVal);
        [id(0x6002001f), propput]
        HRESULT TopMargin([in] double pRetVal);
        [id(0x60020021), propget]
        HRESULT BottomMargin([out, retval] double* pRetVal);
        [id(0x60020021), propput]
        HRESULT BottomMargin([in] double pRetVal);
        [id(0x60020023), propget]
        HRESULT HeaderDistance([out, retval] double* pRetVal);
        [id(0x60020023), propput]
        HRESULT HeaderDistance([in] double pRetVal);
        [id(0x60020025), propget]
        HRESULT FooterDistance([out, retval] double* pRetVal);
        [id(0x60020025), propput]
        HRESULT FooterDistance([in] double pRetVal);
        [id(0x60020027), propget]
        HRESULT Gutter([out, retval] double* pRetVal);
        [id(0x60020027), propput]
        HRESULT Gutter([in] double pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstPageTray([out, retval] PaperTray* pRetVal);
        [id(0x60020029), propput]
        HRESULT FirstPageTray([in] PaperTray pRetVal);
        [id(0x6002002b), propget]
        HRESULT OtherPagesTray([out, retval] PaperTray* pRetVal);
        [id(0x6002002b), propput]
        HRESULT OtherPagesTray([in] PaperTray pRetVal);
        [id(0x6002002d), propget]
        HRESULT PageNumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x6002002d), propput]
        HRESULT PageNumberStyle([in] NumberStyle pRetVal);
        [id(0x6002002f), propget]
        HRESULT RestartPageNumbering([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propput]
        HRESULT RestartPageNumbering([in] VARIANT_BOOL pRetVal);
        [id(0x60020031), propget]
        HRESULT PageStartingNumber([out, retval] long* pRetVal);
        [id(0x60020031), propput]
        HRESULT PageStartingNumber([in] long pRetVal);
        [id(0x60020033), propget]
        HRESULT LineNumberRestartMode([out, retval] LineNumberRestartMode* pRetVal);
        [id(0x60020033), propput]
        HRESULT LineNumberRestartMode([in] LineNumberRestartMode pRetVal);
        [id(0x60020035), propget]
        HRESULT LineNumberCountBy([out, retval] long* pRetVal);
        [id(0x60020035), propput]
        HRESULT LineNumberCountBy([in] long pRetVal);
        [id(0x60020037), propget]
        HRESULT LineNumberDistanceFromText([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT LineNumberDistanceFromText([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT LineStartingNumber([out, retval] long* pRetVal);
        [id(0x60020039), propput]
        HRESULT LineStartingNumber([in] long pRetVal);
        [id(0x6002003b), propget]
        HRESULT TextColumns([out, retval] _TextColumnCollection** pRetVal);
        [id(0x6002003c), propget]
        HRESULT RtlGutter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RtlGutter([in] VARIANT_BOOL pRetVal);
        [id(0x6002003e), propget]
        HRESULT BorderAlwaysInFront([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propput]
        HRESULT BorderAlwaysInFront([in] VARIANT_BOOL pRetVal);
        [id(0x60020040), propget]
        HRESULT BorderDistanceFrom([out, retval] PageBorderDistanceFrom* pRetVal);
        [id(0x60020040), propput]
        HRESULT BorderDistanceFrom([in] PageBorderDistanceFrom pRetVal);
        [id(0x60020042), propget]
        HRESULT BorderAppliesTo([out, retval] PageBorderAppliesTo* pRetVal);
        [id(0x60020042), propput]
        HRESULT BorderAppliesTo([in] PageBorderAppliesTo pRetVal);
        [id(0x60020044), propget]
        HRESULT BorderSurroundsHeader([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020044), propput]
        HRESULT BorderSurroundsHeader([in] VARIANT_BOOL pRetVal);
        [id(0x60020046), propget]
        HRESULT BorderSurroundsFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT BorderSurroundsFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
    };

    [
      odl,
      uuid(323250D6-686E-3C2E-83C3-903CBFB3667D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Shading)    

    ]
    interface _Shading : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT BackgroundPatternColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020005), propput]
        HRESULT BackgroundPatternColor([in] OLE_COLOR pRetVal);
        [id(0x60020007), propget]
        HRESULT ForegroundPatternColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020007), propput]
        HRESULT ForegroundPatternColor([in] OLE_COLOR pRetVal);
        [id(0x60020009), propget]
        HRESULT Texture([out, retval] TextureIndex* pRetVal);
        [id(0x60020009), propput]
        HRESULT Texture([in] TextureIndex pRetVal);
    };

    [
      odl,
      uuid(4E215589-1609-30FE-92B7-282CD122F222),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Paragraph)    

    ]
    interface _Paragraph : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT ParentStory([out, retval] _Story** pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x60020028), propget]
        HRESULT IsInCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT IsEndOfCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsEndOfSection([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsEndOfHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsEndOfDocument([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x6002002e), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x6002002f), propget]
        HRESULT Runs([out, retval] _RunCollection** pRetVal);
        [id(0x60020030), propget]
        HRESULT ParagraphBreakFont([out, retval] _Font** pRetVal);
        [id(0x60020031), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020032), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020033), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(FBB2B7FA-F3A0-3CCE-B0D8-5F5F380C737A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStopCollection)    

    ]
    interface _TabStopCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x60020006), propget]
        HRESULT Item_2(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x60020007)]
        HRESULT Clear();
        [id(0x60020008)]
        HRESULT GetPositionByIndex(
                        [in] long index, 
                        [out, retval] double* pRetVal);
        [id(0x60020009)]
        HRESULT GetIndexByPosition(
                        [in] double position, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Add([in] _TabStop* TabStop);
        [id(0x6002000b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] double position, 
                        [in] unsigned char alignment, 
                        [in] unsigned char leader);
        [id(0x6002000c)]
        HRESULT RemoveByPosition([in] double position);
        [id(0x6002000d)]
        HRESULT RemoveByIndex([in] long index);
        [id(0x6002000e)]
        HRESULT After(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x6002000f)]
        HRESULT Before(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
    };

    [
      odl,
      uuid(EB20FA7F-B521-33F5-B820-653C3BD6C496),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStop)    

    ]
    interface _TabStop : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT position([out, retval] double* pRetVal);
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] unsigned char* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] unsigned char pRetVal);
        [id(0x60020007), propget]
        HRESULT leader([out, retval] unsigned char* pRetVal);
        [id(0x60020007), propput]
        HRESULT leader([in] unsigned char pRetVal);
        [id(0x60020009), propget]
        HRESULT IsClear([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(FC89AC7B-D5B8-304E-AD4F-88BC062A0958),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphFormat)    

    ]
    interface _ParagraphFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] unsigned char* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] unsigned char pRetVal);
        [id(0x60020007), propget]
        HRESULT NoSpaceBetweenParagraphsOfSameStyle([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT NoSpaceBetweenParagraphsOfSameStyle([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT KeepTogether([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propput]
        HRESULT KeepTogether([in] VARIANT_BOOL pRetVal);
        [id(0x6002000b), propget]
        HRESULT KeepWithNext([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b), propput]
        HRESULT KeepWithNext([in] VARIANT_BOOL pRetVal);
        [id(0x6002000d), propget]
        HRESULT PageBreakBefore([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d), propput]
        HRESULT PageBreakBefore([in] VARIANT_BOOL pRetVal);
        [id(0x6002000f), propget]
        HRESULT SuppressAutoHyphens([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000f), propput]
        HRESULT SuppressAutoHyphens([in] VARIANT_BOOL pRetVal);
        [id(0x60020011), propget]
        HRESULT WidowControl([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020011), propput]
        HRESULT WidowControl([in] VARIANT_BOOL pRetVal);
        [id(0x60020013), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020013), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020015), propget]
        HRESULT LeftIndent([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT LeftIndent([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT RightIndent([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT RightIndent([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT FirstLineIndent([out, retval] double* pRetVal);
        [id(0x60020019), propput]
        HRESULT FirstLineIndent([in] double pRetVal);
        [id(0x6002001b), propget]
        HRESULT SpaceBeforeAuto([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001b), propput]
        HRESULT SpaceBeforeAuto([in] VARIANT_BOOL pRetVal);
        [id(0x6002001d), propget]
        HRESULT SpaceAfterAuto([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001d), propput]
        HRESULT SpaceAfterAuto([in] VARIANT_BOOL pRetVal);
        [id(0x6002001f), propget]
        HRESULT SpaceBefore([out, retval] double* pRetVal);
        [id(0x6002001f), propput]
        HRESULT SpaceBefore([in] double pRetVal);
        [id(0x60020021), propget]
        HRESULT SpaceAfter([out, retval] double* pRetVal);
        [id(0x60020021), propput]
        HRESULT SpaceAfter([in] double pRetVal);
        [id(0x60020023), propget]
        HRESULT LineSpacingRule([out, retval] LineSpacingRule* pRetVal);
        [id(0x60020023), propput]
        HRESULT LineSpacingRule([in] LineSpacingRule pRetVal);
        [id(0x60020025), propget]
        HRESULT LineSpacing([out, retval] double* pRetVal);
        [id(0x60020025), propput]
        HRESULT LineSpacing([in] double pRetVal);
        [id(0x60020027), propget]
        HRESULT IsHeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT OutlineLevel([out, retval] OutlineLevel* pRetVal);
        [id(0x60020029), propput]
        HRESULT OutlineLevel([in] OutlineLevel pRetVal);
        [id(0x6002002b), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
        [id(0x6002002d), propputref]
        HRESULT Style([in] _Style* pRetVal);
        [id(0x6002002f), propget]
        HRESULT StyleName([out, retval] BSTR* pRetVal);
        [id(0x6002002f), propput]
        HRESULT StyleName([in] BSTR pRetVal);
        [id(0x60020031), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020031), propput]
        HRESULT StyleIdentifier([in] StyleIdentifier pRetVal);
        [id(0x60020033), propget]
        HRESULT TabStops([out, retval] _TabStopCollection** pRetVal);
    };

    [
      odl,
      uuid(530D449C-1E95-341E-9761-CCCCAD2C0033),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleCollection)    

    ]
    interface _StyleCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _Style** pRetVal);
        [id(0x60020008), propget]
        HRESULT Item_2(
                        [in] StyleIdentifier sti, 
                        [out, retval] _Style** pRetVal);
        [id(0x60020009), propget]
        HRESULT Item_3(
                        [in] long index, 
                        [out, retval] _Style** pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] StyleType type, 
                        [in] BSTR Name, 
                        [out, retval] _Style** pRetVal);
    };

    [
      odl,
      uuid(D344AAB5-B972-323E-93D5-30E75CD63DD3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Style)    

    ]
    interface _Style : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020006), propget]
        HRESULT IsHeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propget]
        HRESULT type([out, retval] StyleType* pRetVal);
        [id(0x60020008), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020009), propget]
        HRESULT BaseStyle([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT BaseStyle([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT NextParagraphStyle([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT NextParagraphStyle([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT BuiltIn([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x6002000f), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x60020010), propget]
        HRESULT List([out, retval] _List** pRetVal);
        [id(0x60020011), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x60020012), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
    };

    [
      odl,
      uuid(67B4D523-8A5F-3BBF-8CF1-A04A7D03DE8C),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Font)    

    ]
    interface _Font : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x60020007), propget]
        HRESULT NameAscii([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT NameAscii([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT NameBi([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT NameBi([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT NameFarEast([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT NameFarEast([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT NameOther([out, retval] BSTR* pRetVal);
        [id(0x6002000d), propput]
        HRESULT NameOther([in] BSTR pRetVal);
        [id(0x6002000f), propget]
        HRESULT Size([out, retval] double* pRetVal);
        [id(0x6002000f), propput]
        HRESULT Size([in] double pRetVal);
        [id(0x60020011), propget]
        HRESULT SizeBi([out, retval] double* pRetVal);
        [id(0x60020011), propput]
        HRESULT SizeBi([in] double pRetVal);
        [id(0x60020013), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020013), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020015), propget]
        HRESULT BoldBi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020015), propput]
        HRESULT BoldBi([in] VARIANT_BOOL pRetVal);
        [id(0x60020017), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020019), propget]
        HRESULT ItalicBi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020019), propput]
        HRESULT ItalicBi([in] VARIANT_BOOL pRetVal);
        [id(0x6002001b), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002001b), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002001d), propget]
        HRESULT StrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001d), propput]
        HRESULT StrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x6002001f), propget]
        HRESULT DoubleStrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001f), propput]
        HRESULT DoubleStrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x60020021), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020021), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x60020023), propget]
        HRESULT Outline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020023), propput]
        HRESULT Outline([in] VARIANT_BOOL pRetVal);
        [id(0x60020025), propget]
        HRESULT Emboss([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020025), propput]
        HRESULT Emboss([in] VARIANT_BOOL pRetVal);
        [id(0x60020027), propget]
        HRESULT Engrave([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020027), propput]
        HRESULT Engrave([in] VARIANT_BOOL pRetVal);
        [id(0x60020029), propget]
        HRESULT Superscript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propput]
        HRESULT Superscript([in] VARIANT_BOOL pRetVal);
        [id(0x6002002b), propget]
        HRESULT Subscript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propput]
        HRESULT Subscript([in] VARIANT_BOOL pRetVal);
        [id(0x6002002d), propget]
        HRESULT SmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propput]
        HRESULT SmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x6002002f), propget]
        HRESULT AllCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propput]
        HRESULT AllCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020031), propget]
        HRESULT Hidden([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020031), propput]
        HRESULT Hidden([in] VARIANT_BOOL pRetVal);
        [id(0x60020033), propget]
        HRESULT Underline([out, retval] unsigned char* pRetVal);
        [id(0x60020033), propput]
        HRESULT Underline([in] unsigned char pRetVal);
        [id(0x60020035), propget]
        HRESULT UnderlineColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020035), propput]
        HRESULT UnderlineColor([in] OLE_COLOR pRetVal);
        [id(0x60020037), propget]
        HRESULT Scaling([out, retval] long* pRetVal);
        [id(0x60020037), propput]
        HRESULT Scaling([in] long pRetVal);
        [id(0x60020039), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020039), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x6002003b), propget]
        HRESULT position([out, retval] double* pRetVal);
        [id(0x6002003b), propput]
        HRESULT position([in] double pRetVal);
        [id(0x6002003d), propget]
        HRESULT Kerning([out, retval] double* pRetVal);
        [id(0x6002003d), propput]
        HRESULT Kerning([in] double pRetVal);
        [id(0x6002003f), propget]
        HRESULT HighlightColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002003f), propput]
        HRESULT HighlightColor([in] OLE_COLOR pRetVal);
        [id(0x60020041), propget]
        HRESULT TextEffect([out, retval] TextEffect* pRetVal);
        [id(0x60020041), propput]
        HRESULT TextEffect([in] TextEffect pRetVal);
        [id(0x60020043), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020043), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020045), propget]
        HRESULT ComplexScript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020045), propput]
        HRESULT ComplexScript([in] VARIANT_BOOL pRetVal);
        [id(0x60020047), propget]
        HRESULT NoProofing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020047), propput]
        HRESULT NoProofing([in] VARIANT_BOOL pRetVal);
        [id(0x60020049), propget]
        HRESULT LocaleId([out, retval] long* pRetVal);
        [id(0x60020049), propput]
        HRESULT LocaleId([in] long pRetVal);
        [id(0x6002004b), propget]
        HRESULT LocaleIdBi([out, retval] long* pRetVal);
        [id(0x6002004b), propput]
        HRESULT LocaleIdBi([in] long pRetVal);
        [id(0x6002004d), propget]
        HRESULT LocaleIdFarEast([out, retval] long* pRetVal);
        [id(0x6002004d), propput]
        HRESULT LocaleIdFarEast([in] long pRetVal);
        [id(0x6002004f), propget]
        HRESULT Border([out, retval] _Border** pRetVal);
        [id(0x60020050), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x60020051), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
        [id(0x60020051), propputref]
        HRESULT Style([in] _Style* pRetVal);
        [id(0x60020053), propget]
        HRESULT StyleName([out, retval] BSTR* pRetVal);
        [id(0x60020053), propput]
        HRESULT StyleName([in] BSTR pRetVal);
        [id(0x60020055), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020055), propput]
        HRESULT StyleIdentifier([in] StyleIdentifier pRetVal);
    };

    [
      odl,
      uuid(BBF865BB-2064-33E9-AEF1-D1751DD97E5D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentVisitor)    

    ]
    interface _DocumentVisitor : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT VisitDocumentStart(
                        [in] _Document* doc, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020005)]
        HRESULT VisitDocumentEnd(
                        [in] _Document* doc, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020006)]
        HRESULT VisitSectionStart(
                        [in] _Section* Section, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020007)]
        HRESULT VisitSectionEnd(
                        [in] _Section* Section, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020008)]
        HRESULT VisitBodyStart(
                        [in] _Body* Body, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020009)]
        HRESULT VisitBodyEnd(
                        [in] _Body* Body, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000a)]
        HRESULT VisitHeaderFooterStart(
                        [in] _HeaderFooter* HeaderFooter, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000b)]
        HRESULT VisitHeaderFooterEnd(
                        [in] _HeaderFooter* HeaderFooter, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000c)]
        HRESULT VisitParagraphStart(
                        [in] _Paragraph* Paragraph, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000d)]
        HRESULT VisitParagraphEnd(
                        [in] _Paragraph* Paragraph, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000e)]
        HRESULT VisitTableStart(
                        [in] _Table* Table, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000f)]
        HRESULT VisitTableEnd(
                        [in] _Table* Table, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020010)]
        HRESULT VisitRowStart(
                        [in] _Row* Row, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020011)]
        HRESULT VisitRowEnd(
                        [in] _Row* Row, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020012)]
        HRESULT VisitCellStart(
                        [in] _Cell* Cell, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020013)]
        HRESULT VisitCellEnd(
                        [in] _Cell* Cell, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020014)]
        HRESULT VisitRun(
                        [in] _Run* Run, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020015)]
        HRESULT VisitFieldStart(
                        [in] _FieldStart* FieldStart, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020016)]
        HRESULT VisitFieldSeparator(
                        [in] _FieldSeparator* FieldSeparator, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020017)]
        HRESULT VisitFieldEnd(
                        [in] _FieldEnd* FieldEnd, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020018)]
        HRESULT VisitFormField(
                        [in] _FormField* FormField, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020019)]
        HRESULT VisitBookmarkStart(
                        [in] _BookmarkStart* BookmarkStart, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001a)]
        HRESULT VisitBookmarkEnd(
                        [in] _BookmarkEnd* BookmarkEnd, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001b)]
        HRESULT VisitFootnoteStart(
                        [in] _Footnote* Footnote, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001c)]
        HRESULT VisitFootnoteEnd(
                        [in] _Footnote* Footnote, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001d)]
        HRESULT VisitCommentStart(
                        [in] _Comment* Comment, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001e)]
        HRESULT VisitCommentEnd(
                        [in] _Comment* Comment, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001f)]
        HRESULT VisitShapeStart(
                        [in] _Shape* Shape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020020)]
        HRESULT VisitShapeEnd(
                        [in] _Shape* Shape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020021)]
        HRESULT VisitGroupShapeStart(
                        [in] _GroupShape* GroupShape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020022)]
        HRESULT VisitGroupShapeEnd(
                        [in] _GroupShape* GroupShape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020023)]
        HRESULT VisitSpecialChar(
                        [in] _SpecialChar* SpecialChar, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020024)]
        HRESULT VisitSmartTagStart(
                        [in] _SmartTag* SmartTag, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020025)]
        HRESULT VisitSmartTagEnd(
                        [in] _SmartTag* SmartTag, 
                        [out, retval] VisitorAction* pRetVal);
    };

    [
      odl,
      uuid(45AAEE77-F699-3C54-8F52-D6434740013A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Section)    

    ]
    interface _Section : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT Body([out, retval] _Body** pRetVal);
        [id(0x60020027), propget]
        HRESULT HeadersFooters([out, retval] _HeaderFooterCollection** pRetVal);
        [id(0x60020028), propget]
        HRESULT PageSetup([out, retval] _PageSetup** pRetVal);
        [id(0x60020029), propget]
        HRESULT ProtectedForForms([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propput]
        HRESULT ProtectedForForms([in] VARIANT_BOOL pRetVal);
        [id(0x6002002b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Clone)]
        HRESULT Clone_2([out, retval] _Section** pRetVal);
        [id(0x6002002c)]
        HRESULT PrependContent([in] _Section* sourceSection);
        [id(0x6002002d)]
        HRESULT AppendContent([in] _Section* sourceSection);
        [id(0x6002002e)]
        HRESULT ClearContent();
        [id(0x6002002f)]
        HRESULT ClearHeadersFooters();
        [id(0x60020030)]
        HRESULT DeleteHeaderFooterShapes();
        [id(0x60020031)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(44BCF48A-09FB-3A28-894D-62894EB36E65),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterCollection)    

    ]
    interface _HeaderFooterCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _HeaderFooter** pRetVal);
        [id(0x60020010), propget]
        HRESULT Item_3(
                        [in] HeaderFooterType HeaderFooterType, 
                        [out, retval] _HeaderFooter** pRetVal);
        [id(0x60020011)]
        HRESULT LinkToPrevious([in] VARIANT_BOOL isLinkToPrevious);
        [id(0x60020012),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, LinkToPrevious)]
        HRESULT LinkToPrevious_2(
                        [in] HeaderFooterType HeaderFooterType, 
                        [in] VARIANT_BOOL isLinkToPrevious);
    };

    [
      odl,
      uuid(48FD3220-4456-3107-8698-311C89C6EF8C),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooter)    

    ]
    interface _HeaderFooter : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c)]
        HRESULT DeleteShapes();
        [id(0x6002002d), propget]
        HRESULT HeaderFooterType([out, retval] HeaderFooterType* pRetVal);
        [id(0x6002002e), propget]
        HRESULT IsHeader([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT IsLinkedToPrevious([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propput]
        HRESULT IsLinkedToPrevious([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(5A51778B-62F1-383C-87B5-C328696DEB3E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Story)    

    ]
    interface _Story : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c)]
        HRESULT DeleteShapes();
    };

    [
      odl,
      uuid(8BFF0AD5-4B82-3ADD-A15B-FAF461F81B5A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphCollection)    

    ]
    interface _ParagraphCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Paragraph** pRetVal);
    };

    [
      odl,
      uuid(58BC08D6-24B4-3DC4-9293-23C9EEBE5209),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.TableCollection)    

    ]
    interface _TableCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Table** pRetVal);
    };

    [
      odl,
      uuid(4BE8B5F6-026D-36BA-8634-4E4D9ED5C407),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Table)    

    ]
    interface _Table : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT FirstRow([out, retval] _Row** pRetVal);
        [id(0x60020027), propget]
        HRESULT LastRow([out, retval] _Row** pRetVal);
        [id(0x60020028), propget]
        HRESULT Rows([out, retval] _RowCollection** pRetVal);
        [id(0x60020029)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(62E36A75-B30E-3984-9512-4143D6BB44FC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowCollection)    

    ]
    interface _RowCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Row** pRetVal);
    };

    [
      odl,
      uuid(9F653C0F-77FF-3120-816E-141FC394E2A0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Row)    

    ]
    interface _Row : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT ParentTable([out, retval] _Table** pRetVal);
        [id(0x60020027), propget]
        HRESULT IsFirstRow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsLastRow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstCell([out, retval] _Cell** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastCell([out, retval] _Cell** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Cells([out, retval] _CellCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT RowFormat([out, retval] _RowFormat** pRetVal);
        [id(0x6002002d)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(31B3C667-1339-3526-A392-BD672441B868),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowFormat)    

    ]
    interface _RowFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] RowAlignment* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] RowAlignment pRetVal);
        [id(0x60020007), propget]
        HRESULT AllowAutoFit([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT AllowAutoFit([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT LeftPadding([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT LeftPadding([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT RightPadding([out, retval] double* pRetVal);
        [id(0x6002000e), propput]
        HRESULT RightPadding([in] double pRetVal);
        [id(0x60020010), propget]
        HRESULT TopPadding([out, retval] double* pRetVal);
        [id(0x60020010), propput]
        HRESULT TopPadding([in] double pRetVal);
        [id(0x60020012), propget]
        HRESULT BottomPadding([out, retval] double* pRetVal);
        [id(0x60020012), propput]
        HRESULT BottomPadding([in] double pRetVal);
        [id(0x60020014), propget]
        HRESULT CellSpacing([out, retval] double* pRetVal);
        [id(0x60020014), propput]
        HRESULT CellSpacing([in] double pRetVal);
        [id(0x60020016), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020016), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020018), propget]
        HRESULT HeightRule([out, retval] HeightRule* pRetVal);
        [id(0x60020018), propput]
        HRESULT HeightRule([in] HeightRule pRetVal);
        [id(0x6002001a), propget]
        HRESULT AllowBreakAcrossPages([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT AllowBreakAcrossPages([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT HeadingFormat([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT HeadingFormat([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT LeftIndent([out, retval] double* pRetVal);
        [id(0x6002001e), propput]
        HRESULT LeftIndent([in] double pRetVal);
        [id(0x60020020)]
        HRESULT ClearCellPadding();
    };

    [
      odl,
      uuid(ADF18176-513E-3AD6-B1A2-A0CC093609C0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellCollection)    

    ]
    interface _CellCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Cell** pRetVal);
    };

    [
      odl,
      uuid(B1D5EBE1-1E80-3AB4-9F01-843986D34A17),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Cell)    

    ]
    interface _Cell : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT ParentRow([out, retval] _Row** pRetVal);
        [id(0x60020027), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020028), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT IsFirstCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsLastCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT CellFormat([out, retval] _CellFormat** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002e)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(3A9F8DDD-1745-3DED-A869-F08F45072D82),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellFormat)    

    ]
    interface _CellFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT LeftPadding([out, retval] double* pRetVal);
        [id(0x60020005), propput]
        HRESULT LeftPadding([in] double pRetVal);
        [id(0x60020007), propget]
        HRESULT RightPadding([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT RightPadding([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT TopPadding([out, retval] double* pRetVal);
        [id(0x60020009), propput]
        HRESULT TopPadding([in] double pRetVal);
        [id(0x6002000b), propget]
        HRESULT BottomPadding([out, retval] double* pRetVal);
        [id(0x6002000b), propput]
        HRESULT BottomPadding([in] double pRetVal);
        [id(0x6002000d), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002000e), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x6002000f), propget]
        HRESULT VerticalAlignment([out, retval] CellVerticalAlignment* pRetVal);
        [id(0x6002000f), propput]
        HRESULT VerticalAlignment([in] CellVerticalAlignment pRetVal);
        [id(0x60020011), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020011), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020013), propget]
        HRESULT VerticalMerge([out, retval] CellMerge* pRetVal);
        [id(0x60020013), propput]
        HRESULT VerticalMerge([in] CellMerge pRetVal);
        [id(0x60020015), propget]
        HRESULT HorizontalMerge([out, retval] CellMerge* pRetVal);
        [id(0x60020015), propput]
        HRESULT HorizontalMerge([in] CellMerge pRetVal);
        [id(0x60020017), propget]
        HRESULT Orientation([out, retval] TextOrientation* pRetVal);
        [id(0x60020017), propput]
        HRESULT Orientation([in] TextOrientation pRetVal);
        [id(0x60020019), propget]
        HRESULT FitText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020019), propput]
        HRESULT FitText([in] VARIANT_BOOL pRetVal);
        [id(0x6002001b), propget]
        HRESULT WrapText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001b), propput]
        HRESULT WrapText([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(8D764535-8A3C-3C0E-AC80-D613C05BB044),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Run)    

    ]
    interface _Run : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020018), propput]
        HRESULT Text([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(25E46DBE-3286-379B-AA4D-499594EFAADE),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeBase)    

    ]
    interface _ShapeBase : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020027), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x6002002f), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020032), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020033), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020033), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020035), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x60020038), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x60020038), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003a), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003a), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x6002003e), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020040), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020042), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020046), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004c), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020055), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020055), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020057), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020057), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x60020059), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x60020059), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005d), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005d), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x6002005f), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020066), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020067), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020069), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020069), propput]
        HRESULT Name([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(AB31B6FB-79C7-3FB9-A257-2C549CF7E921),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Shape)    

    ]
    interface _Shape : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020027), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x6002002f), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020032), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020033), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020033), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020035), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x60020038), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x60020038), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003a), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003a), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x6002003e), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020040), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020042), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020046), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004c), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020055), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020055), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020057), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020057), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x60020059), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x60020059), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005d), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005d), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x6002005f), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020066), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020067), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020069), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020069), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002006b), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x6002006c), propget]
        HRESULT Filled([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006c), propput]
        HRESULT Filled([in] VARIANT_BOOL pRetVal);
        [id(0x6002006e), propget]
        HRESULT FillColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002006e), propput]
        HRESULT FillColor([in] OLE_COLOR pRetVal);
        [id(0x60020070), propget]
        HRESULT Stroked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020070), propput]
        HRESULT Stroked([in] VARIANT_BOOL pRetVal);
        [id(0x60020072), propget]
        HRESULT StrokeWeight([out, retval] double* pRetVal);
        [id(0x60020072), propput]
        HRESULT StrokeWeight([in] double pRetVal);
        [id(0x60020074), propget]
        HRESULT StrokeColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020074), propput]
        HRESULT StrokeColor([in] OLE_COLOR pRetVal);
        [id(0x60020076), propget]
        HRESULT Stroke([out, retval] _Stroke** pRetVal);
        [id(0x60020077), propget]
        HRESULT Fill([out, retval] _Fill** pRetVal);
        [id(0x60020078), propget]
        HRESULT HasImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020079), propget]
        HRESULT ImageData([out, retval] _ImageData** pRetVal);
        [id(0x6002007a), propget]
        HRESULT OleFormat([out, retval] _OleFormat** pRetVal);
        [id(0x6002007b), propget]
        HRESULT TextBox([out, retval] _TextBox** pRetVal);
        [id(0x6002007c), propget]
        HRESULT TextPath([out, retval] _TextPath** pRetVal);
        [id(0x6002007d), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002007e), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
    };

    [
      odl,
      uuid(829516B4-CB74-3A26-9403-C68EF5C81BBF),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Stroke)    

    ]
    interface _Stroke : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT Weight([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT Weight([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020008), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002000a), propget]
        HRESULT Color2([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Color2([in] OLE_COLOR pRetVal);
        [id(0x6002000c), propget]
        HRESULT DashStyle([out, retval] DashStyle* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DashStyle([in] DashStyle pRetVal);
        [id(0x6002000e), propget]
        HRESULT JoinStyle([out, retval] JoinStyle* pRetVal);
        [id(0x6002000e), propput]
        HRESULT JoinStyle([in] JoinStyle pRetVal);
        [id(0x60020010), propget]
        HRESULT EndCap([out, retval] EndCap* pRetVal);
        [id(0x60020010), propput]
        HRESULT EndCap([in] EndCap pRetVal);
        [id(0x60020012), propget]
        HRESULT LineStyle([out, retval] ShapeLineStyle* pRetVal);
        [id(0x60020012), propput]
        HRESULT LineStyle([in] ShapeLineStyle pRetVal);
        [id(0x60020014), propget]
        HRESULT StartArrowType([out, retval] ArrowType* pRetVal);
        [id(0x60020014), propput]
        HRESULT StartArrowType([in] ArrowType pRetVal);
        [id(0x60020016), propget]
        HRESULT EndArrowType([out, retval] ArrowType* pRetVal);
        [id(0x60020016), propput]
        HRESULT EndArrowType([in] ArrowType pRetVal);
        [id(0x60020018), propget]
        HRESULT StartArrowWidth([out, retval] ArrowWidth* pRetVal);
        [id(0x60020018), propput]
        HRESULT StartArrowWidth([in] ArrowWidth pRetVal);
        [id(0x6002001a), propget]
        HRESULT StartArrowLength([out, retval] ArrowLength* pRetVal);
        [id(0x6002001a), propput]
        HRESULT StartArrowLength([in] ArrowLength pRetVal);
        [id(0x6002001c), propget]
        HRESULT EndArrowWidth([out, retval] ArrowWidth* pRetVal);
        [id(0x6002001c), propput]
        HRESULT EndArrowWidth([in] ArrowWidth pRetVal);
        [id(0x6002001e), propget]
        HRESULT EndArrowLength([out, retval] ArrowLength* pRetVal);
        [id(0x6002001e), propput]
        HRESULT EndArrowLength([in] ArrowLength pRetVal);
        [id(0x60020020), propget]
        HRESULT Opacity([out, retval] double* pRetVal);
        [id(0x60020020), propput]
        HRESULT Opacity([in] double pRetVal);
        [id(0x60020022), propget]
        HRESULT ImageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
    };

    [
      odl,
      uuid(ABB5BCAB-5041-3789-8525-29EC37A53870),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Fill)    

    ]
    interface _Fill : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020004), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x60020006), propget]
        HRESULT Opacity([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT Opacity([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT ImageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
    };

    [
      odl,
      uuid(50FE8941-F14E-3B88-8C4B-767D6F5F7FC3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageData)    

    ]
    interface _ImageData : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetImage([in] _Image* image);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_2([in] BSTR fileName);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_3([in] _Stream* stream);
        [id(0x60020007),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_4([in] SAFEARRAY(unsigned char) ImageBytes);
        [id(0x60020008)]
        HRESULT ToImage([out, retval] _Image** pRetVal);
        [id(0x60020009)]
        HRESULT ToStream([out, retval] _Stream** pRetVal);
        [id(0x6002000a)]
        HRESULT ToByteArray([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x6002000b)]
        HRESULT Save([in] _Stream* stream);
        [id(0x6002000c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2([in] BSTR fileName);
        [id(0x6002000d), propget]
        HRESULT ImageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x6002000e), propget]
        HRESULT HasImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000f), propget]
        HRESULT ImageSize([out, retval] _ImageSize** pRetVal);
        [id(0x60020010), propget]
        HRESULT ImageType([out, retval] ImageType* pRetVal);
        [id(0x60020011), propget]
        HRESULT SourceFullName([out, retval] BSTR* pRetVal);
        [id(0x60020011), propput]
        HRESULT SourceFullName([in] BSTR pRetVal);
        [id(0x60020013), propget]
        HRESULT IsLink([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propget]
        HRESULT IsLinkOnly([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020015), propget]
        HRESULT Title([out, retval] BSTR* pRetVal);
        [id(0x60020015), propput]
        HRESULT Title([in] BSTR pRetVal);
        [id(0x60020017), propget]
        HRESULT CropTop([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT CropTop([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT CropBottom([out, retval] double* pRetVal);
        [id(0x60020019), propput]
        HRESULT CropBottom([in] double pRetVal);
        [id(0x6002001b), propget]
        HRESULT CropLeft([out, retval] double* pRetVal);
        [id(0x6002001b), propput]
        HRESULT CropLeft([in] double pRetVal);
        [id(0x6002001d), propget]
        HRESULT CropRight([out, retval] double* pRetVal);
        [id(0x6002001d), propput]
        HRESULT CropRight([in] double pRetVal);
        [id(0x6002001f), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x60020020), propget]
        HRESULT ChromaKey([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020020), propput]
        HRESULT ChromaKey([in] OLE_COLOR pRetVal);
        [id(0x60020022), propget]
        HRESULT Brightness([out, retval] double* pRetVal);
        [id(0x60020022), propput]
        HRESULT Brightness([in] double pRetVal);
        [id(0x60020024), propget]
        HRESULT Contrast([out, retval] double* pRetVal);
        [id(0x60020024), propput]
        HRESULT Contrast([in] double pRetVal);
        [id(0x60020026), propget]
        HRESULT BiLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT BiLevel([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT GrayScale([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propput]
        HRESULT GrayScale([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(F2373CBA-C508-38A9-9DC5-ABAD0EE2CD17),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageSize)    

    ]
    interface _ImageSize : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT WidthPixels([out, retval] long* pRetVal);
        [id(0x60020005), propget]
        HRESULT HeightPixels([out, retval] long* pRetVal);
        [id(0x60020006), propget]
        HRESULT HorizontalResolution([out, retval] double* pRetVal);
        [id(0x60020007), propget]
        HRESULT VerticalResolution([out, retval] double* pRetVal);
        [id(0x60020008), propget]
        HRESULT WidthPoints([out, retval] double* pRetVal);
        [id(0x60020009), propget]
        HRESULT HeightPoints([out, retval] double* pRetVal);
    };

    [
      odl,
      uuid(273C7BF2-94B5-3C70-92D6-CADE64D1D759),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ConvertUtil)    

    ]
    interface _ConvertUtil : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(13B9B2B6-F28F-376B-9CF3-8AFB77511466),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.OleFormat)    

    ]
    interface _OleFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Save([in] _Stream* stream);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2([in] BSTR fileName);
        [id(0x60020006)]
        HRESULT GetOleEntry(
                        [in] BSTR oleEntryName, 
                        [out, retval] _MemoryStream** pRetVal);
        [id(0x60020007), propget]
        HRESULT ProgId([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT ProgId([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT IsLink([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT SourceFullName([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT SourceFullName([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT SourceItem([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT SourceItem([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT AutoUpdate([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT AutoUpdate([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT OleIcon([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT OleIcon([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT IsLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT IsLocked([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT Clsid([out, retval] GUID* pRetVal);
    };

    [
      odl,
      uuid(5B4E22CD-F663-3CD2-A65D-AD4A23DD3836),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBox)    

    ]
    interface _TextBox : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT InternalMarginLeft([out, retval] double* pRetVal);
        [id(0x60020004), propput]
        HRESULT InternalMarginLeft([in] double pRetVal);
        [id(0x60020006), propget]
        HRESULT InternalMarginRight([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT InternalMarginRight([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT InternalMarginTop([out, retval] double* pRetVal);
        [id(0x60020008), propput]
        HRESULT InternalMarginTop([in] double pRetVal);
        [id(0x6002000a), propget]
        HRESULT InternalMarginBottom([out, retval] double* pRetVal);
        [id(0x6002000a), propput]
        HRESULT InternalMarginBottom([in] double pRetVal);
        [id(0x6002000c), propget]
        HRESULT FitShapeToText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT FitShapeToText([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT LayoutFlow([out, retval] LayoutFlow* pRetVal);
        [id(0x6002000e), propput]
        HRESULT LayoutFlow([in] LayoutFlow pRetVal);
        [id(0x60020010), propget]
        HRESULT TextBoxWrapMode([out, retval] TextBoxWrapMode* pRetVal);
        [id(0x60020010), propput]
        HRESULT TextBoxWrapMode([in] TextBoxWrapMode pRetVal);
    };

    [
      odl,
      uuid(FA7EFCED-D530-33A2-B8F9-048821C1DE42),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPath)    

    ]
    interface _TextPath : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT FitPath([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propput]
        HRESULT FitPath([in] VARIANT_BOOL pRetVal);
        [id(0x60020008), propget]
        HRESULT FitShape([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT FitShape([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT FontFamily([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT FontFamily([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Size([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Size([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT SmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT SmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT RotateLetters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT RotateLetters([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT Trim([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT Trim([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT Kerning([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT Kerning([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT Underline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT Underline([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT StrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001e), propput]
        HRESULT StrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x60020020), propget]
        HRESULT SameLetterHeights([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT SameLetterHeights([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020022), propput]
        HRESULT Text([in] BSTR pRetVal);
        [id(0x60020024), propget]
        HRESULT TextPathAlignment([out, retval] TextPathAlignment* pRetVal);
        [id(0x60020024), propput]
        HRESULT TextPathAlignment([in] TextPathAlignment pRetVal);
        [id(0x60020026), propget]
        HRESULT ReverseRows([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT ReverseRows([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020028), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x6002002a), propget]
        HRESULT XScale([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propput]
        HRESULT XScale([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(26C10D4E-8249-3291-9309-71FF838CF167),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.GroupShape)    

    ]
    interface _GroupShape : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020027), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x6002002f), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020032), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020033), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020033), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020035), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x60020038), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x60020038), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003a), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003a), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x6002003e), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020040), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020042), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020046), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004c), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020055), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020055), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020057), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020057), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x60020059), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x60020059), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005d), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005d), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x6002005f), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020066), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020067), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020069), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020069), propput]
        HRESULT Name([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(6198FB01-DFFF-3419-A8A4-C1629DD35494),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Body)    

    ]
    interface _Body : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c)]
        HRESULT DeleteShapes();
        [id(0x6002002d)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(6C4A84AF-92BD-3F09-9475-4FC374F091C8),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeImporter)    

    ]
    interface _NodeImporter : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
    };

    [
      odl,
      uuid(85EB1EF7-7D3C-3DBE-A93C-F1959997C794),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListCollection)    

    ]
    interface _ListCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005)]
        HRESULT Add(
                        [in] ListTemplate template, 
                        [out, retval] _List** pRetVal);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] _Style* listStyle, 
                        [out, retval] _List** pRetVal);
        [id(0x60020007)]
        HRESULT AddCopy(
                        [in] _List* srcList, 
                        [out, retval] _List** pRetVal);
        [id(0x60020008)]
        HRESULT GetListByListId(
                        [in] long listId, 
                        [out, retval] _List** pRetVal);
        [id(0x60020009), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _List** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
    };

    [
      odl,
      uuid(B39D2563-761D-38ED-A8AC-50577231DB7A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.List)    

    ]
    interface _List : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT listId([out, retval] long* pRetVal);
        [id(0x60020005), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020006), propget]
        HRESULT IsMultiLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propget]
        HRESULT ListLevels([out, retval] _ListLevelCollection** pRetVal);
        [id(0x60020008), propget]
        HRESULT IsListStyleDefinition([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propget]
        HRESULT IsListStyleReference([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
    };

    [
      odl,
      uuid(A8A9D1DB-7AEF-3F18-962B-326CDAA00B08),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelCollection)    

    ]
    interface _ListLevelCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _ListLevel** pRetVal);
        [id(00000000), propputref]
        HRESULT Item(
                        [in] long index, 
                        [in] _ListLevel* pRetVal);
        [id(0x60020007), propget]
        HRESULT Count([out, retval] long* pRetVal);
    };

    [
      odl,
      uuid(3B7DEF7C-0927-3E05-9545-F65B2FEB3412),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevel)    

    ]
    interface _ListLevel : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT StartAt([out, retval] long* pRetVal);
        [id(0x60020004), propput]
        HRESULT StartAt([in] long pRetVal);
        [id(0x60020006), propget]
        HRESULT NumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x60020006), propput]
        HRESULT NumberStyle([in] NumberStyle pRetVal);
        [id(0x60020008), propget]
        HRESULT NumberFormat([out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT NumberFormat([in] BSTR pRetVal);
        [id(0x6002000a), propget]
        HRESULT alignment([out, retval] ListLevelAlignment* pRetVal);
        [id(0x6002000a), propput]
        HRESULT alignment([in] ListLevelAlignment pRetVal);
        [id(0x6002000c), propget]
        HRESULT IsLegal([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT IsLegal([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT RestartAfterLevel([out, retval] long* pRetVal);
        [id(0x6002000e), propput]
        HRESULT RestartAfterLevel([in] long pRetVal);
        [id(0x60020010), propget]
        HRESULT TrailingCharacter([out, retval] ListTrailingCharacter* pRetVal);
        [id(0x60020010), propput]
        HRESULT TrailingCharacter([in] ListTrailingCharacter pRetVal);
        [id(0x60020012), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020013), propget]
        HRESULT TabPosition([out, retval] double* pRetVal);
        [id(0x60020013), propput]
        HRESULT TabPosition([in] double pRetVal);
        [id(0x60020015), propget]
        HRESULT NumberPosition([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT NumberPosition([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT TextPosition([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT TextPosition([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT LinkedStyle([out, retval] _Style** pRetVal);
        [id(0x60020019), propputref]
        HRESULT LinkedStyle([in] _Style* pRetVal);
    };

    [
      odl,
      uuid(5E976AE9-684F-3731-8F57-B919D14DEB37),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ListFormat)    

    ]
    interface _ListFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ApplyBulletDefault();
        [id(0x60020005)]
        HRESULT ApplyNumberDefault();
        [id(0x60020006)]
        HRESULT RemoveNumbers();
        [id(0x60020007)]
        HRESULT ListIndent();
        [id(0x60020008)]
        HRESULT ListOutdent();
        [id(0x60020009), propget]
        HRESULT ListLevelNumber([out, retval] long* pRetVal);
        [id(0x60020009), propput]
        HRESULT ListLevelNumber([in] long pRetVal);
        [id(0x6002000b), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propget]
        HRESULT List([out, retval] _List** pRetVal);
        [id(0x6002000c), propputref]
        HRESULT List([in] _List* pRetVal);
        [id(0x6002000e), propget]
        HRESULT ListLevel([out, retval] _ListLevel** pRetVal);
    };

    [
      odl,
      uuid(346A7B07-7F1D-3871-89B5-FEEEE5DA414B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldStart)    

    ]
    interface _FieldStart : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(FDEEBF75-A2C9-3FE0-8E86-CE39259B3335),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldChar)    

    ]
    interface _FieldChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(9AC1E062-E91F-39BC-BA49-EFC21A05C219),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldSeparator)    

    ]
    interface _FieldSeparator : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(E6143792-2F06-3C06-97C4-E9A87F3C3F5B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldEnd)    

    ]
    interface _FieldEnd : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
        [id(0x60020019), propget]
        HRESULT HasSeparator([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(1C5621CF-7E84-3F43-84E9-3DAABB2BE010),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkStart)    

    ]
    interface _BookmarkStart : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020015), propget]
        HRESULT Bookmark([out, retval] _Bookmark** pRetVal);
    };

    [
      odl,
      uuid(D27707DC-CE4A-3744-B75D-0FBEB15B55C1),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Bookmark)    

    ]
    interface _Bookmark : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020004), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x60020006), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020006), propput]
        HRESULT Text([in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT BookmarkStart([out, retval] _BookmarkStart** pRetVal);
        [id(0x60020009), propget]
        HRESULT BookmarkEnd([out, retval] _BookmarkEnd** pRetVal);
        [id(0x6002000a)]
        HRESULT Remove();
    };

    [
      odl,
      uuid(5F6474EF-D912-3C2B-BC68-C2D2DAA98DED),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkEnd)    

    ]
    interface _BookmarkEnd : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(0C67DCFB-C08E-3F57-B57D-78F58B3A3CBA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBuilder)    

    ]
    interface _DocumentBuilder : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT MoveToDocumentStart();
        [id(0x60020005)]
        HRESULT MoveToDocumentEnd();
        [id(0x60020006)]
        HRESULT MoveToSection([in] long sectionIndex);
        [id(0x60020007)]
        HRESULT MoveToHeaderFooter([in] HeaderFooterType HeaderFooterType);
        [id(0x60020008)]
        HRESULT MoveToMergeField(
                        [in] BSTR fieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT MoveToField(
                        [in] _Field* Field, 
                        [in] VARIANT_BOOL isAfter);
        [id(0x6002000a)]
        HRESULT MoveToBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, MoveToBookmark)]
        HRESULT MoveToBookmark_2(
                        [in] BSTR bookmarkName, 
                        [in] VARIANT_BOOL isStart, 
                        [in] VARIANT_BOOL isAfter, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c)]
        HRESULT MoveToParagraph(
                        [in] long paragraphIndex, 
                        [in] long characterIndex);
        [id(0x6002000d)]
        HRESULT MoveToCell(
                        [in] long tableIndex, 
                        [in] long rowIndex, 
                        [in] long columnIndex, 
                        [in] long characterIndex);
        [id(0x6002000e)]
        HRESULT MoveTo([in] _Node* Node);
        [id(0x6002000f)]
        HRESULT DeleteRow(
                        [in] long tableIndex, 
                        [in] long rowIndex, 
                        [out, retval] _Row** pRetVal);
        [id(0x60020010)]
        HRESULT Write([in] BSTR Text);
        [id(0x60020011)]
        HRESULT Writeln([in] BSTR Text);
        [id(0x60020012),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Writeln)]
        HRESULT Writeln_2();
        [id(0x60020013)]
        HRESULT InsertParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020014)]
        HRESULT InsertBreak([in] BreakType BreakType);
        [id(0x60020015)]
        HRESULT InsertTableOfContents([in] BSTR switches);
        [id(0x60020016)]
        HRESULT InsertField(
                        [in] BSTR fieldCode, 
                        [in] BSTR fieldValue, 
                        [out, retval] _FieldStart** pRetVal);
        [id(0x60020017)]
        HRESULT InsertHyperlink(
                        [in] BSTR displayText, 
                        [in] BSTR urlOrBookmark, 
                        [in] VARIANT_BOOL isBookmark, 
                        [out, retval] _FieldStart** pRetVal);
        [id(0x60020018)]
        HRESULT InsertTextInput(
                        [in] BSTR Name, 
                        [in] TextFormFieldType type, 
                        [in] BSTR format, 
                        [in] BSTR fieldValue, 
                        [in] long MaxLength, 
                        [out, retval] _FormField** pRetVal);
        [id(0x60020019)]
        HRESULT InsertCheckBox(
                        [in] BSTR Name, 
                        [in] VARIANT_BOOL defaultValue, 
                        [in] long Size, 
                        [out, retval] _FormField** pRetVal);
        [id(0x6002001a)]
        HRESULT InsertComboBox(
                        [in] BSTR Name, 
                        [in] SAFEARRAY(BSTR) items, 
                        [in] long selectedIndex, 
                        [out, retval] _FormField** pRetVal);
        [id(0x6002001b)]
        HRESULT InsertFootnote(
                        [in] FootnoteType FootnoteType, 
                        [in] BSTR footnoteText, 
                        [out, retval] _Footnote** pRetVal);
        [id(0x6002001c)]
        HRESULT InsertImage(
                        [in] _Image* image, 
                        [out, retval] _Shape** pRetVal);
        [id(0x6002001d),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_2(
                        [in] BSTR fileName, 
                        [out, retval] _Shape** pRetVal);
        [id(0x6002001e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_3(
                        [in] _Stream* stream, 
                        [out, retval] _Shape** pRetVal);
        [id(0x6002001f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_4(
                        [in] SAFEARRAY(unsigned char) ImageBytes, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020020),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_5(
                        [in] _Image* image, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020021),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_6(
                        [in] BSTR fileName, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020022),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_7(
                        [in] _Stream* stream, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020023),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_8(
                        [in] SAFEARRAY(unsigned char) ImageBytes, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020024),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_9(
                        [in] _Image* image, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020025),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_10(
                        [in] BSTR fileName, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020026),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_11(
                        [in] _Stream* stream, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020027),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_12(
                        [in] SAFEARRAY(unsigned char) ImageBytes, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020028)]
        HRESULT InsertHtml([in] BSTR html);
        [id(0x60020029)]
        HRESULT InsertCell([out, retval] _Cell** pRetVal);
        [id(0x6002002a)]
        HRESULT StartTable([out, retval] _Table** pRetVal);
        [id(0x6002002b)]
        HRESULT EndTable([out, retval] _Table** pRetVal);
        [id(0x6002002c)]
        HRESULT EndRow([out, retval] _Row** pRetVal);
        [id(0x6002002d)]
        HRESULT StartBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] _BookmarkStart** pRetVal);
        [id(0x6002002e)]
        HRESULT EndBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] _BookmarkEnd** pRetVal);
        [id(0x6002002f), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002002f), propputref]
        HRESULT Document([in] _Document* pRetVal);
        [id(0x60020031), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020032), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020032), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020034), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020034), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020036), propget]
        HRESULT Underline([out, retval] unsigned char* pRetVal);
        [id(0x60020036), propput]
        HRESULT Underline([in] unsigned char pRetVal);
        [id(0x60020038), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x60020039), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x6002003a), propget]
        HRESULT PageSetup([out, retval] _PageSetup** pRetVal);
        [id(0x6002003b), propget]
        HRESULT RowFormat([out, retval] _RowFormat** pRetVal);
        [id(0x6002003c), propget]
        HRESULT CellFormat([out, retval] _CellFormat** pRetVal);
        [id(0x6002003d)]
        HRESULT PushFont();
        [id(0x6002003e)]
        HRESULT PopFont();
        [id(0x6002003f), propget]
        HRESULT IsAtStartOfParagraph([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020040), propget]
        HRESULT IsAtEndOfParagraph([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020041)]
        HRESULT InsertNode([in] _Node* Node);
        [id(0x60020042), propget]
        HRESULT CurrentNode([out, retval] _Node** pRetVal);
        [id(0x60020043), propget]
        HRESULT CurrentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020044), propget]
        HRESULT CurrentStory([out, retval] _Story** pRetVal);
        [id(0x60020045), propget]
        HRESULT CurrentSection([out, retval] _Section** pRetVal);
    };

    [
      odl,
      uuid(972F8E50-A91C-3F74-A690-082EEA950AB3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.Field)    

    ]
    interface _Field : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetFieldCode([out, retval] BSTR* pRetVal);
        [id(0x60020005)]
        HRESULT Remove();
        [id(0x60020006), propget]
        HRESULT Start([out, retval] _FieldStart** pRetVal);
        [id(0x60020007), propget]
        HRESULT Separator([out, retval] _FieldSeparator** pRetVal);
        [id(0x60020008), propget]
        HRESULT End([out, retval] _FieldEnd** pRetVal);
        [id(0x60020009), propget]
        HRESULT type([out, retval] FieldType* pRetVal);
        [id(0x6002000a), propget]
        HRESULT result([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT result([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(C0605D61-6042-32DD-A85C-825AC16ACBE7),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentProperty)    

    ]
    interface _DocumentProperty : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(00000000), propget]
        HRESULT value([out, retval] VARIANT* pRetVal);
        [id(00000000), propputref]
        HRESULT value([in] VARIANT pRetVal);
        [id(0x60020007), propget]
        HRESULT type([out, retval] PropertyType* pRetVal);
        [id(0x60020008)]
        HRESULT ToInt([out, retval] long* pRetVal);
        [id(0x60020009)]
        HRESULT ToDouble([out, retval] double* pRetVal);
        [id(0x6002000a)]
        HRESULT ToDateTime([out, retval] DATE* pRetVal);
        [id(0x6002000b)]
        HRESULT ToBool([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(00214CE3-B6E1-3432-BDDB-21C2EED94AFD),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.BuiltInDocumentProperties)    

    ]
    interface _BuiltInDocumentProperties : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
        [id(0x6002000d), propget]
        HRESULT Author([out, retval] BSTR* pRetVal);
        [id(0x6002000d), propput]
        HRESULT Author([in] BSTR pRetVal);
        [id(0x6002000f), propget]
        HRESULT Bytes([out, retval] long* pRetVal);
        [id(0x6002000f), propput]
        HRESULT Bytes([in] long pRetVal);
        [id(0x60020011), propget]
        HRESULT Characters([out, retval] long* pRetVal);
        [id(0x60020011), propput]
        HRESULT Characters([in] long pRetVal);
        [id(0x60020013), propget]
        HRESULT CharactersWithSpaces([out, retval] long* pRetVal);
        [id(0x60020013), propput]
        HRESULT CharactersWithSpaces([in] long pRetVal);
        [id(0x60020015), propget]
        HRESULT Comments([out, retval] BSTR* pRetVal);
        [id(0x60020015), propput]
        HRESULT Comments([in] BSTR pRetVal);
        [id(0x60020017), propget]
        HRESULT Category([out, retval] BSTR* pRetVal);
        [id(0x60020017), propput]
        HRESULT Category([in] BSTR pRetVal);
        [id(0x60020019), propget]
        HRESULT Company([out, retval] BSTR* pRetVal);
        [id(0x60020019), propput]
        HRESULT Company([in] BSTR pRetVal);
        [id(0x6002001b), propget]
        HRESULT CreatedTime([out, retval] DATE* pRetVal);
        [id(0x6002001b), propput]
        HRESULT CreatedTime([in] DATE pRetVal);
        [id(0x6002001d), propget]
        HRESULT Keywords([out, retval] BSTR* pRetVal);
        [id(0x6002001d), propput]
        HRESULT Keywords([in] BSTR pRetVal);
        [id(0x6002001f), propget]
        HRESULT LastPrinted([out, retval] DATE* pRetVal);
        [id(0x6002001f), propput]
        HRESULT LastPrinted([in] DATE pRetVal);
        [id(0x60020021), propget]
        HRESULT LastSavedBy([out, retval] BSTR* pRetVal);
        [id(0x60020021), propput]
        HRESULT LastSavedBy([in] BSTR pRetVal);
        [id(0x60020023), propget]
        HRESULT LastSavedTime([out, retval] DATE* pRetVal);
        [id(0x60020023), propput]
        HRESULT LastSavedTime([in] DATE pRetVal);
        [id(0x60020025), propget]
        HRESULT Lines([out, retval] long* pRetVal);
        [id(0x60020025), propput]
        HRESULT Lines([in] long pRetVal);
        [id(0x60020027), propget]
        HRESULT Manager([out, retval] BSTR* pRetVal);
        [id(0x60020027), propput]
        HRESULT Manager([in] BSTR pRetVal);
        [id(0x60020029), propget]
        HRESULT NameOfApplication([out, retval] BSTR* pRetVal);
        [id(0x60020029), propput]
        HRESULT NameOfApplication([in] BSTR pRetVal);
        [id(0x6002002b), propget]
        HRESULT Pages([out, retval] long* pRetVal);
        [id(0x6002002b), propput]
        HRESULT Pages([in] long pRetVal);
        [id(0x6002002d), propget]
        HRESULT Paragraphs([out, retval] long* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Paragraphs([in] long pRetVal);
        [id(0x6002002f), propget]
        HRESULT RevisionNumber([out, retval] long* pRetVal);
        [id(0x6002002f), propput]
        HRESULT RevisionNumber([in] long pRetVal);
        [id(0x60020031), propget]
        HRESULT Subject([out, retval] BSTR* pRetVal);
        [id(0x60020031), propput]
        HRESULT Subject([in] BSTR pRetVal);
        [id(0x60020033), propget]
        HRESULT template([out, retval] BSTR* pRetVal);
        [id(0x60020033), propput]
        HRESULT template([in] BSTR pRetVal);
        [id(0x60020035), propget]
        HRESULT Title([out, retval] BSTR* pRetVal);
        [id(0x60020035), propput]
        HRESULT Title([in] BSTR pRetVal);
        [id(0x60020037), propget]
        HRESULT TotalEditingTime([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT TotalEditingTime([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT Version([out, retval] long* pRetVal);
        [id(0x60020039), propput]
        HRESULT Version([in] long pRetVal);
        [id(0x6002003b), propget]
        HRESULT Words([out, retval] long* pRetVal);
        [id(0x6002003b), propput]
        HRESULT Words([in] long pRetVal);
    };

    [
      odl,
      uuid(1BF8F202-F78D-34A5-98CD-46AC0B0D7835),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentPropertyCollection)    

    ]
    interface _DocumentPropertyCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(6B70A148-E1A0-30D2-BA39-5FCEFB6CD7D6),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.CustomDocumentProperties)    

    ]
    interface _CustomDocumentProperties : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
        [id(0x6002000d)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] BSTR value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x6002000e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] BSTR Name, 
                        [in] long value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_3(
                        [in] BSTR Name, 
                        [in] DATE value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020010),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_4(
                        [in] BSTR Name, 
                        [in] VARIANT_BOOL value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020011),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_5(
                        [in] BSTR Name, 
                        [in] double value, 
                        [out, retval] _DocumentProperty** pRetVal);
    };

    [
      odl,
      uuid(BD230DBE-C7F6-36A0-AF06-814B422420E8),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VariableCollection)    

    ]
    interface _VariableCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] BSTR Name, 
                        [in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT Item_2(
                        [in] long index, 
                        [in] BSTR pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] BSTR value);
        [id(0x6002000b)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c)]
        HRESULT IndexOfKey(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000d)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000e)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000f)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(EE42276F-552A-32B1-8B02-158108ABAFC4),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.DropDownItemCollection)    

    ]
    interface _DropDownItemCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clear();
        [id(0x60020005)]
        HRESULT RemoveAt([in] long index);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] long index, 
                        [in] BSTR pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] BSTR s, 
                        [out, retval] long* pRetVal);
        [id(0x6002000b)]
        HRESULT Insert(
                        [in] long index, 
                        [in] BSTR value);
    };

    [
      odl,
      uuid(37A864AE-7A4E-3E3A-A86C-259BDC41BB02),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldExtractedEventHandler)    

    ]
    interface _FieldExtractedEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2([in] _Field* Field);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] _Field* Field, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(EE6FBFEF-A66F-3904-91E3-6E6095404B0D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Footnote)    

    ]
    interface _Footnote : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT FootnoteType([out, retval] FootnoteType* pRetVal);
        [id(0x6002002f), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
    };

    [
      odl,
      uuid(86D0FBDD-888A-30A6-B8DE-53E95717A812),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.InlineStory)    

    ]
    interface _InlineStory : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(4183733D-9154-3154-A30A-F4414E36546D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOptions)    

    ]
    interface _SaveOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ExportPrettyFormat([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT ExportPrettyFormat([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT ExportImagesFolder([out, retval] BSTR* pRetVal);
        [id(0x60020006), propput]
        HRESULT ExportImagesFolder([in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT HtmlExportImagesFolderAlias([out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT HtmlExportImagesFolderAlias([in] BSTR pRetVal);
        [id(0x6002000a), propget]
        HRESULT HtmlExportCssStyleSheetFileName([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HtmlExportCssStyleSheetFileName([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT HtmlExportTextInputFormFieldAsText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT HtmlExportTextInputFormFieldAsText([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT HtmlExportHeadersFooters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT HtmlExportHeadersFooters([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT HtmlExportAllowNegativeLeftIndent([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT HtmlExportAllowNegativeLeftIndent([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT HtmlExportXhtmlTransitional([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT HtmlExportXhtmlTransitional([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT HtmlExportDocumentProperties([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT HtmlExportDocumentProperties([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT HtmlExportMetafileAsRaster([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT HtmlExportMetafileAsRaster([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT HtmlExportScaleImageToShapeSize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT HtmlExportScaleImageToShapeSize([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT HtmlExportImageResolution([out, retval] long* pRetVal);
        [id(0x6002001a), propput]
        HRESULT HtmlExportImageResolution([in] long pRetVal);
        [id(0x6002001c), propget]
        HRESULT HtmlExportMetafileResolution([out, retval] long* pRetVal);
        [id(0x6002001c), propput]
        HRESULT HtmlExportMetafileResolution([in] long pRetVal);
        [id(0x6002001e), propget]
        HRESULT HtmlExportCssStyleSheetType([out, retval] CssStyleSheetType* pRetVal);
        [id(0x6002001e), propput]
        HRESULT HtmlExportCssStyleSheetType([in] CssStyleSheetType pRetVal);
        [id(0x60020020), propget]
        HRESULT HtmlExportEncoding([out, retval] _Encoding** pRetVal);
        [id(0x60020020), propputref]
        HRESULT HtmlExportEncoding([in] _Encoding* pRetVal);
        [id(0x60020022), propget]
        HRESULT PdfExportBookmarkLevel([out, retval] long* pRetVal);
        [id(0x60020022), propput]
        HRESULT PdfExportBookmarkLevel([in] long pRetVal);
        [id(0x60020024), propget]
        HRESULT PdfExportFormFieldsAsText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT PdfExportFormFieldsAsText([in] VARIANT_BOOL pRetVal);
        [id(0x60020026), propget]
        HRESULT PdfExportCheckBoxFontName([out, retval] BSTR* pRetVal);
        [id(0x60020026), propput]
        HRESULT PdfExportCheckBoxFontName([in] BSTR pRetVal);
        [id(0x60020028), propget]
        HRESULT PdfExportCheckBoxEmptySign([out, retval] unsigned short* pRetVal);
        [id(0x60020028), propput]
        HRESULT PdfExportCheckBoxEmptySign([in] unsigned short pRetVal);
        [id(0x6002002a), propget]
        HRESULT PdfExportCheckBoxSelectedSign([out, retval] unsigned short* pRetVal);
        [id(0x6002002a), propput]
        HRESULT PdfExportCheckBoxSelectedSign([in] unsigned short pRetVal);
        [id(0x6002002c), propget]
        HRESULT PdfExportMetafileResolution([out, retval] long* pRetVal);
        [id(0x6002002c), propput]
        HRESULT PdfExportMetafileResolution([in] long pRetVal);
        [id(0x6002002e), propget]
        HRESULT PdfExportFloatingTables([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propput]
        HRESULT PdfExportFloatingTables([in] VARIANT_BOOL pRetVal);
        [id(0x60020030), propget]
        HRESULT TxtExportHeadersFooters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030), propput]
        HRESULT TxtExportHeadersFooters([in] VARIANT_BOOL pRetVal);
        [id(0x60020032), propget]
        HRESULT TxtExportEncoding([out, retval] _Encoding** pRetVal);
        [id(0x60020032), propputref]
        HRESULT TxtExportEncoding([in] _Encoding* pRetVal);
        [id(0x60020034), propget]
        HRESULT TxtExportParagraphBreak([out, retval] BSTR* pRetVal);
        [id(0x60020034), propput]
        HRESULT TxtExportParagraphBreak([in] BSTR pRetVal);
        [id(0x60020036), propget]
        HRESULT TxtExportTableLayout([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020036), propput]
        HRESULT TxtExportTableLayout([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(76AB04D9-C55E-3CF4-AE08-546AA1EC3009),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Comment)    

    ]
    interface _Comment : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020027), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT Initial([out, retval] BSTR* pRetVal);
        [id(0x6002002e), propput]
        HRESULT Initial([in] BSTR pRetVal);
        [id(0x60020030), propget]
        HRESULT DateTime([out, retval] DATE* pRetVal);
        [id(0x60020030), propput]
        HRESULT DateTime([in] DATE pRetVal);
        [id(0x60020032), propget]
        HRESULT Author([out, retval] BSTR* pRetVal);
        [id(0x60020032), propput]
        HRESULT Author([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(58A9B30F-ABAC-3EA1-A714-EF04E94C3D0B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.SmartTag)    

    ]
    interface _SmartTag : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020017), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020018), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001a)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001d)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001f)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveAllChildren();
        [id(0x60020025)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020026), propget]
        HRESULT Element([out, retval] BSTR* pRetVal);
        [id(0x60020026), propput]
        HRESULT Element([in] BSTR pRetVal);
        [id(0x60020028), propget]
        HRESULT Uri([out, retval] BSTR* pRetVal);
        [id(0x60020028), propput]
        HRESULT Uri([in] BSTR pRetVal);
        [id(0x6002002a), propget]
        HRESULT Properties([out, retval] _CustomXmlPropertyCollection** pRetVal);
    };

    [
      odl,
      uuid(7E72BCE5-50B1-3951-83CA-E412C4BA18B5),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlPropertyCollection)    

    ]
    interface _CustomXmlPropertyCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _CustomXmlProperty** pRetVal);
        [id(00000000), propputref]
        HRESULT Item(
                        [in] BSTR Name, 
                        [in] _CustomXmlProperty* pRetVal);
        [id(0x60020008), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _CustomXmlProperty** pRetVal);
        [id(0x60020009)]
        HRESULT Add([in] _CustomXmlProperty* property);
        [id(0x6002000a)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b)]
        HRESULT IndexOfKey(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000c)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000d)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000e)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(FBD40483-B9B7-39A1-9124-AE38108DD8CA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlProperty)    

    ]
    interface _CustomXmlProperty : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT Uri([out, retval] BSTR* pRetVal);
        [id(0x60020005), propput]
        HRESULT Uri([in] BSTR pRetVal);
        [id(00000000), propget]
        HRESULT value([out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT value([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(226700B9-2582-311C-9CD8-A1E769481D10),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionCollection)    

    ]
    interface _SectionCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Section** pRetVal);
    };

    [
      odl,
      uuid(AA148376-BCC1-3567-AA03-EC2B772D76A9),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MailMerge)    

    ]
    interface _MailMerge : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Execute([in] IMailMergeDataSource* dataSource);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_2(
                        [in] SAFEARRAY(BSTR) fieldNames, 
                        [in] SAFEARRAY(VARIANT) values);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_3([in] IUnknown* Table);
        [id(0x60020007)]
        HRESULT ExecuteADO([in] VARIANT recordset);
        [id(0x60020008),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_4([in] IUnknown* dataReader);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_5([in] IUnknown* dataView);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_6([in] IUnknown* Row);
        [id(0x6002000b)]
        HRESULT ExecuteWithRegions([in] IMailMergeDataSource* dataSource);
        [id(0x6002000c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_2([in] IUnknown* dataSet);
        [id(0x6002000d),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_3([in] IUnknown* dataTable);
        [id(0x6002000e)]
        HRESULT ExecuteWithRegionsADO(
                        [in] VARIANT recordset, 
                        [in] BSTR TableName);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_4([in] IUnknown* dataView);
        [id(0x60020010),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_5(
                        [in] IUnknown* dataReader, 
                        [in] BSTR TableName);
        [id(0x60020011)]
        HRESULT GetFieldNames([out, retval] SAFEARRAY(BSTR)* pRetVal);
        [id(0x60020012)]
        HRESULT DeleteFields();
        [id(0x60020013), propget]
        HRESULT RemoveEmptyParagraphs([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020013), propput]
        HRESULT RemoveEmptyParagraphs([in] VARIANT_BOOL pRetVal);
        [id(0x60020015), propget]
        HRESULT UseNonMergeFields([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020015), propput]
        HRESULT UseNonMergeFields([in] VARIANT_BOOL pRetVal);
        [id(0x60020017), propget]
        HRESULT MappedDataFields([out, retval] _MappedDataFieldCollection** pRetVal);
        [id(0x60020018)]
        HRESULT add_MergeField([in] _MergeFieldEventHandler* value);
        [id(0x60020019)]
        HRESULT remove_MergeField([in] _MergeFieldEventHandler* value);
        [id(0x6002001a)]
        HRESULT add_MergeImageField([in] _MergeImageFieldEventHandler* value);
        [id(0x6002001b)]
        HRESULT remove_MergeImageField([in] _MergeImageFieldEventHandler* value);
    };

    [
      odl,
      uuid(B759821F-D26F-3C1C-8513-C649AFC0B329),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventHandler)    

    ]
    interface _MergeFieldEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _MergeFieldEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _MergeFieldEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(281BE8AC-A2B1-31B6-B0D6-82E31F47B05E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgs)    

    ]
    interface _MergeFieldEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT Text([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(105097B3-941E-33B2-B646-06E596DE4803),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgsBase)    

    ]
    interface _MergeFieldEventArgsBase : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
    };

    [
      odl,
      uuid(15D78905-1C84-39BE-822A-93461AA3CBF0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventHandler)    

    ]
    interface _MergeImageFieldEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _MergeImageFieldEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _MergeImageFieldEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(79924B1A-7C56-320D-AABD-F5711D547D6D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventArgs)    

    ]
    interface _MergeImageFieldEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
        [id(0x6002000b), propget]
        HRESULT ImageFileName([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT ImageFileName([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT ImageStream([out, retval] _Stream** pRetVal);
        [id(0x6002000d), propputref]
        HRESULT ImageStream([in] _Stream* pRetVal);
        [id(0x6002000f), propget]
        HRESULT image([out, retval] _Image** pRetVal);
        [id(0x6002000f), propputref]
        HRESULT image([in] _Image* pRetVal);
    };

    [
      odl,
      uuid(B32C8B83-E708-33DC-9CDA-56B1EB356A74),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MappedDataFieldCollection)    

    ]
    interface _MappedDataFieldCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR DocumentFieldName, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] BSTR DocumentFieldName, 
                        [in] BSTR pRetVal);
        [id(0x60020008)]
        HRESULT Add(
                        [in] BSTR DocumentFieldName, 
                        [in] BSTR dataSourceFieldName);
        [id(0x60020009)]
        HRESULT ContainsKey(
                        [in] BSTR DocumentFieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a)]
        HRESULT ContainsValue(
                        [in] BSTR dataSourceFieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b)]
        HRESULT Remove([in] BSTR DocumentFieldName);
        [id(0x6002000c)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(CECB3478-AEA4-3340-9D26-5E50E044E9B4),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.UnsupportedFileFormatException)    

    ]
    interface _UnsupportedFileFormatException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(BD9F8174-C9E3-3EF9-9B09-3E7147C16A91),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.RunCollection)    

    ]
    interface _RunCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Run** pRetVal);
    };

    [
      odl,
      uuid(6BCDD665-2874-31D3-A5C7-AFEC26603D23),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileCorruptedException)    

    ]
    interface _FileCorruptedException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(6843CA22-4648-300A-9FCD-561F899825EC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkCollection)    

    ]
    interface _BookmarkCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Bookmark** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] BSTR bookmarkName, 
                        [out, retval] _Bookmark** pRetVal);
        [id(0x60020008)]
        HRESULT Remove([in] _Bookmark* Bookmark);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Remove)]
        HRESULT Remove_2([in] BSTR bookmarkName);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(A2863F84-634C-387D-A771-4009D6445B7E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluator)    

    ]
    interface _ReplaceEvaluator : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _ReplaceEvaluatorArgs* e, 
                        [out, retval] ReplaceAction* pRetVal);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _ReplaceEvaluatorArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke(
                        [in] IAsyncResult* result, 
                        [out, retval] ReplaceAction* pRetVal);
    };

    [
      odl,
      uuid(C3A16025-38EE-3846-B567-44F2EF990F4F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluatorArgs)    

    ]
    interface _ReplaceEvaluatorArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Match([out, retval] IUnknown** pRetVal);
        [id(0x60020005), propget]
        HRESULT MatchNode([out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT MatchOffset([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT replacement([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT replacement([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT GroupName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT GroupName([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT GroupIndex([out, retval] long* pRetVal);
        [id(0x6002000b), propput]
        HRESULT GroupIndex([in] long pRetVal);
    };

    [
      odl,
      uuid(1732958B-15B4-3200-88A6-1A435E5D0823),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeList)    

    ]
    interface _NodeList : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
    };

    [
      odl,
      uuid(9E37A9E9-FBBB-3446-BD30-84B2E9E31544),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteOptions)    

    ]
    interface _FootnoteOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Location([out, retval] FootnoteLocation* pRetVal);
        [id(0x60020004), propput]
        HRESULT Location([in] FootnoteLocation pRetVal);
        [id(0x60020006), propget]
        HRESULT NumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x60020006), propput]
        HRESULT NumberStyle([in] NumberStyle pRetVal);
        [id(0x60020008), propget]
        HRESULT StartNumber([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT StartNumber([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT RestartRule([out, retval] FootnoteNumberingRule* pRetVal);
        [id(0x6002000a), propput]
        HRESULT RestartRule([in] FootnoteNumberingRule pRetVal);
    };

    [
      odl,
      uuid(B0DB9A56-B25A-3917-95A4-A34E2E9BBE3D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompatibilityOptions)    

    ]
    interface _CompatibilityOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NoTabForHangingIndent([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT NoTabForHangingIndent([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT NoExtraSpaceForRaisedLoweredCharacters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propput]
        HRESULT NoExtraSpaceForRaisedLoweredCharacters([in] VARIANT_BOOL pRetVal);
        [id(0x60020008), propget]
        HRESULT SuppressSpaceBeforeAfterPageOrBreak([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT SuppressSpaceBeforeAfterPageOrBreak([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT WrapTrailingSpaces([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT WrapTrailingSpaces([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT PrintColorsAsBlack([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT PrintColorsAsBlack([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT NoColumnBalance([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT NoColumnBalance([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT ConvertMailMergeEsc([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT ConvertMailMergeEsc([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT SuppressTopSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT SuppressTopSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT MacWord5TableBorders([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT MacWord5TableBorders([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT TransparentMetafiles([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT TransparentMetafiles([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT BreaksInFrames([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT BreaksInFrames([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT SwapBordersOnOddFacingPages([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT SwapBordersOnOddFacingPages([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT ConvertBackslashIntoYenSign([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT ConvertBackslashIntoYenSign([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT DontExpandSpacesOnShiftReturnLine([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001e), propput]
        HRESULT DontExpandSpacesOnShiftReturnLine([in] VARIANT_BOOL pRetVal);
        [id(0x60020020), propget]
        HRESULT UnderlineOnTrailingSpaces([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT UnderlineOnTrailingSpaces([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT BalanceSbcsAndDbcsCharacters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020022), propput]
        HRESULT BalanceSbcsAndDbcsCharacters([in] VARIANT_BOOL pRetVal);
        [id(0x60020024), propget]
        HRESULT MacWord5TopSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT MacWord5TopSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x60020026), propget]
        HRESULT SpacingInWholePoints([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT SpacingInWholePoints([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT PrintBodyBeforeHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propput]
        HRESULT PrintBodyBeforeHeaderFooter([in] VARIANT_BOOL pRetVal);
        [id(0x6002002a), propget]
        HRESULT NoLeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propput]
        HRESULT NoLeading([in] VARIANT_BOOL pRetVal);
        [id(0x6002002c), propget]
        HRESULT AddSpaceForUnderlines([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propput]
        HRESULT AddSpaceForUnderlines([in] VARIANT_BOOL pRetVal);
        [id(0x6002002e), propget]
        HRESULT MacWord5SmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propput]
        HRESULT MacWord5SmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020030), propget]
        HRESULT WordPerfect5ExtraLineSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030), propput]
        HRESULT WordPerfect5ExtraLineSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x60020032), propget]
        HRESULT TruncateFontHeight([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020032), propput]
        HRESULT TruncateFontHeight([in] VARIANT_BOOL pRetVal);
        [id(0x60020034), propget]
        HRESULT SubstituteFonts([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020034), propput]
        HRESULT SubstituteFonts([in] VARIANT_BOOL pRetVal);
        [id(0x60020036), propget]
        HRESULT Word6LineWrap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020036), propput]
        HRESULT Word6LineWrap([in] VARIANT_BOOL pRetVal);
        [id(0x60020038), propget]
        HRESULT OldWordBorderRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020038), propput]
        HRESULT OldWordBorderRules([in] VARIANT_BOOL pRetVal);
        [id(0x6002003a), propget]
        HRESULT DontCenterExactLineHeightLines([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003a), propput]
        HRESULT DontCenterExactLineHeightLines([in] VARIANT_BOOL pRetVal);
        [id(0x6002003c), propget]
        HRESULT SuppressBottomSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003c), propput]
        HRESULT SuppressBottomSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x6002003e), propget]
        HRESULT WordPerfect5SpaceWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propput]
        HRESULT WordPerfect5SpaceWidth([in] VARIANT_BOOL pRetVal);
        [id(0x60020040), propget]
        HRESULT WordPerfect6Justification([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020040), propput]
        HRESULT WordPerfect6Justification([in] VARIANT_BOOL pRetVal);
        [id(0x60020042), propget]
        HRESULT PrinterMetrics([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020042), propput]
        HRESULT PrinterMetrics([in] VARIANT_BOOL pRetVal);
        [id(0x60020044), propget]
        HRESULT Word97AutoShapes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020044), propput]
        HRESULT Word97AutoShapes([in] VARIANT_BOOL pRetVal);
        [id(0x60020046), propget]
        HRESULT OldWordFootnotes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT OldWordFootnotes([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT NoHtmlParagraphAutoSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT NoHtmlParagraphAutoSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT AdjustLineToGridInTable([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT AdjustLineToGridInTable([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT ForgetLastTabAlignment([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propput]
        HRESULT ForgetLastTabAlignment([in] VARIANT_BOOL pRetVal);
        [id(0x6002004e), propget]
        HRESULT Word95AutoSpace([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004e), propput]
        HRESULT Word95AutoSpace([in] VARIANT_BOOL pRetVal);
        [id(0x60020050), propget]
        HRESULT AlignTableRowsIndependently([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020050), propput]
        HRESULT AlignTableRowsIndependently([in] VARIANT_BOOL pRetVal);
        [id(0x60020052), propget]
        HRESULT TablesWithRawWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020052), propput]
        HRESULT TablesWithRawWidth([in] VARIANT_BOOL pRetVal);
        [id(0x60020054), propget]
        HRESULT AllowTableRowsLayOutApart([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020054), propput]
        HRESULT AllowTableRowsLayOutApart([in] VARIANT_BOOL pRetVal);
        [id(0x60020056), propget]
        HRESULT Word97LineBreakingRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020056), propput]
        HRESULT Word97LineBreakingRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020058), propget]
        HRESULT DontBreakWrappedTables([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020058), propput]
        HRESULT DontBreakWrappedTables([in] VARIANT_BOOL pRetVal);
        [id(0x6002005a), propget]
        HRESULT NoSnapToGridInsideTablesWithInlines([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005a), propput]
        HRESULT NoSnapToGridInsideTablesWithInlines([in] VARIANT_BOOL pRetVal);
        [id(0x6002005c), propget]
        HRESULT SelectEntireField([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005c), propput]
        HRESULT SelectEntireField([in] VARIANT_BOOL pRetVal);
        [id(0x6002005e), propget]
        HRESULT LineBreakingRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005e), propput]
        HRESULT LineBreakingRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020060), propget]
        HRESULT NoHangingPunctuation([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020060), propput]
        HRESULT NoHangingPunctuation([in] VARIANT_BOOL pRetVal);
        [id(0x60020062), propget]
        HRESULT NoAsianRulesForLineBreaks([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020062), propput]
        HRESULT NoAsianRulesForLineBreaks([in] VARIANT_BOOL pRetVal);
        [id(0x60020064), propget]
        HRESULT Word2002TableStyleRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020064), propput]
        HRESULT Word2002TableStyleRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020066), propget]
        HRESULT AllowTablesExtendIntoMargins([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020066), propput]
        HRESULT AllowTablesExtendIntoMargins([in] VARIANT_BOOL pRetVal);
        [id(0x60020068), propget]
        HRESULT UICompat97To2003([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propput]
        HRESULT UICompat97To2003([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(6F70DA8D-CC79-363B-A91A-2F2F1B4B9354),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ViewOptions)    

    ]
    interface _ViewOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ViewType([out, retval] ViewType* pRetVal);
        [id(0x60020004), propput]
        HRESULT ViewType([in] ViewType pRetVal);
        [id(0x60020006), propget]
        HRESULT ZoomType([out, retval] ZoomType* pRetVal);
        [id(0x60020006), propput]
        HRESULT ZoomType([in] ZoomType pRetVal);
        [id(0x60020008), propget]
        HRESULT ZoomPercent([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT ZoomPercent([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT DoNotDisplayPageBoundaries([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT DoNotDisplayPageBoundaries([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT DisplayBackgroundShape([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DisplayBackgroundShape([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT FormsDesign([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT FormsDesign([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(B6AA6265-85E8-3394-B337-A05DA6E36704),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ComHelper)    

    ]
    interface _ComHelper : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Open(
                        [in] BSTR fileName, 
                        [out, retval] _Document** pRetVal);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Open)]
        HRESULT Open_2(
                        [in] _Stream* stream, 
                        [out, retval] _Document** pRetVal);
    };

    [
      odl,
      uuid(90A47E31-F0F7-3A24-95FF-B3A7083D321B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageEventArgs)    

    ]
    interface _PageEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT PageSetup([out, retval] _PageSetup** pRetVal);
        [id(0x60020005), propget]
        HRESULT PageNumber([out, retval] long* pRetVal);
        [id(0x60020006), propget]
        HRESULT Graphics([out, retval] IUnknown** pRetVal);
        [id(0x60020006), propputref]
        HRESULT Graphics([in] IUnknown* pRetVal);
    };

    [
      odl,
      uuid(6E198CC8-DC4D-3BCB-A7C9-2F0D8CD989A9),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageEventHandler)    

    ]
    interface _PageEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _PageEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _PageEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(E072679F-8C27-3722-9654-EC1C3E568B9B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.DocumentRenderer)    

    ]
    interface _DocumentRenderer : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT add_StartDocument([in] _PageEventHandler* value);
        [id(0x60020005)]
        HRESULT remove_StartDocument([in] _PageEventHandler* value);
        [id(0x60020006)]
        HRESULT add_EndDocument([in] _PageEventHandler* value);
        [id(0x60020007)]
        HRESULT remove_EndDocument([in] _PageEventHandler* value);
        [id(0x60020008)]
        HRESULT add_StartPage([in] _PageEventHandler* value);
        [id(0x60020009)]
        HRESULT remove_StartPage([in] _PageEventHandler* value);
        [id(0x6002000a)]
        HRESULT add_EndPage([in] _PageEventHandler* value);
        [id(0x6002000b)]
        HRESULT remove_EndPage([in] _PageEventHandler* value);
        [id(0x6002000c), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x6002000c), propputref]
        HRESULT Document([in] _Document* pRetVal);
        [id(0x6002000e), propget]
        HRESULT PageBounds([out, retval] PageBounds* pRetVal);
        [id(0x6002000e), propput]
        HRESULT PageBounds([in] PageBounds pRetVal);
        [id(0x60020010), propget]
        HRESULT BackgroundColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020010), propput]
        HRESULT BackgroundColor([in] OLE_COLOR pRetVal);
        [id(0x60020012), propget]
        HRESULT PrinterSettings([out, retval] IUnknown** pRetVal);
        [id(0x60020013), propget]
        HRESULT PrintDocument([out, retval] IUnknown** pRetVal);
        [id(0x60020014)]
        HRESULT Print();
        [id(0x60020015)]
        HRESULT CancelPrinting();
        [id(0x60020016)]
        HRESULT GetPage(
                        [in] long PageNumber, 
                        [out, retval] _Bitmap** pRetVal);
        [id(0x60020017)]
        HRESULT GetPages([out, retval] SAFEARRAY(_Bitmap*)* pRetVal);
    };

    [
      odl,
      uuid(91C94BFE-971D-3B9D-931B-93695B260318),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumnCollection)    

    ]
    interface _TextColumnCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetCount([in] long newCount);
        [id(0x60020005), propget]
        HRESULT EvenlySpaced([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020005), propput]
        HRESULT EvenlySpaced([in] VARIANT_BOOL pRetVal);
        [id(0x60020007), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x6002000a), propget]
        HRESULT LineBetween([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT LineBetween([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _TextColumn** pRetVal);
    };

    [
      odl,
      uuid(A5274BA4-28D4-30B5-9E34-A156A7009489),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Viewer.PageNavigator)    

    ]
    interface _PageNavigator : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT MoveToPreviousPage();
        [id(0x60020005)]
        HRESULT MoveToNextPage();
        [id(0x60020006)]
        HRESULT MoveToFirstPage();
        [id(0x60020007)]
        HRESULT MoveToLastPage();
        [id(0x60020008)]
        HRESULT GoToPage([in] long PageNumber);
        [id(0x60020009), propget]
        HRESULT Renderer([out, retval] _DocumentRenderer** pRetVal);
        [id(0x6002000a), propget]
        HRESULT PageCount([out, retval] long* pRetVal);
        [id(0x6002000b), propget]
        HRESULT CurrentPage([out, retval] _Bitmap** pRetVal);
        [id(0x6002000c), propget]
        HRESULT CurrentPageNumber([out, retval] long* pRetVal);
        [id(0x6002000c), propput]
        HRESULT CurrentPageNumber([in] long pRetVal);
        [id(0x6002000e), propget]
        HRESULT IsFirstPage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000f), propget]
        HRESULT IsLastPage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propget]
        HRESULT PageCounterString([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(786D567A-E047-369D-A187-B9EEC5AF9B6D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.License)    

    ]
    interface _License : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetLicense([in] BSTR licenseName);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetLicense)]
        HRESULT SetLicense_2([in] _Stream* stream);
    };
};
