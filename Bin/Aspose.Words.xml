<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Words</name>
  </assembly>
  <members>
    <member name="T:Aspose.Words.DocumentVisitor">
      <summary>
            Base class for custom document visitors.
            </summary>
      <remarks>
        <p>With <b>DocumentVisitor</b> you can define and execute custom operations
            that require enumeration over the document tree.</p>
        <p>For example, Aspose.Words uses <b>DocumentVisitor</b> internally for saving <b>Document</b>
            in various formats and for other operations like finding fields or bookmarks over
            a fragment of a document.</p>
        <p>To use <b>DocumentVisitor</b>:</p>
        <list type="number">
          <item>Create a class derived from <b>DocumentVisitor</b>.</item>
          <item>Override and provide implementations for some or all of the VisitXXX methods
            to perform some custom operations.</item>
          <item>Call <see cref="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)">Node.Accept</see> on the <b>Node</b> that
            you want to start the enumeration from.</item>
        </list>
        <p>
          <b>DocumentVisitor</b> provides default implementations for all of the VisitXXX methods 
            to make it easier to create new document visitors as only the methods required for the particular
            visitor need to be overridden. It is not necessary to override all of the visitor methods.</p>
        <p>For more information see the Visitor design pattern.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitDocumentStart(Aspose.Words.Document)">
      <summary>
            Called when enumeration of the document has started.
            </summary>
      <param name="doc">The <b>Document</b> that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitDocumentEnd(Aspose.Words.Document)">
      <summary>
            Called when enumeration of the document has finished.
            </summary>
      <param name="doc">The <b>Document</b> that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitSectionStart(Aspose.Words.Section)">
      <summary>
            Called when enumeration of a section has started.
            </summary>
      <param name="section">The <b>Section</b> that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitSectionEnd(Aspose.Words.Section)">
      <summary>
            Called when enumeration of a section has ended.
            </summary>
      <param name="section">The <b>Section</b> that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitBodyStart(Aspose.Words.Body)">
      <summary>
            Called when enumeration of the main text story in a section has started.
            </summary>
      <param name="body">The <b>Body</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitBodyEnd(Aspose.Words.Body)">
      <summary>
            Called when enumeration of the main text story in a section has ended.
            </summary>
      <param name="body">The <b>Body</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitHeaderFooterStart(Aspose.Words.HeaderFooter)">
      <summary>
            Called when enumeration of a header or footer in a section has started.
            </summary>
      <param name="headerFooter">The <b>HeaderFooter</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitHeaderFooterEnd(Aspose.Words.HeaderFooter)">
      <summary>
            Called when enumeration of a header or footer in a section has ended.
            </summary>
      <param name="headerFooter">The <b>HeaderFooter</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitParagraphStart(Aspose.Words.Paragraph)">
      <summary>
            Called when enumeration of a paragraph has started.
            </summary>
      <param name="paragraph">The <b>Paragraph</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitParagraphEnd(Aspose.Words.Paragraph)">
      <summary>
            Called when enumeration of a paragraph has ended.
            </summary>
      <param name="paragraph">The <b>Paragraph</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitTableStart(Aspose.Words.Tables.Table)">
      <summary>
            Called when enumeration of a table has started.
            </summary>
      <param name="table">The <b>Table</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitTableEnd(Aspose.Words.Tables.Table)">
      <summary>
            Called when enumeration of a table has ended.
            </summary>
      <param name="table">The <b>Table</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitRowStart(Aspose.Words.Tables.Row)">
      <summary>
            Called when enumeration of a table row has started.
            </summary>
      <param name="row">The <b>Row</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitRowEnd(Aspose.Words.Tables.Row)">
      <summary>
            Called when enumeration of a table row has ended.
            </summary>
      <param name="row">The <b>Row</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitCellStart(Aspose.Words.Tables.Cell)">
      <summary>
            Called when enumeration of a table cell has started.
            </summary>
      <param name="cell">The <b>Cell</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitCellEnd(Aspose.Words.Tables.Cell)">
      <summary>
            Called when enumeration of a table cell has ended.
            </summary>
      <param name="cell">The <b>Cell</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitRun(Aspose.Words.Run)">
      <summary>
            Called when a run of text in the is encountered.
            </summary>
      <param name="run">The <b>Run</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFieldStart(Aspose.Words.Fields.FieldStart)">
      <summary>
            Called when a field starts in the document.
            </summary>
      <remarks>
        <p>A field in a Word Word document consists of a field code and field value.</p>
        <p>For example, a field that displays a page number can be represented as follows:</p>
        <p>[FieldStart]PAGE[FieldSeparator]98[FieldEnd]</p>
        <p>The field separator separates field code from field value in the document. Note that some 
            fields have only field code and do not have field separator and field value.</p>
        <p>Fields can be nested.</p>
      </remarks>
      <param name="fieldStart">The <b>FieldStart</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFieldSeparator(Aspose.Words.Fields.FieldSeparator)">
      <summary>
            Called when a field separator is encountered in the document.
            </summary>
      <remarks>
        <p>The field separator separates field code from field value in the document. Note that some 
            fields have only field code and do not have field separator and field value.</p>
        <p>For more info see <see cref="M:Aspose.Words.DocumentVisitor.VisitFieldStart(Aspose.Words.Fields.FieldStart)" /></p>
      </remarks>
      <param name="fieldSeparator">The <b>FieldSeparator</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFieldEnd(Aspose.Words.Fields.FieldEnd)">
      <summary>
            Called when a field ends in the document.
            </summary>
      <remarks>
        <p>For more info see <see cref="M:Aspose.Words.DocumentVisitor.VisitFieldStart(Aspose.Words.Fields.FieldStart)" /></p>
      </remarks>
      <param name="fieldEnd">The <b>FieldEnd</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFormField(Aspose.Words.Fields.FormField)">
      <summary>
            Called when a form field is encountered in the document.
            </summary>
      <param name="formField">The <b>FormField</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitBookmarkStart(Aspose.Words.BookmarkStart)">
      <summary>
            Called when a start of a bookmark is encountered in the document.
            </summary>
      <param name="bookmarkStart">The <b>BookmarkStart</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitBookmarkEnd(Aspose.Words.BookmarkEnd)">
      <summary>
            Called when an end of a bookmark is encountered in the document.
            </summary>
      <param name="bookmarkEnd">The <b>BookmarkEnd</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFootnoteStart(Aspose.Words.Footnote)">
      <summary>
            Called when enumeration of a footnote or endnote text has started.
            </summary>
      <param name="footnote">The <b>Footnote</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitFootnoteEnd(Aspose.Words.Footnote)">
      <summary>
            Called when enumeration of a footnote or endnote text has ended.
            </summary>
      <param name="footnote">The <b>Footnote</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitCommentStart(Aspose.Words.Comment)">
      <summary>
            Called when enumeration of a comment text has started.
            </summary>
      <param name="comment">The <b>Comment</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitCommentEnd(Aspose.Words.Comment)">
      <summary>
            Called when enumeration of a comment text has ended.
            </summary>
      <param name="comment">The <b>Comment</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitShapeStart(Aspose.Words.Drawing.Shape)">
      <summary>
            Called when enumeration of a shape has started.
            </summary>
      <param name="shape">The <b>Shape</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitShapeEnd(Aspose.Words.Drawing.Shape)">
      <summary>
            Called when enumeration of a shape has ended.
            </summary>
      <param name="shape">The <b>Shape</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitGroupShapeStart(Aspose.Words.Drawing.GroupShape)">
      <summary>
            Called when enumeration of a group shape has started.
            </summary>
      <param name="groupShape">The <b>GroupShape</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitGroupShapeEnd(Aspose.Words.Drawing.GroupShape)">
      <summary>
            Called when enumeration of a group shape has ended.
            </summary>
      <param name="groupShape">The <b>GroupShape</b> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitSpecialChar(Aspose.Words.SpecialChar)">
      <summary>
            Called when a <see cref="T:Aspose.Words.SpecialChar" /> node is encountered in the document.
            </summary>
      <param name="specialChar">The <see cref="T:Aspose.Words.SpecialChar" /> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitSmartTagStart(Aspose.Words.Markup.SmartTag)">
      <summary>
            Called when enumeration of a smart tag has started.
            </summary>
      <param name="smartTag">The <see cref="T:Aspose.Words.Markup.SmartTag" /> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentVisitor.VisitSmartTagEnd(Aspose.Words.Markup.SmartTag)">
      <summary>
            Called when enumeration of a group shape has ended.
            </summary>
      <param name="smartTag">The <see cref="T:Aspose.Words.Markup.SmartTag" /> node that is being visited.</param>
      <returns>A <see cref="T:Aspose.Words.VisitorAction" /> value that specifies how to continue the enumeration.</returns>
    </member>
    <member name="T:Aspose.Words.ConvertUtil">
      <summary>
            Provides helper functions to convert between various measurement units.
            </summary>
      <dev>
            This is only a public wrapper that makes functions available in the public Aspose.Words namespace.
            The actual implementation is in <see cref="T:Aspose.ConvertUtilCore" />.
            </dev>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PointToPixel(System.Double)">
      <overloads>Converts points to pixels.</overloads>
      <summary>
            Converts points to pixels at 96 dpi.
            </summary>
      <param name="points">The value to convert.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PointToPixel(System.Double,System.Double)">
      <summary>
            Converts points to pixels at the specified pixel resolution.
            </summary>
      <param name="points">The value to convert.</param>
      <param name="resolution">The dpi (dots per inch) resolution.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PixelToPoint(System.Double)">
      <overloads>Converts pixels to points.</overloads>
      <summary>
            Convers pixels to points at 96 dpi.
            </summary>
      <param name="pixels">The value to convert.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PixelToPoint(System.Double,System.Double)">
      <summary>
            Converts pixels to points at the specified pixel resolution.
            </summary>
      <param name="pixels">The value to convert.</param>
      <param name="resolution">The dpi (dots per inch) resolution.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PixelToNewDpi(System.Double,System.Double,System.Double)">
      <summary>
            Converts pixels from one resolution to another.
            </summary>
      <param name="pixels">The value to convert.</param>
      <param name="oldDpi">The current dpi (dots per inch) resolution.</param>
      <param name="newDpi">The new dpi (dots per inch) resolution.</param>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.InchToPoint(System.Double)">
      <summary>
            Converts inches to points.
            </summary>
      <param name="inches">The value to convert.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.PointToInch(System.Double)">
      <summary>
            Converts points to inches.
            </summary>
      <param name="points">The value to convert.</param>
      <remarks>
            1 inch equals 72 points.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ConvertUtil.MillimeterToPoint(System.Double)">
      <summary>
            Converts millimeters to points.
            </summary>
      <param name="millimeters">The value to convert.</param>
      <remarks>
            1 inch equals 25.4 millimeters. 1 inch equals 72 points.
            </remarks>
    </member>
    <member name="T:Aspose.Words.ComHelper">
      <summary>
            Provides methods for COM clients to load a document into Aspose.Words. 
            </summary>
      <remarks>
        <p>Use the <see cref="T:Aspose.Words.ComHelper" /> class to load a document from a file or stream into a 
            <see cref="T:Aspose.Words.Document" /> object in a COM application.</p>
        <p>The <see cref="T:Aspose.Words.Document" /> class provides a default constructor to create a new document
            and also provides overloaded constructors to load a document from a file or stream.
            If you are using Aspose.Words from a .NET application, you can use all of the <see cref="T:Aspose.Words.Document" />
            constructors directly, but if you are using Aspose.Words from a COM application,
            only the default <see cref="T:Aspose.Words.Document" /> constructor is available.</p>
      </remarks>
      <example>
        <code>
            [VBScript]
            
            Dim helper
            Set helper = CreateObject("Aspose.Words.ComHelper")
            
            Dim doc
            Set doc = helper.Open(fileName)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Words.ComHelper.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Aspose.Words.ComHelper.Open(System.String)">
      <overloads>Allows a COM application to load a document.</overloads>
      <summary>
            Allows a COM application to load a <see cref="T:Aspose.Words.Document" /> from a file.
            </summary>
      <remarks>
        <p>This method is same as calling the <see cref="T:Aspose.Words.Document" /> constructor with a file name parameter.</p>
      </remarks>
      <example>
        <code>
            [VBScript]
            
            Dim helper
            Set helper = CreateObject("Aspose.Words.ComHelper")
            
            Dim doc
            Set doc = helper.Open(fileName)
            </code>
      </example>
      <param name="fileName">Filename of the document to load.</param>
      <returns>A <see cref="T:Aspose.Words.Document" /> object that represents a Word document.</returns>
    </member>
    <member name="M:Aspose.Words.ComHelper.Open(System.IO.Stream)">
      <summary>
            Allows a COM application to load <see cref="T:Aspose.Words.Document" /> from a stream.
            </summary>
      <remarks>
        <p>This method is same as calling the <see cref="T:Aspose.Words.Document" /> constructor with a stream parameter.</p>
      </remarks>
      <param name="stream">A .NET stream object that contains the document to load.</param>
      <returns>A <see cref="T:Aspose.Words.Document" /> object that represents a Word document.</returns>
    </member>
    <member name="T:Aspose.Words.ParagraphAlignment">
      <summary>
            Specifies text alignment in a paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.ParagraphAlignment.Left">
      <summary>
            Text is aligned to the left.
            </summary>
    </member>
    <member name="F:Aspose.Words.ParagraphAlignment.Center">
      <summary>
            Text is centered horizontally.
            </summary>
    </member>
    <member name="F:Aspose.Words.ParagraphAlignment.Right">
      <summary>
            Text is aligned to the right.
            </summary>
    </member>
    <member name="F:Aspose.Words.ParagraphAlignment.Justify">
      <summary>
            Text is aligned to both left and right.
            </summary>
            This also seems to correspond to Justify Low (normal Arabic kashidas length).
        </member>
    <member name="F:Aspose.Words.ParagraphAlignment.Distributed">
      <summary>
            Text is evenly distributed.
            </summary>
            This also seems to corresponds to Justify Medium (wider Arabic kashidas length).
        </member>
    <member name="T:Aspose.Words.Font">
      <summary>
            Contains font attributes (font name, font size, color, and so on) for an object.
            </summary>
      <remarks>
        <p>You do not create instances of the <see cref="T:Aspose.Words.Font" /> class directly. You just use
            <see cref="T:Aspose.Words.Font" /> to access the font properties of the various objects such as <see cref="T:Aspose.Words.Run" />,
            <see cref="T:Aspose.Words.Paragraph" />, <see cref="T:Aspose.Words.Style" />, <see cref="T:Aspose.Words.DocumentBuilder" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Font.ClearFormatting">
      <summary>
            Resets to default font formatting.
            </summary>
      <remarks>
        <p>Removes all font formatting specified explicitly on the object from which
            <b>Font</b> was obtained so the font formatting will be inherited from
            the appropriate parent.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Font.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Font.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Font.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Font.FetchInheritedShadingAttr(System.Int32)">
      <summary>
            IShadingAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Name">
      <summary>
            Gets or sets the name of the font.
            </summary>
      <remarks>
        <p>When getting, returns <see cref="P:Aspose.Words.Font.NameAscii" />.</p>
        <p>When setting, sets <see cref="P:Aspose.Words.Font.NameAscii" />, <see cref="P:Aspose.Words.Font.NameBi" />, <see cref="P:Aspose.Words.Font.NameFarEast" /> 
            and <see cref="P:Aspose.Words.Font.NameOther" /> to the specified value.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.NameAscii">
      <summary>
            Returns or sets the font used for Latin text (characters with character codes from 0 (zero) through 127). 
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Font.Name" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.NameBi">
      <summary>
            Returns or sets the name of the font in a right-to-left language document.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Font.Name" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.NameFarEast">
      <summary>
            Returns or sets an East Asian font name.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Font.Name" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.NameOther">
      <summary>
            Returns or sets the font used for characters with character codes from 128 through 255.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Font.Name" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.Size">
      <summary>
            Gets or sets the font size in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.SizeBi">
      <summary>
            Gets or sets the font size in points used in a right-to-left document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Bold">
      <summary>
            True if the font is formatted as bold.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.BoldBi">
      <summary>
            True if the right-to-left text is formatted as bold.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Italic">
      <summary>
            True if the font is formatted as italic.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.ItalicBi">
      <summary>
            True if the right-to-left text is formatted as italic.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Color">
      <summary>
            Gets or sets the color of the font.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.StrikeThrough">
      <summary>
            True if the font is formatted as strikethrough text.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.DoubleStrikeThrough">
      <summary>
            True if the font is formatted as double strikethrough text.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Shadow">
      <summary>
            True if the font is formatted as shadowed.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Outline">
      <summary>
            True of the font is formatted as outline.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Emboss">
      <summary>
            True if the font is formatted as embossed.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Engrave">
      <summary>
            True if the font is formatted as engraved.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Superscript">
      <summary>
            True if the font is formatted as superscript. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Subscript">
      <summary>
            True if the font is formatted as subscript.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.SmallCaps">
      <summary>
            True if the font is formatted as small capital letters.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.AllCaps">
      <summary>
            True if the font is formatted as all capital letters.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Hidden">
      <summary>
            True if the font is formatted as hidden text.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Underline">
      <summary>
            Gets or sets the type of underline applied to the font. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.UnderlineColor">
      <summary>
            Gets or sets the color of the underline applied to the font.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Scaling">
      <summary>
            Gets or sets character width scaling in percent.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Spacing">
      <summary>
            Returns or sets the spacing (in points) between characters .
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Position">
      <summary>
            Gets or sets the position of text (in points) relative to the base line. 
            A positive number raises the text, and a negative number lowers it. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Kerning">
      <summary>
            Gets or sets the font size at which kerning starts.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.HighlightColor">
      <summary>
            Gets or sets the highlight (marker) color.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.TextEffect">
      <summary>
            Gets or sets the font animation effect.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Bidi">
      <summary>
            True to specify that the reading order for this run shall be right to left.
            </summary>
      <remarks>
        <p>This setting determines the way in which the run contents are presented in the document 
            when punctuation characters are part of the run's contents.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Font.ComplexScript">
      <summary>
            Specifies whether the contents of this run shall be treated as complex script text regardless 
            of their Unicode character values when determining the formatting for this run.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.NoProofing">
      <summary>
            True when the formatted characters are not to be spell checked.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.LocaleId">
      <summary>
            Gets or sets the locale identifier (language) of the formatted characters.
            </summary>
      <remarks>
            For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Font.LocaleIdBi">
      <summary>
            Gets or sets the locale identifier (language) of the formatted right-to-left characters.
            </summary>
      <remarks>
            For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx
            </remarks>
    </member>
    <member name="P:Aspose.Words.Font.LocaleIdFarEast">
      <summary>
            Gets or sets the locale identifier (language) of the formatted Asian characters.
            </summary>
      <remarks>
            For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx
            </remarks>
    </member>
    <member name="P:Aspose.Words.Font.Border">
      <summary>
            Returns a Border object that specifies border for the font.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Shading">
      <summary>
            Returns a Shading object that refers to the shading formatting for the font.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.Style">
      <summary>
            Gets or sets the character style applied to this formatting.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.StyleName">
      <summary>
            Gets or sets the name of the character style applied to this formatting.
            </summary>
    </member>
    <member name="P:Aspose.Words.Font.StyleIdentifier">
      <summary>
            Gets or sets the locale independent style identifier of the character style applied to this formatting.
            </summary>
    </member>
    <member name="T:Aspose.Words.Node">
      <summary>
            Base class for all nodes of a Word document.
            </summary>
      <remarks>
        <p>A document is represented as a tree of nodes, similar to DOM or XmlDocument.</p>
        <p>For more info see the Composite design pattern.</p>
        <p>The Node class:</p>
        <list type="bullet">
          <item>Defines the child node interface.</item>
          <item>Defines the interface for visiting nodes.</item>
          <item>Provides default cloning capability.</item>
          <item>Implements parent node and owner document mechanisms.</item>
          <item>Implements access to sibling nodes.</item>
        </list>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Node.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
    </member>
    <member name="M:Aspose.Words.Node.GetText">
      <summary>
             Gets the text of this node and of all its children.
             </summary>
      <remarks>
        <p>The returned string includes all control and special characters as described in <see cref="T:Aspose.Words.ControlChar" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Node.GetAncestor(System.Type)">
      <summary>
            Gets the first ancestor of the specified object type.
            </summary>
      <param name="ancestorType">The object type of the ancestor to retrieve.</param>
      <returns>The ancestor of the specified type or null if no ancestor of this type was found.</returns>
      <remarks>
        <p>The ancestor type matches if it is equal to ancestorType or derived from ancestorType.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Node.GetAncestor(Aspose.Words.NodeType)">
      <summary>
            Gets the first ancestor of the specified <see cref="T:Aspose.Words.NodeType" />.
            </summary>
      <param name="ancestorType">The node type of the ancestor to retrieve.</param>
      <returns>The ancestor of the specified type or null if no ancestor of this type was found.</returns>
    </member>
    <member name="M:Aspose.Words.Node.Remove">
      <summary>
            Removes itself from the parent.
            </summary>
    </member>
    <member name="M:Aspose.Words.Node.NextPreOrder(Aspose.Words.Node)">
      <summary>
            Gets next node according to the pre-order tree traversal algorithm.
            </summary>
      <param name="rootNode">The top node (limit) of traversal.</param>
      <returns>Next node in pre-order order. Null if reached the rootNode.</returns>
    </member>
    <member name="M:Aspose.Words.Node.PreviousPreOrder(Aspose.Words.Node)">
      <summary>
            Gets the previous node according to the pre-order tree traversal algorithm.
            </summary>
      <param name="rootNode">The top node (limit) of traversal.</param>
      <returns>Previous node in pre-order order. Null if reached the rootNode.</returns>
    </member>
    <member name="M:Aspose.Words.Node.ToTxt">
      <summary>
            Exports the content of the node into a string in plain text format.
            </summary>
      <remarks>
        <p>This method removes field codes and Microsoft Word control characters, uses CrLf 
            (or any other) combination of characters to mark ends of paragraphs in the resulting string. 
            It produces a different result from <see cref="M:Aspose.Words.Node.GetText" /> which just gets the text from 
            the node without removing field codes or special characters.</p>
        <seealso cref="P:Aspose.Words.SaveOptions.TxtExportParagraphBreak" />
        <seealso cref="P:Aspose.Words.SaveOptions.TxtExportHeadersFooters" />
      </remarks>
      <returns>The content of the node in plain text format.</returns>
    </member>
    <member name="P:Aspose.Words.Node.NodeType">
      <summary>
            Gets the type of this node.
            </summary>
    </member>
    <member name="P:Aspose.Words.Node.ParentNode">
      <summary>
            Gets the immediate parent of this node.
            </summary>
      <remarks>
        <p>If a node has just been created and not yet added to the tree, 
            or if it has been removed from the tree, the parent is null.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Node.Document">
      <summary>
            Gets the document to which this node belongs.
            </summary>
      <remarks>
        <p>The node always belongs to a document even if it has just been created
            and not yed added to the tree, or if it has been removed from the tree.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Node.PreviousSibling">
      <summary>
            Gets the node immediately preceding this node.
            </summary>
      <remarks>
        <p>If there is no preceding node, a null is returned.</p>
        <note>Calculating the value of this property iterates from the first child node of ParenNode 
            to this node.</note>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Node.NextSibling">
      <summary>
            Gets the node immediately following this node.
            </summary>
      <remarks>
            If there is no next node, a null is returned.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Node.IsComposite">
      <summary>
            Returns true if this node can contain other nodes.
            </summary>
      <value>This method returns false as Node cannot have child nodes.</value>
    </member>
    <member name="P:Aspose.Words.Node.Range">
      <summary>
            Returns a <b>Range</b> object that represents the portion of a document that is contained in this node.
            </summary>
    </member>
    <member name="T:Aspose.Words.Lists.List">
      <summary>
            Represents formatting of a list.
            </summary>
      <remarks>
        <p>A list in a Microsoft Word document is a set of list formatting properties.
            Each list can have up to 9 levels and formatting properties, such as number style, start value, 
            indent, tab position etc are defined separately for each level.</p>
        <p>A <see cref="T:Aspose.Words.Lists.List" /> object always belongs to the <see cref="T:Aspose.Words.Lists.ListCollection" /> collection.</p>
        <p>To create a new list, use the Add methods of the <see cref="T:Aspose.Words.Lists.ListCollection" /> collection.</p>
        <p>To modify formatting of a list, use <see cref="T:Aspose.Words.Lists.ListLevel" /> objects found in 
            the <see cref="P:Aspose.Words.Lists.List.ListLevels" /> collection.</p>
        <p>To apply or remove list formatting from a paragraph, use <see cref="T:Aspose.Words.ListFormat" />.</p>
        <seealso cref="T:Aspose.Words.Lists.ListCollection" />
        <seealso cref="T:Aspose.Words.Lists.ListLevel" />
        <seealso cref="T:Aspose.Words.ListFormat" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.ListId">
      <summary>
            Gets the unique identifier of the list.
            </summary>
      <remarks>
        <p>You do not normally need to use this property. But if you use it, you normally do so
            in conjunction with the <see cref="M:Aspose.Words.Lists.ListCollection.GetListByListId(System.Int32)" /> method to find a 
            list by its identifier.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.Document">
      <summary>
            Gets the owner document.
            </summary>
      <remarks>
        <p>A list always has a parent document and is valid only in the context of that document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.IsMultiLevel">
      <summary>
            Returns true when the list contains 9 levels; false when 1 level.
            </summary>
      <remarks>
        <p>The lists that you create with Aspose.Words are always multi-level lists and contain 9 levels.</p>
        <p>Microsoft Word 2003 and later always create multi-level lists with 9 levels.
            But in some documents, created with earlier versions of Microsoft Word you might encounter
            lists that have 1 level only.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.ListLevels">
      <summary>
            Gets the collection of list levels for this list.
            </summary>
      <remarks>
        <p>Use this property to access and modify formatting individual to each level of the list.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.IsListStyleDefinition">
      <summary>
            Returns true if this list is a definition of a list style.
            </summary>
      <remarks>
        <p>When this property is true, the <see cref="P:Aspose.Words.Lists.List.Style" /> property returns the list style that 
            this list defines.</p>
        <p>By modifying properties of a list that defines a list style, you modify the properties
            of the list style.</p>
        <p>A list that is a definition of a list style cannot be applied directly to paragraphs
            to make them numbered.</p>
        <seealso cref="P:Aspose.Words.Lists.List.Style" />
        <seealso cref="P:Aspose.Words.Lists.List.IsListStyleReference" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.IsListStyleReference">
      <summary>
            Returns true if this list is a reference to a list style.
            </summary>
      <remarks>
        <p>Note, modifying properties of a list that is a reference to list style has no effect.
            The list formatting specified in the list style itself always takes precedence.</p>
        <seealso cref="P:Aspose.Words.Lists.List.Style" />
        <seealso cref="P:Aspose.Words.Lists.List.IsListStyleDefinition" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.List.Style">
      <summary>
            Gets the list style that this list references or defines.
            </summary>
      <remarks>
        <p>If this list is not associated with a list style, the property will return null.</p>
        <p>A list could be a reference to a list style, in this case <see cref="P:Aspose.Words.Lists.List.IsListStyleReference" />
            will be true.</p>
        <p>A list could be a definition of a list style, in this case <see cref="P:Aspose.Words.Lists.List.IsListStyleDefinition" />
            will be true. Such a list cannot be applied to paragraphs in the document directly.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.FootnoteType">
      <summary>
            Specifies whether this is a footnote or an endnote.
            </summary>
      <remarks>
        <para>Both footnotes and endnotes are represented by objects by the <see cref="F:Aspose.Words.FootnoteType.Footnote" />
            class. Use <see cref="P:Aspose.Words.Footnote.FootnoteType" /> to distinguish between footnotes a
            nd endnotes.</para>
        <seealso cref="F:Aspose.Words.FootnoteType.Footnote" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.FootnoteType.Footnote">
      <summary>
            The object is a footnote.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteType.Endnote">
      <summary>
            The object is an endnote.
            </summary>
    </member>
    <member name="T:Aspose.Words.ReplaceEvaluatorArgs">
      <summary>
            Provides data for a custom replace operation.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.ReplaceEvaluator" />
        <seealso cref="T:Aspose.Words.Range" />
        <seealso cref="M:Aspose.Words.Range.Replace(System.String,System.String,System.Boolean,System.Boolean)" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.Match">
      <summary>
            The <see cref="T:System.Text.RegularExpressions.Match" /> resulting from a single regular 
            expression match during a <b>Replace</b>. 
            </summary>
      <remarks>
        <p>
          <b>Match.Index"</b> gets the zero-based starting 
            position of the match from the start of the find and replace range.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.MatchNode">
      <summary>
            Gets the node that contains the beginning of the match.
            </summary>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.MatchOffset">
      <summary>
            Gets the zero-based starting position of the match from the start of 
            the node that contains the beginning of the match.
            </summary>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.Replacement">
      <summary>
            Gets or sets the replacement string.
            </summary>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.GroupName">
      <summary>
            Identifies, by name, a captured group in the <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.Match" /> 
            that is to be replaced with the <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.Replacement" /> string.
            </summary>
      <remarks>
        <p>When group name is null, <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.GroupIndex" /> is used to identify the group.</p>
        <p>Default is null.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ReplaceEvaluatorArgs.GroupIndex">
      <summary>
            Identifies, by index, a captured group in the <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.Match" /> 
            that is to be replaced with the <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.Replacement" /> string.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.GroupIndex" /> has effect only when <see cref="P:Aspose.Words.ReplaceEvaluatorArgs.GroupName" /> is null.</p>
        <p>Default is zero.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Drawing.RelativeHorizontalPosition">
      <summary>
            Specifies to what the horizontal position of a shape or text frame is relative.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.RelativeHorizontalPosition" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Margin">
      <summary>
            The object is positioned relative to the left page margin.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Page">
      <summary>
            The object is positioned relative to the left edge of the page.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Column">
      <summary>
            The object is positioned relative to the left side of the column.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Character">
      <summary>
            The object is positioned relative to the left side of the paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Default">
      <summary>
            Default value is <see cref="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Column" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.FlipOrientation">
      <summary>
            Possible values for the orientation of a shape.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.FlipOrientation" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.FlipOrientation.None">
      <summary>
            Coordinates are not flipped.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.FlipOrientation.Horizontal">
      <summary>
            Flip along the y-axis, reversing the x-coordinates.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.FlipOrientation.Vertical">
      <summary>
            Flip along the x-axis, reversing the y-coordinates.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.FlipOrientation.Both">
      <summary>
            Flip along both the y- and x-axis.
            </summary>
    </member>
    <member name="T:Aspose.Words.CssStyleSheetType">
      <summary>
            Specifies how CSS (Cascading Style Sheet) styles are exported to HTML.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.SaveOptions" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.CssStyleSheetType.Inline">
      <summary>
            CSS styles are written inline (as a value of the <b>style</b> attribute on every element).
            </summary>
    </member>
    <member name="F:Aspose.Words.CssStyleSheetType.Embedded">
      <summary>
            CSS styles are written separately from the content in a style sheet embedded in the HTML file.
            </summary>
    </member>
    <member name="F:Aspose.Words.CssStyleSheetType.External">
      <summary>
            CSS styles are written separately from the content in a style sheet in an external file.
            The HTML file links the style sheet. 
            </summary>
    </member>
    <member name="T:Aspose.Words.Viewer.PageBounds">
      <summary>
            Specifies how page bounds look like.
            </summary>
    </member>
    <member name="F:Aspose.Words.Viewer.PageBounds.None">
      <summary>
            No page bounds are drawn.
            </summary>
    </member>
    <member name="F:Aspose.Words.Viewer.PageBounds.Separator">
      <summary>
            Dotted separator between pages.
            </summary>
    </member>
    <member name="F:Aspose.Words.Viewer.PageBounds.Border">
      <summary>
            Rectangular border.
            </summary>
    </member>
    <member name="F:Aspose.Words.Viewer.PageBounds.Border3D">
      <summary>
            Rectangular border with shadow.
            </summary>
    </member>
    <member name="T:Aspose.Words.TabStopCollection">
      <summary>
            A collection of <see cref="T:Aspose.Words.TabStop" /> objects that represent custom tabs for a paragraph or a style.
            </summary>
      <remarks>
        <p>In Microsoft Word documents, a tab stop can be defined in the properties of a paragraph
            style or directly in the properties of a paragraph. A style can be based on another style.
            Therefore, the complete set of tab stops for a given object is a combintation of tab stops 
            defined directly on this object and tab stops inherited from the parent styles.</p>
        <p>In Aspose.Words, when you obtain a <b>TabStops</b> collection for a paragraph or a style,
            it contains only the custom tab stops defined directly for this paragraph or style. 
            The collection does not include tab stops defined in the parent styles or default tab stops.</p>
        <seealso cref="T:Aspose.Words.ParagraphFormat" />
        <seealso cref="T:Aspose.Words.TabStop" />
        <seealso cref="P:Aspose.Words.Document.DefaultTabStop" />
      </remarks>
      <dev>
            This whole collection is stored in the paragraph attributes as a single attribute.
            </dev>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.Clear">
      <summary>
            Deletes all tab stop positions.
            </summary>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.GetPositionByIndex(System.Int32)">
      <summary>
            Gets the position (in points) of the tab stop at the specified index.
            </summary>
      <param name="index">An index into the collection of tab stops.</param>
      <returns>The position of the tab stop.</returns>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.GetIndexByPosition(System.Double)">
      <summary>
            Gets the index of a tab stop with the specified position in points.
            </summary>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.Add(Aspose.Words.TabStop)">
      <summary>
            Adds or replaces a tab stop in the collection.
            </summary>
      <remarks>
        <p>If a tab stop already exists at the specified position, it is replaced.</p>
      </remarks>
      <param name="tabStop">A tab stop object to add.</param>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.Add(System.Double,Aspose.Words.TabAlignment,Aspose.Words.TabLeader)">
      <summary>
            Adds or replaces a tab stop in the collection.
            </summary>
      <remarks>
        <p>If a tab stop already exists at the specified position, it is replaced.</p>
      </remarks>
      <param name="position">A position (in points) where to add the tab stop.</param>
      <param name="alignment">A <see cref="T:Aspose.Words.TabAlignment" /> value that
            specifies the alignment of text at the tab stop.</param>
      <param name="leader">A <see cref="T:Aspose.Words.TabLeader" /> value that 
            specifies the type of the leader line displayed under the tab character.</param>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.RemoveByPosition(System.Double)">
      <summary>
            Removes a tab stop at the specified position from the collection.
            </summary>
      <param name="position">The position (in points) of the tab stop to remove.</param>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.RemoveByIndex(System.Int32)">
      <summary>
            Removes a tab stop at the specified index from the collection.
            </summary>
      <param name="index">An index into the collection of tab stops.</param>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.After(System.Double)">
      <summary>
            Gets a first tab stop to the right of the specified position.
            </summary>
      <remarks>
        <p>Skips tab stops with <b>Alignment</b> set to <c>TabAlignment.Bar</c>.</p>
      </remarks>
      <param name="position">The reference position (in points).</param>
      <returns>A tab stop object or null if a suitable tab stop was not found.</returns>
    </member>
    <member name="M:Aspose.Words.TabStopCollection.Before(System.Double)">
      <summary>
            Gets a first tab stop to the left of the specified position.
            </summary>
      <remarks>
        <p>Skips tab stops with <b>Alignment</b> set to <c>TabAlignment.Bar</c>.</p>
      </remarks>
      <param name="position">The reference position (in points).</param>
      <returns>A tab stop object or null if a suitable tab stop was not found.</returns>
    </member>
    <member name="P:Aspose.Words.TabStopCollection.Count">
      <summary>
            Gets the number of tab stops in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.TabStopCollection.Item(System.Int32)">
      <overloads>Retrieves a tab stop from the collection.</overloads>
      <summary>
            Gets a tab stop at the given index.
            </summary>
      <param name="index">An index into the collection of tab stops.</param>
    </member>
    <member name="P:Aspose.Words.TabStopCollection.Item(System.Double)">
      <summary>
            Gets a tab stop at the specified position. 
            </summary>
      <remarks>
            Returns null if no tab stop is found at the specified position.
            </remarks>
      <param name="position">The position (in points) of the tab stop.</param>
    </member>
    <member name="T:Aspose.Words.Tables.Row">
      <summary>
            Represents a table row.
            </summary>
      <remarks>
        <p>
          <b>Row</b> can only be a child of a <b>Table</b>.</p>
        <p>
          <b>Row</b> can contain one or more <b>Cell</b> nodes.</p>
        <p>A minimal valid row needs to have at least one <b>Cell</b>.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.CompositeNode">
      <summary>
            Base class for nodes that can contain other nodes.
            </summary>
      <remarks>
        <p>A document is represented as a tree of nodes, similar to DOM or XmlDocument.</p>
        <p>For more info see the Composite design pattern.</p>
        <p>The CompositeNode class:</p>
        <list type="bullet">
          <item>Provides access to the child nodes.</item>
          <item>Implements Composite operations such as insert and remove children.</item>
          <item>Provides methods for XPath navigation.</item>
        </list>
      </remarks>
      <dev>
            Maintains a pointer to the list of children.
            
            Provides helper methods to insert or remove a whole range of nodes.
            
            Inserting and removing children are the most important features here.
            
            Public API methods for insert and remove verify the arguments well and raise the insert/delete 
            node events to the owner document.
            
            The child nodes are stored in a single linked list and the composite node knows only its last child. 
            This approach was taken from XmlElement. Inserting or removing a node just means updating the 
            NextSibling and ParentNode of the appropriate nodes.
            
            Note that navigating forward via NextSibling is fast, while navigating backward via PreviousSibling 
            is slow because it requires traversal of all children starting from the FirstChild.  
            I presume that users don't need to traverse the document backward too often. 
            Note that due to the same reason InsertAfter is normally faster than InsertBefore.
            </dev>
    </member>
    <member name="M:Aspose.Words.CompositeNode.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.GetText">
      <summary>
             Gets the text of this node and of all its children.
             </summary>
      <remarks>
        <p>The returned string includes all control and special characters as described in <see cref="T:Aspose.Words.ControlChar" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.CompositeNode.GetChildNodes(Aspose.Words.NodeType,System.Boolean)">
      <overloads>Returns a collection of child nodes that match the specified type.</overloads>
      <summary>
            Returns a live collection of child nodes that match the specified type.
            </summary>
      <remarks>
        <p>The collection of nodes returned by this method is always live.</p>
        <remarks>
          <p>A live collection is always in sync with the document. For example, if you
selected all sections in a document and enumerate through the collection
deleting the sections, the section is removed from the collection immediately
when it is removed from the document.</p>
        </remarks>
      </remarks>
      <param name="nodeType">Specifies the type of nodes to select.</param>
      <param name="isDeep">True to select from all child nodes recursively. 
            False to select only among immediate children. </param>
      <returns>A live collection of child nodes of the specified type.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.GetChildNodes(Aspose.Words.NodeType,System.Boolean,System.Boolean)">
      <summary>
            Returns a "live" or "snapshot" collection of child node that match the specified type.
            </summary>
      <remarks>
        <p>Snapshot collections require less resources than live collections because
            a snapshot collection of nodes is not updated when the document is changed.</p>
        <p>Snapshot collections are useful for tasks, that do not require immediate update of the 
            collection when the document is changed. For example, select all shapes and delete them
            is more efficient using a snapshot collection.</p>
        <remarks>
          <p>A live collection is always in sync with the document. For example, if you
selected all sections in a document and enumerate through the collection
deleting the sections, the section is removed from the collection immediately
when it is removed from the document.</p>
        </remarks>
      </remarks>
      <param name="nodeType">Specifies the type of nodes to select.</param>
      <param name="isDeep">True to select from all child nodes recursively. 
            False to select only among immediate children. </param>
      <param name="isLive">True to return a live collection; false to return a snapshot collection.</param>
      <returns>A collection of child nodes of the specified type.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.GetChild(Aspose.Words.NodeType,System.Int32,System.Boolean)">
      <summary>
            Returns an Nth child node that matches the specified type.
            </summary>
      <remarks>
        <p>If index is out of range, a null is returned.</p>
      </remarks>
      <param name="nodeType">Specifies the type of the child node.</param>
      <param name="index">Zero based index of the child node to select. 
            Negative indexes are also allowed and indicate access from the end, 
            that is -1 means the last node.</param>
      <param name="isDeep">True to select from all child nodes recursively. 
            False to select only among immediate children. </param>
      <returns>The child node that matches the criteria or null if no matching node is found.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.SelectNodes(System.String)">
      <summary>
            Selects a list of nodes matching the XPath expression.
            </summary>
      <remarks>
        <p>Only expressions with element names are supported at the moment. Expressions
            that use attribute names are not supported.</p>
      </remarks>
      <param name="xpath">The XPath expression.</param>
      <returns>A list of nodes matching the XPath query.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.SelectSingleNode(System.String)">
      <summary>
            Selects the first Node that matches the XPath expression.
            </summary>
      <remarks>
        <p>Only expressions with element names are supported at the moment. Expressions
            that use attribute names are not supported.</p>
      </remarks>
      <param name="xpath">The XPath expression.</param>
      <returns>The first Node that matches the XPath query or null if no matching node is found.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.GetEnumerator">
      <summary>
            Provides support for the for each style iteration over the child nodes of this node.
            </summary>
    </member>
    <member name="M:Aspose.Words.CompositeNode.AppendChild(Aspose.Words.Node)">
      <summary>
            Adds the specified node to the end of the list of child nodes for this node.
            </summary>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="newChild">The node to add.</param>
      <returns>The node added.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.PrependChild(Aspose.Words.Node)">
      <summary>
            Adds the specified node to the beginning of the list of child nodes for this node.
            </summary>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="newChild">The node to add.</param>
      <returns>The node added.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)">
      <summary>
            Inserts the specified node immediately after the specified reference node.
            </summary>
      <remarks>
        <p>If refChild is null, inserts newChild at the beginning of the list of child nodes.</p>
      </remarks>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="newChild">The Node to insert.</param>
      <param name="refChild">The Node that is the reference node. The newNode is placed after the refNode. </param>
      <returns>The inserted node.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)">
      <summary>
            Inserts the specified node immediately before the specified reference node.
            </summary>
      <remarks>
        <p>If refChild is null, inserts newChild at the end of the list of child nodes.</p>
        <note>InsertBefore could be slower than InsertAfter because
            it needs to iterate over all nodes from the first child to the reference node.</note>
      </remarks>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="newChild">The Node to insert.</param>
      <param name="refChild">The Node that is the reference node. The newChild is placed before this node.</param>
      <returns>The inserted node.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.RemoveChild(Aspose.Words.Node)">
      <summary>
            Removes the specified child node.
            </summary>
      <remarks>
        <p>The parent of oldChild is set to null after the node is removed.</p>
      </remarks>
      <param name="oldChild">The node to remove.</param>
      <returns>The removed node.</returns>
    </member>
    <member name="M:Aspose.Words.CompositeNode.RemoveAllChildren">
      <summary>
            Removes all the child nodes of the current node.
            </summary>
    </member>
    <member name="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node,Aspose.Words.Node)">
      <summary>
            Inserts nodes starting from the start node up to, but not including the end node 
            into this node after the reference node.
            </summary>
      <param name="start">Node to start moving from.</param>
      <param name="end">Can be null to indicate move all from start to the end.</param>
      <param name="refNode">The nodes will be inserted after this node.</param>
    </member>
    <member name="M:Aspose.Words.CompositeNode.IndexOf(Aspose.Words.Node)">
      <summary>
            Returns the index of the specified child node in the child node array. 
            </summary>
      <remarks>
            Returns -1 if the node is not found in the child nodes.
            </remarks>
    </member>
    <member name="M:Aspose.Words.CompositeNode.CreateNavigator">
    </member>
    <member name="P:Aspose.Words.CompositeNode.IsComposite">
      <summary>
            Returns true as this node can have child nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompositeNode.HasChildNodes">
      <summary>
            Returns true if this node has any child nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompositeNode.ChildNodes">
      <summary>
            Gets all immediate child nodes of this node. 
            </summary>
      <remarks>
        <p>Note, <see cref="P:Aspose.Words.CompositeNode.ChildNodes" /> is equivalent to calling <c>GetChildNodes(NodeType.Any, false)</c>
            and creates and returns a new collection every time it is accessed.</p>
        <p>If there are no child nodes, this property returns an empty collection.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.CompositeNode.FirstChild">
      <summary>
            Gets the first child of the node.
            </summary>
      <remarks>
            If there is no first child node, a null is returned.
            </remarks>
    </member>
    <member name="P:Aspose.Words.CompositeNode.LastChild">
      <summary>
            Gets the last child of the node.
            </summary>
      <remarks>
            If there is no last child node, a null is returned.
            </remarks>
    </member>
    <member name="P:Aspose.Words.CompositeNode.Count">
      <summary>
            Gets the number of immediate children of this node.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Row.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Row</b> class.
            </summary>
      <remarks>
        <p>When <b>Row</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Row</b> to the document use InsertAfter or InsertBefore 
            on the table where you want the row inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Tables.Row.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Tables.Row.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitRowStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitRowEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Row.GetText">
      <summary>
             Gets the text of all cells in this row including the end of row character.
             </summary>
      <remarks>
        <p>Returns concatenated text of all child nodes with the end of row character 
             <see cref="F:Aspose.Words.ControlChar.Cell">ControlChar.Cell</see> appended at the end.</p>
        <p>The returned string includes all control and special characters as described in <see cref="T:Aspose.Words.ControlChar" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Row.EnsureMinimum">
      <summary>
            If the <b>Row</b> has no cells, creates and appends one <b>Cell</b>.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Row.GetDirectRowAttr(System.Int32)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Row.FetchInheritedRowAttr(System.Int32)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Row.SetRowAttr(System.Int32,System.Object)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Row.ClearRowAttrs">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.NodeType">
      <summary>
            Returns <b>NodeType.Row</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.ParentTable">
      <summary>
            Returns the immediate parent table of the row.
            </summary>
      <remarks>Equivalent to <c>(Table)ParentNode</c>.</remarks>
    </member>
    <member name="P:Aspose.Words.Tables.Row.IsFirstRow">
      <summary>
            True if this is the first row in a table; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.IsLastRow">
      <summary>
            True if this is the last row in a table; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.FirstCell">
      <summary>
            Returns the first <b>Cell</b> in the row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.LastCell">
      <summary>
            Returns the last <b>Cell</b> in the row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.Cells">
      <summary>
            Provides typed access to the <b>Cell</b> child nodes of the row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Row.RowFormat">
      <summary>
            Provides access to the formatting properties of the row.
            </summary>
    </member>
    <member name="T:Aspose.Words.StyleIdentifier">
      <summary>
            Locale independent style identifier.
            </summary>
      <remarks>
        <p>The names of built-in styles in MS Word are localized for different languages.
            Using a style identifier you can find the correct style regardless of the document language.</p>
        <p>All user defined styles are assigned the StyleIdentifier.User value.</p>
      </remarks>
      <dev>DO NOT RENUMBER! These values are important for DOC import/export.</dev>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BookTitle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.CommentReference">
      <summary>
            The Annotation (Comment) Reference style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DefaultParagraphFont">
      <summary>
            The Default Paragraph Font style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Emphasis">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.EndnoteReference">
      <summary>
            The Endnote Reference style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.FootnoteReference">
      <summary>
            The Footnote Reference style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlAcronym">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlCite">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlCode">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlDefinition">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlKeyboard">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlSample">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlTypewriter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlVariable">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Hyperlink">
      <summary>
            The Hyperlink style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.IntenseEmphasis">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.IntenseReference">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LineNumber">
      <summary>
            The Line Number style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.PageNumber">
      <summary>
            The Page Number style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.PlaceholderText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Strong">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.SubtleEmphasis">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.SubtleReference">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BalloonText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyText">
      <summary>
            The Body Text style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyText2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyText3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyText1I">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyText1I2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyTextInd">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyTextInd2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BodyTextInd3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Closing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.CommentSubject">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.CommentText">
      <summary>
            The Annotation (Comment) Text style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Date">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DocumentMap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.EmailSignature">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.EndnoteText">
      <summary>
            The Endnote Text style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Footer">
      <summary>
            The Footer style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.FootnoteText">
      <summary>
            The Footnote Text style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Header">
      <summary>
            The Header style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading1">
      <summary>
            The Heading 1 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading2">
      <summary>
            The Heading 2 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading3">
      <summary>
            The Heading 3 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading4">
      <summary>
            The Heading 4 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading5">
      <summary>
            The Heading 5 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading6">
      <summary>
            The Heading 6 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading7">
      <summary>
            The Heading 7 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading8">
      <summary>
            The Heading 8 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Heading9">
      <summary>
            The Heading 9 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlAddress">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlTopOfForm">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlBottomOfForm">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.HtmlPreformatted">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.IntenseQuote">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Macro">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MessageHeader">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.NoteHeading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.PlainText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Quote">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Salutation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Signature">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Subtitle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Title">
      <summary>
            The Title style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Bibliography">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.BlockText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Caption">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.EnvelopeAddress">
      <summary>
            The Envelope Address style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.EnvelopeReturn">
      <summary>
            The Envelope Return style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Index9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.IndexHeading">
      <summary>
            The Index Heading style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.List">
      <summary>
            The List style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.List2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.List3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.List4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.List5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListBullet">
      <summary>
            The List Bullet style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListBullet2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListBullet3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListBullet4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListBullet5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListContinue">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListContinue2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListContinue3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListContinue4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListContinue5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListNumber">
      <summary>
            The List Number style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListNumber2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListNumber3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListNumber4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListNumber5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ListParagraph">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.NoSpacing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Normal">
      <summary>
            The Normal style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.NormalWeb">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.NormalIndent">
      <summary>
            The Normal Indent style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableOfAuthorities">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableOfFigures">
      <summary>
            The Table of Figures style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ToaHeading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Toc9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TocHeading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Revision">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.OutlineList1">
      <summary>
            The 1 / a / i style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.OutlineList2">
      <summary>
            The 1 / 1.1 / 1.1.1 style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.OutlineList3">
      <summary>
            The Article / Section style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.NoList">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGrid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulGridAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulList">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulListAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.ColorfulShadingAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkList">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.DarkListAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGrid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightGridAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightList">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightListAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.LightShadingAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid1Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid2Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumGrid3Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList1Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumList2Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading1Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.MediumShading2Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Table3DEffects1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Table3DEffects2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Table3DEffects3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableClassic1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableClassic2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableClassic3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableClassic4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColorful1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColorful2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColorful3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColumns1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColumns2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColumns3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColumns4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableColumns5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableContemporary">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableElegant">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableGrid8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableList8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableNormal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableProfessional">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableSimple1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableSimple2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableSimple3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableSubtle1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableSubtle2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableTheme">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableWeb1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableWeb2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.TableWeb3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.User">
      <summary>
            A user defined style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleIdentifier.Nil">
      <summary>
            Reserved for internal use.
            </summary>
    </member>
    <member name="T:Aspose.Words.SectionStart">
      <summary>
            The type of break at the beginning of the section.
            </summary>
    </member>
    <member name="F:Aspose.Words.SectionStart.Continuous">
      <summary>
            The new section starts on the same page as the previous section.
            </summary>
    </member>
    <member name="F:Aspose.Words.SectionStart.NewColumn">
      <summary>
            The section starts from a new column.
            </summary>
    </member>
    <member name="F:Aspose.Words.SectionStart.NewPage">
      <summary>
            The section starts from a new page.
            </summary>
    </member>
    <member name="F:Aspose.Words.SectionStart.EvenPage">
      <summary>
            The section starts on a new even page.
            </summary>
    </member>
    <member name="F:Aspose.Words.SectionStart.OddPage">
      <summary>
            The section starts on a new odd page.
            </summary>
    </member>
    <member name="T:Aspose.Words.PaperSize">
      <summary>
            Specifies paper size.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.A3">
      <summary>
            297 x 420 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.A4">
      <summary>
            210 x 297 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.A5">
      <summary>
            148 x 210 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.B4">
      <summary>
            250 x 353 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.B5">
      <summary>
            176 x 250 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Executive">
      <summary>
            7.25 x 10.5 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Folio">
      <summary>
            8 x 13 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Ledger">
      <summary>
            11 x 17 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Legal">
      <summary>
            8.5 x 14 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Letter">
      <summary>
            8.5 x 11 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.EnvelopeDL">
      <summary>
            110 x 220 mm.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Quarto">
      <summary>
            8 x 10 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Statement">
      <summary>
            8.5 x 5.5 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Tabloid">
      <summary>
            11 x 17 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Paper10x14">
      <summary>
            10 x 14 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Paper11x17">
      <summary>
            11 x 17 inches.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperSize.Custom">
      <summary>
            Custom paper size.
            </summary>
    </member>
    <member name="T:Aspose.Words.Markup.SmartTag">
      <summary>
            This element specifies the presence of a smart tag around one or more inline structures 
            (runs, images, fields,etc.) within a paragraph.
            </summary>
      <remarks>
        <para>Smart tags is a kind of custom XML markup. Smart tags provide a facility for embedding 
            customer-defined semantics into the document via the ability to provide a basic namespace/name 
            for a run or set of runs within a document.</para>
        <p>
          <see cref="T:Aspose.Words.Markup.SmartTag" /> can be a child of a <see cref="T:Aspose.Words.Paragraph" /> or 
            another <see cref="T:Aspose.Words.Markup.SmartTag" /> node.</p>
        <p>The complete list of child nodes that can occur inside a smart tag consists of
            <see cref="T:Aspose.Words.BookmarkStart" />, <see cref="T:Aspose.Words.BookmarkEnd" />,
            <see cref="T:Aspose.Words.Fields.FieldStart" />, <see cref="T:Aspose.Words.Fields.FieldSeparator" />, <see cref="T:Aspose.Words.Fields.FieldEnd" />, <see cref="T:Aspose.Words.Fields.FormField" />,
            <see cref="T:Aspose.Words.Comment" />, <see cref="T:Aspose.Words.Footnote" />,
            <see cref="T:Aspose.Words.Run" />, <see cref="T:Aspose.Words.SpecialChar" />,
            <see cref="T:Aspose.Words.Drawing.Shape" />, <see cref="T:Aspose.Words.Drawing.GroupShape" />,
            <see cref="T:Aspose.Words.Markup.SmartTag" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Markup.SmartTag.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Words.Markup.SmartTag" /> class.
            </summary>
      <remarks>
        <para>When you create a new node, you need to specify a document to which the node belongs. 
            A node cannot existing without a document because it depends on the document-wide structures 
            such as lists and styles. Although a node always belongs to a document, a node might or might 
            not be a part of the document tree.</para>
        <para>When a node is created, it belongs to a document, but is not yet part of the document tree
            and <see cref="P:Aspose.Words.Node.ParentNode" /> is null. To insert a node into the document, use the 
            <see cref="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)" /> or <see cref="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)" /> methods
            on the parent node.</para>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Markup.SmartTag.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Markup.SmartTag.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitSmartTagStart(Aspose.Words.Markup.SmartTag)" />, then calls <see cref="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)" /> for all 
            child nodes of the smart tag and calls <see cref="M:Aspose.Words.DocumentVisitor.VisitSmartTagEnd(Aspose.Words.Markup.SmartTag)" /> at the end.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Markup.SmartTag.NodeType">
      <summary>
            Returns <b>NodeType.SmartTag</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Markup.SmartTag.Element">
      <summary>
            Specifies the name of the smart tag within the document.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Markup.SmartTag.Uri">
      <summary>
            Specifies the namespace URI of the smart tag.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Markup.SmartTag.Properties">
      <summary>
            A collection of the smart tag properties.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Markup.CustomXmlPropertyCollection">
      <summary>
            Represents a collection of custom XML attributes or smart tag properties.
            </summary>
      <remarks>
        <para>Items are <see cref="T:Aspose.Words.Markup.CustomXmlProperty" /> objects.</para>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.GetEnumerator">
      <summary>
            Returns a dictionary enumerator object that can be used to iterate over all items in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.Add(Aspose.Words.Markup.CustomXmlProperty)">
      <summary>
            Adds a property to the collection.
            </summary>
      <param name="property">The property to add.</param>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.Contains(System.String)">
      <summary>
            Determines whether the collection contains a property with the given name.
            </summary>
      <param name="name">Case-sensitive name of the property to locate.</param>
      <returns>True if item is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.IndexOfKey(System.String)">
      <summary>
            Returns the zero-based index of the specified property in the collection.
            </summary>
      <param name="name">The case-sensitive name of the property.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.Remove(System.String)">
      <summary>
            Removes a property with the specified name from the collection.
            </summary>
      <param name="name">The case-sensitive name of the property.</param>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a property at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlPropertyCollection.Clear">
      <summary>
            Removes all elements from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlPropertyCollection.Count">
      <summary>
            Gets the number of elements contained in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlPropertyCollection.Item(System.String)">
      <overloads>Provides access to the collection items.</overloads>
      <summary>
            Gets or sets a property with the specified name.
            </summary>
      <param name="name">Case-sensitive name of the property to locate.</param>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlPropertyCollection.Item(System.Int32)">
      <summary>
            Gets a property at the specified index.
            </summary>
      <param name="index">Zero-based index of the property.</param>
    </member>
    <member name="T:Aspose.Words.Footnote">
      <summary>
            Represents a container for text of a footnote or endnote.
            </summary>
      <remarks>
        <p>The <b>Footnote</b> class is used to represent both footnotes and endnotes in a Word document.</p>
        <p>
          <b>Footnote</b> is an inline-level node and can only be a child of <b>Paragraph</b>.</p>
        <p>
          <b>Footnote</b> can contain <b>Paragraph</b> and <b>Table</b> child nodes.</p>
        <seealso cref="P:Aspose.Words.Footnote.FootnoteType" />
        <seealso cref="M:Aspose.Words.DocumentBuilder.InsertFootnote(Aspose.Words.FootnoteType,System.String)" />
        <seealso cref="T:Aspose.Words.FootnoteOptions" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.InlineStory">
      <summary>
            Base class for inline-level nodes that can contain paragraphs and tables.
            </summary>
      <remarks>
        <p>
          <b>InlineStory</b> is a container for block-level nodes <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" />.</p>
        <p>The classes that derive from <b>InlineStory</b> are inline-level nodes that can contain 
            their own text (paragraphs and tables). For example, a <b>Comment</b> node contains text of a comment 
            and a <b>Footnote</b> contains text of a footnote.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.InlineStory.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="P:Aspose.Words.InlineStory.StoryType">
      <summary>
            Returns the type of the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.ParentParagraph">
      <summary>
            Retrieves the parent <see cref="T:Aspose.Words.Paragraph" /> of this node.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.FirstParagraph">
      <summary>
            Gets the first paragraph in the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.LastParagraph">
      <summary>
            Gets the last paragraph in the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.Paragraphs">
      <summary>
            Gets a collection of paragraphs that are immediate children of the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.Tables">
      <summary>
            Gets a collection of tables that are immediate children of the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.IsInsertRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.InlineStory.IsDeleteRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="M:Aspose.Words.Footnote.#ctor(Aspose.Words.Document,Aspose.Words.FootnoteType)">
      <summary>
            Initializes an instance of the <b>Footnote</b> class.
            </summary>
      <remarks>
        <p>When <b>Footnote</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Footnote</b> to the document use InsertAfter or InsertBefore 
            on the paragraph where you want the footnote inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
      <param name="footnoteType">A <see cref="T:Aspose.Words.FootnoteType" /> value 
            that specifies whether this is a footnote or endnote.</param>
    </member>
    <member name="M:Aspose.Words.Footnote.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitFootnoteStart, then calls Accept for all child nodes of the footnote
            and calls DocumentVisitor.VisitFootnoteEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Footnote.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Footnote.GetDirectRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Footnote.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Footnote.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Footnote.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Footnote.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Footnote.NodeType">
      <summary>
            Returns <b>NodeType.Footnote</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Footnote.StoryType">
      <summary>
            Returns <b>StoryType.Footnotes</b> or <b>StoryType.Endnotes</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Footnote.FootnoteType">
      <summary>
            Returns a value that specifies whether this is a footnote or endnote.
            </summary>
    </member>
    <member name="P:Aspose.Words.Footnote.Font">
      <summary>
            Provides access to the font formatting of this object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Footnote.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="T:Aspose.Words.ReplaceEvaluator">
      <summary>A user defined method that is called for each match found during a replace operation.</summary>
      <returns>An enumerated value that specifies the action to be taken for the current match.</returns>
    </member>
    <member name="T:Aspose.Words.Fields.Field">
      <preliminary>[The properties and methods of this class are subject to change.]</preliminary>
      <summary>
            Represents a Microsoft Word field.
            </summary>
      <remarks>
        <p>At the moment objects of this class are only returned by 
            <see cref="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.Field">MergeFieldEventArgsBase.Field</see>
            to allow using <see cref="M:Aspose.Words.DocumentBuilder.MoveToField(Aspose.Words.Fields.Field,System.Boolean)">DocumentBuilder.MoveToField</see> 
            to move to a merge field quickly in a custom mail merge event handler.</p>
        <p>There will be more methods and properties added to the <b>Field</b> class later.</p>
      </remarks>
      <dev>
            Simple structure to group three model nodes that represent one field.
            
            I actually want to rework the way fields are parsed. At the moment
            each field has its own regex to parse, this is wrong. Main parsing
            should be done by this class, see FieldCodeParsing.doc in the docs.
            It should parse into Expression and Switches and the derived field
            classes can do further detailed analysis.
            </dev>
    </member>
    <member name="M:Aspose.Words.Fields.Field.GetFieldCode">
      <summary>
            Returns text between field start and field separator (or field end if there is no separator).
            </summary>
    </member>
    <member name="M:Aspose.Words.Fields.Field.Remove">
      <summary>
            Removes the field from the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.Field.Start">
      <summary>
            Gets the node that represents the start of the field.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.Field.Separator">
      <summary>
            Gets the node that represents the field separator. Can be null.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.Field.End">
      <summary>
            Gets the node that represents the field end.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.Field.Type">
      <summary>
            Gets the Microsoft Word field type.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.Field.Result">
      <summary>
            Gets or sets text that is between field separator and field end.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.TextPathAlignment">
      <summary>
            WordArt alignment.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.TextPath.TextPathAlignment" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.Stretch">
      <summary>
            Stretch each line of text to fit width.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.Center">
      <summary>
            Center text on width.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.Left">
      <summary>
            Left justify.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.Right">
      <summary>
            Right justify.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.LetterJustify">
      <summary>
            Spread letters out to fit width.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextPathAlignment.WordJustify">
      <summary>
            Spread words out to fit width.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.GroupShape">
      <summary>
            Represents a group of shapes in a document.
            </summary>
      <remarks>
        <p>A <see cref="T:Aspose.Words.Drawing.GroupShape" /> is a composite node and can have <see cref="T:Aspose.Words.Drawing.Shape" /> and
            <see cref="T:Aspose.Words.Drawing.GroupShape" /> nodes as children.</p>
        <p>Each <see cref="T:Aspose.Words.Drawing.GroupShape" /> defines a new coordinate system for its child shapes.
            The coordinate system is defined using the <see cref="P:Aspose.Words.Drawing.ShapeBase.CoordSize" /> and 
            <see cref="P:Aspose.Words.Drawing.ShapeBase.CoordOrigin" /> properties.</p>
        <seealso cref="T:Aspose.Words.Drawing.ShapeBase" />
        <seealso cref="T:Aspose.Words.Drawing.Shape" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.Drawing.ShapeBase">
      <summary>
            Base class for objects in the drawing layer, such as an AutoShape, freeform, OLE object, ActiveX control, or picture.
            </summary>
      <remarks>
        <p>This is an abstract class. The two derived classes that you can instantiate 
            are <see cref="T:Aspose.Words.Drawing.Shape" /> and <see cref="T:Aspose.Words.Drawing.GroupShape" />.</p>
        <p>A shape is a node in the document tree.</p>
        <p>If the shape is a child of a <see cref="T:Aspose.Words.Paragraph" /> object, then the shape is said to be "top-level". 
            Top-level shapes are measured and positioned in points.</p>
        <p>A shape can also occur as a child of a <see cref="T:Aspose.Words.Drawing.GroupShape" /> object when several shapes
            are grouped. Child shapes of a group shape are positioned in the coordinate space and units
            defined by the <see cref="P:Aspose.Words.Drawing.ShapeBase.CoordSize" /> and <see cref="P:Aspose.Words.Drawing.ShapeBase.CoordOrigin" /> properties of the parent 
            group shape.</p>
        <p>A shape can be positioned inline with text or floating. The positioning method is controlled
            using the <see cref="P:Aspose.Words.Drawing.ShapeBase.WrapType" /> property.</p>
        <p>When a shape is floating, it is positioned relative to something (e.g the current paragraph,
            the margin or the page). The relative positioning of the shape is specified using the 
            <see cref="P:Aspose.Words.Drawing.ShapeBase.RelativeHorizontalPosition" /> and <see cref="P:Aspose.Words.Drawing.ShapeBase.RelativeVerticalPosition" /> properties.</p>
        <p>A floating shape be positioned explicitly using the <see cref="P:Aspose.Words.Drawing.ShapeBase.Left" /> and <see cref="P:Aspose.Words.Drawing.ShapeBase.Top" />
            properties or aligned relative to some other object using the <see cref="P:Aspose.Words.Drawing.ShapeBase.HorizontalAlignment" />
            and <see cref="P:Aspose.Words.Drawing.ShapeBase.VerticalAlignment" /> properties.</p>
        <seealso cref="T:Aspose.Words.Drawing.Shape" />
        <seealso cref="T:Aspose.Words.Drawing.GroupShape" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.SetId(System.Int32)">
      <summary>
            INeedImportShapeId.
            Sets the shape identifier. To stay internal. Users are not to modify shape identifiers directly.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.GetDirectRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.GetDirectShapeAttr(System.Int32)">
      <summary>
            IShapeAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.FetchInheritedShapeAttr(System.Int32)">
      <summary>
            IShapeAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.FetchShapeAttr(System.Int32)">
      <summary>
            IShapeAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.SetShapeAttr(System.Int32,System.Object)">
      <summary>
            IShapeAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ShapeBase.LocalToParent(System.Drawing.PointF)">
      <summary>
            Converts a value from the local coordinate space into the coordinate space of the parent shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.ShapeType">
      <summary>
            Gets the shape type.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsGroup">
      <summary>
            Returns true if this is a group shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsImage">
      <summary>
            Returns true if this shape is an image shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsHorizontalRule">
      <summary>
            Returns true if this shape is a horizontal rule.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsWordArt">
      <summary>
            Returns true if this shape is a WordArt object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.CanHaveImage">
      <summary>
            Returns true if the shape type allows the shape to have an image. 
            Image shapes and OLE objects can have an image.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Left">
      <summary>
            Gets or sets the position of the left edge of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points and relative to the shape anchor.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
        <p>The default value is 0.</p>
        <p>Has effect only for floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Top">
      <summary>
            Gets or sets the position of the top edge of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points and relative to the shape anchor.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
        <p>The default value is 0.</p>
        <p>Has effect only for floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Right">
      <summary>
            Gets the position of the right edge of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points and relative to the shape anchor.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Bottom">
      <summary>
            Gets the position of the bottom edge of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points and relative to the shape anchor.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Width">
      <summary>
            Gets or sets the width of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Height">
      <summary>
            Gets or sets the height of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Bounds">
      <summary>
            Gets or sets the location and size of the containing block of the shape.
            </summary>
      <remarks>
        <p>For a top-level shape, the value is in points and relative to the shape anchor.</p>
        <p>For shapes in a group, the value is in the coordinate space and units of the parent group.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.BoundsInPoints">
      <summary>
            Gets the location and size of the containing block of the shape in points, relative to the anchor of the topmost shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.SizeInPoints">
      <summary>
            Gets the size of the shape in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.FlipOrientation">
      <summary>
            Switches the orientation of a shape. 
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.FlipOrientation.None" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.RelativeHorizontalPosition">
      <summary>
            Specifies relative to what the shape is positioned horizontally. 
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.RelativeHorizontalPosition.Column" />.</p>
        <p>Has effect only for top level floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.RelativeVerticalPosition">
      <summary>
            Specifies relative to what the shape is positioned horizontally.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.RelativeVerticalPosition.Paragraph" />.</p>
        <p>Has effect only for top level floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.HorizontalAlignment">
      <summary>
            Specifies how the shape is positioned horizontally.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.HorizontalAlignment.None" />.</p>
        <p>Has effect only for top level floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.VerticalAlignment">
      <summary>
            Specifies how the shape is positioned vertically.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.VerticalAlignment.None" />.</p>
        <p>Has effect only for top level floating shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.WrapType">
      <summary>
            Defines whether the shape is inline or floating. For floating shapes defines the wrapping mode for text around the shape.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.WrapType.None" />.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.WrapSide">
      <summary>
            Specifies how the text is wrapped around the shape.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.WrapSide.Both" />.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.AnchorLocked">
      <summary>
            Specifies whether the shape's anchor is locked.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
        <p>Has effect only for top level shapes.</p>
        <p>This property affects behavior of the shape's anchor in Microsoft Word.
            When the anchor is not locked, moving the shape in Microsoft Word can move
            the shape's anchor too.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.AllowOverlap">
      <summary>
            Gets or sets a value that specifies whether this shape can overlap other shapes. 
            </summary>
      <remarks>
        <para>This property affects behaviour of the shape in Microsoft Word.
            Aspose.Words ignores the value of this property.</para>
        <para>This property is applicable only to top level shapes.</para>
        <p>The default value is <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.BehindText">
      <summary>
            Specifies whether the shape is below or above text.
            </summary>
      <remarks>
        <p>Has effect only for top level shapes.</p>
        <p>The default value is <b>false</b>.</p>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.ZOrder" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.DistanceTop">
      <summary>
            Returns or sets the distance (in points) between the document text and the top edge of the shape.
            </summary>
      <remarks>
        <p>The default value is 0.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.DistanceBottom">
      <summary>
            Returns or sets the distance (in points) between the document text and the bottom edge of the shape.
            </summary>
      <remarks>
        <p>The default value is 0.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.DistanceLeft">
      <summary>
            Returns or sets the distance (in points) between the document text and the left edge of the shape.
            </summary>
      <remarks>
        <p>The default value is 1/8 inch.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.DistanceRight">
      <summary>
            Returns or sets the distance (in points) between the document text and the right edge of the shape.
            </summary>
      <remarks>
        <p>The default value is 1/8 inch.</p>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsInline">
      <summary>
            A quick way to determine if this shape is positioned inline with text.
            </summary>
      <remarks>
        <p>Has effect only for top level shapes.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.ZOrder">
      <summary>
            Determines the display order of overlapping shapes.
            </summary>
      <remarks>
        <p>Has effect only for top level shapes.</p>
        <p>The default value is 0.</p>
        <p>The number represents the stacking precedence. A shape with a higher number will be displayed 
            as if it were overlapping (in "front" of) a shape with a lower number. </p>
        <p>The order of overlapping shapes is independent for shapes in the header and in the main
            text of the document.</p>
        <p>The display order of child shapes in a group shape is determined by their order
            inside the group shape.</p>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.BehindText" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Rotation">
      <summary>
            Defines the angle (in degrees) that a shape is rotated.
            </summary>
      <remarks>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.CoordOrigin">
      <summary>
            The coordinates at the top-left corner of the containing block of this shape.
            </summary>
      <remarks>
        <p>The default value is (0,0).</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.CoordSize">
      <summary>
            The width and height of the coordinate space inside the containing block of this shape. 
            </summary>
      <remarks>
        <p>The default value is (1000, 1000).</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.ScreenTip">
      <summary>
            Defines the text displayed when the mouse pointer moves over the shape. 
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.HRef">
      <summary>
            Gets or sets the full hyperlink address for a shape.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
        <p>Below are examples of valid values for this property:</p>
        <p>Full URI: <c>http://www.aspose.com/</c>.</p>
        <p>Full file name: <c>C:\\My Documents\\SalesReport.doc</c>.</p>
        <para>Relative URI: <c>../../../resource.txt</c></para>
        <p>Relative file name: <c>..\\My Documents\\SalesReport.doc</c>.</p>
        <p>Bookmark within another document: <c>http://www.aspose.com/Products/Default.aspx#Suites</c></p>
        <p>Bookmark within this document: <c>#BookmakName</c>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Target">
      <summary>
            Gets or sets the target frame for the shape hyperlink.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.AlternativeText">
      <summary>
            Defines alternative text to be displayed instead of a graphic. 
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsTopLevel">
      <summary>
            Returns true if this shape is an immediate child of a paragraph or has no parent node.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.ParentParagraph">
      <summary>
            Returns the immediate parent paragraph.
            </summary>
      <remarks>For child shapes of a group shape always returns null.</remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsInsertRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.IsDeleteRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ShapeBase.Name">
      <summary>
            Gets or sets the optional shape name.
            </summary>
      <remarks>
        <para>Default is empty string.</para>
        <para>Cannot be null, but can be an empty string.</para>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.GroupShape.#ctor(Aspose.Words.Document)">
      <summary>
            Creates a new group shape.
            </summary>
      <param name="doc">The owner document.</param>
      <remarks>
        <p>By default, the shape is floating and has default location and size.</p>
        <p>You should specify desired shape properties after you created a shape.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.GroupShape.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitGroupShapeStart(Aspose.Words.Drawing.GroupShape)" />, then calls <see cref="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)" /> for all 
            child shapes of this group shape and calls <see cref="M:Aspose.Words.DocumentVisitor.VisitGroupShapeEnd(Aspose.Words.Drawing.GroupShape)" /> at the end.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.GroupShape.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.GroupShape" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.Viewer.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Viewer</b> namespace provides classes to render and print 
            Word documents without utilizing Microsoft Word.</p>
      </summary>
      <preliminary>[This is a Beta version of Aspose.Words.Viewer,
            the classes and methods are subject to change. No technical support is provided.]</preliminary>
    </member>
    <member name="T:Aspose.Words.Viewer.PageEventArgs">
      <preliminary />
      <summary>
            Contains pagination info such as page settings and page number.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.PageEventArgs.#ctor(Aspose.Words.PageSetup,System.Int32,System.Drawing.Graphics)">
      <preliminary />
      <summary>
            Constructs an instance of Aspose.Words.Visualizer.
            </summary>
      <param name="pageSetup">Page settings.</param>
      <param name="pageNumber">Page number.</param>
      <param name="graphics">
      </param>
    </member>
    <member name="P:Aspose.Words.Viewer.PageEventArgs.PageSetup">
      <preliminary />
      <summary>
            Gets current page settings.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageEventArgs.PageNumber">
      <preliminary />
      <summary>
            Gets current page number.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageEventArgs.Graphics">
      <preliminary />
      <summary>
            Gets or sets graphics surface for the current page;
            </summary>
    </member>
    <member name="T:Aspose.Words.Viewer.PageEventHandler">
      <preliminary />
      <summary>
            Represents an event handler for all Page events.
            </summary>
    </member>
    <member name="T:Aspose.Words.Viewer.DocumentRenderer">
      <summary>
            Renders or prints a Microsoft Word document.
            </summary>
      <remarks>
        <p>DocumentRenderer is the main class to render or print a document. It accepts a <b>Document</b> object
            to render. Use the <b>GetPage</b> and <b>GetPages</b> methods to get the rendered pages as bitmaps. Use
            the <b>Print</b> method to print current document.</p>
      </remarks>
      <preliminary />
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.#ctor">
      <summary>
            Constructs a new instance of the <b>DocumentRenderer</b>.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.#ctor(System.String)">
      <preliminary />
      <summary>
            Opens a document from a file.
            </summary>
      <param name="fileName">Name of the document file.</param>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.#ctor(System.IO.Stream)">
      <preliminary />
      <summary>
            Opens a document from a stream.
            </summary>
      <param name="stream">A stream object containing document data.</param>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.#ctor(Aspose.Words.Document)">
      <preliminary />
      <summary>
            Initializes a new instance of the visualizer with existing Aspose.Words.Document object.
            </summary>
      <param name="document">An Aspose.Words.Document object.</param>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.Print">
      <summary>
            Performs document printing.
            </summary>
      <remarks>
            Call this method to start printing of the document. Use <b>CancelPrinting</b> to cancell the printing process.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.CancelPrinting">
      <summary>
            Cancels document printing.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.GetPage(System.Int32)">
      <summary>
            Gets a Bitmap object that contains page with specified number.
            </summary>
      <param name="pageNumber">The number of the page.</param>
      <returns>The drawn page.</returns>
      <remarks>
            Use this method to obtain a bitmap with the specified rendered page.
            pageNumber is 1-based.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.GetPages">
      <summary>
            Gets an array of all the pages of the document.
            </summary>
      <returns>The drawn pages.</returns>
      <remarks>
            Use this method to get an array of bitmaps with rendered pages.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Viewer.DocumentRenderer.GetPages(System.Int32,System.Int32)">
      <summary>
            Gets Bitmap objects that contain pages from start to end.
            </summary>
      <param name="start">The first page number.</param>
      <param name="end">The last page number.</param>
      <returns>The array of drawn pages.</returns>
      <remarks>
            start and end are 1-based.
            </remarks>
    </member>
    <member name="E:Aspose.Words.Viewer.DocumentRenderer.StartDocument">
      <summary>
            Occurs when document visualization is started.
            </summary>
    </member>
    <member name="E:Aspose.Words.Viewer.DocumentRenderer.EndDocument">
      <summary>
            Occurs when document visualization is finished.
            </summary>
    </member>
    <member name="E:Aspose.Words.Viewer.DocumentRenderer.StartPage">
      <summary>
            Occurs when page visualization is started.
            </summary>
    </member>
    <member name="E:Aspose.Words.Viewer.DocumentRenderer.EndPage">
      <summary>
            Occurs when page visualization is finished.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.DocumentRenderer.Document">
      <summary>
            Gets or sets document to render or print.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.DocumentRenderer.PageBounds">
      <summary>
            Gets or sets page design.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.DocumentRenderer.BackgroundColor">
      <summary>
            Gets or sets background color of the pages.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.DocumentRenderer.PrinterSettings">
      <summary>
            Gets or sets printer settings.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.DocumentRenderer.PrintDocument">
      <summary>
            Gets or sets print document.
            </summary>
    </member>
    <member name="T:Aspose.Words.NodeChangedEventHandler">
      <summary>
            Represents the method that handles <see cref="E:Aspose.Words.Document.NodeInserted" />, <see cref="E:Aspose.Words.Document.NodeInserting" />,
            <see cref="E:Aspose.Words.Document.NodeRemoved" /> and <see cref="E:Aspose.Words.Document.NodeRemoving" /> events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
      <remarks>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="E:Aspose.Words.Document.NodeInserted" />
        <seealso cref="E:Aspose.Words.Document.NodeInserting" />
        <seealso cref="E:Aspose.Words.Document.NodeRemoved" />
        <seealso cref="E:Aspose.Words.Document.NodeRemoving" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.Tables.Cell">
      <summary>
            Represents a table cell.
            </summary>
      <remarks>
        <p>
          <b>Cell</b> can only be a child of a <b>Row</b>.</p>
        <p>
          <b>Cell</b> can contain block-level nodes <b>Paragraph</b> and <b>Table</b>.</p>
        <p>A minimal valid cell needs to have at least one <b>Paragraph</b>.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Cell</b> class.
            </summary>
      <remarks>
        <p>When <b>Cell</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Cell</b> to the document use InsertAfter or InsertBefore 
            on the row where you want the cell inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitCellStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitCellEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.EnsureMinimum">
      <summary>
            If the <b>Cell</b> has no paragraphs, creates and appends one <b>Paragraph</b>.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.GetDirectCellAttr(System.Int32)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.FetchInheritedCellAttr(System.Int32)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.SetCellAttr(System.Int32,System.Object)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.Cell.ClearCellAttrs">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.NodeType">
      <summary>
            Returns <b>NodeType.Cell</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.ParentRow">
      <summary>
            Returns the immediate parent row of the cell.
            </summary>
      <remarks>Equivalent to <c>(Row)ParentNode</c>.</remarks>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.FirstParagraph">
      <summary>
            Gets the first paragraph among the immediate children.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.LastParagraph">
      <summary>
            Gets the last paragraph among the immediate children.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.IsFirstCell">
      <summary>
            True if this is the first cell inside a row; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.IsLastCell">
      <summary>
            True if this is the last cell inside a row; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.CellFormat">
      <summary>
            Provides access to the formatting properties of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.Paragraphs">
      <summary>
            Gets a collection of paragraphs that are immediate children of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Cell.Tables">
      <summary>
            Gets a collection of tables that are immediate children of the cell.
            </summary>
    </member>
    <member name="T:Aspose.Words.Reporting.MappedDataFieldCollection">
      <summary>
            Allows to automatically map between names of fields in your data source
            and names of mail merge fields in the document.
            </summary>
      <remarks>
        <p>This is implemented as a collection of string keys into string values.
            The keys are the names of mail merge fields in the document and the values
            are the names of fields in your data source.</p>
        <seealso cref="T:Aspose.Words.Reporting.MailMerge" />
        <seealso cref="P:Aspose.Words.Reporting.MailMerge.MappedDataFields" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.GetEnumerator">
      <summary>
            Returns a dictionary enumerator object that can be used to iterate over all items in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.Add(System.String,System.String)">
      <summary>
            Adds a new field mapping.
            </summary>
      <param name="documentFieldName">Case-sensitive name of the mail merge field in the document.</param>
      <param name="dataSourceFieldName">Case-sensitive name of the field in the data source.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.ContainsKey(System.String)">
      <summary>
            Determines whether a mapping from the specified field in the document exists in the collection.
            </summary>
      <param name="documentFieldName">Case-sensitive name of the mail merge field in the document.</param>
      <returns>True if item is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.ContainsValue(System.String)">
      <summary>
            Determines whether a mapping from the specified field in the data source exists in the collection.
            </summary>
      <param name="dataSourceFieldName">Case-sensitive name of the field in the data source.</param>
      <returns>True if item is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.Remove(System.String)">
      <summary>
            Removes a field mapping.
            </summary>
      <param name="documentFieldName">Case-sensitive name of the mail merge field in the document.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MappedDataFieldCollection.Clear">
      <summary>
            Removes all elements from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MappedDataFieldCollection.Count">
      <summary>
            Gets the number of elements contained in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MappedDataFieldCollection.Item(System.String)">
      <summary>
            Gets or sets the name of the field in the data source associated with the specified mail merge field.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.FormField">
      <summary>
             Represents a single form field. 
             </summary>
      <remarks>
        <p>Microsoft Word provides the following form fields: checkbox, text input and dropdown (combobox).</p>
        <p>
          <b>FormField</b> is an inline-node and can only be a child of <b>Paragraph</b>.</p>
        <p>
          <b>FormField</b> is represented in a document by a special character and 
             positioned as a character within a line of text.</p>
        <p>A complete form field in a Word document is a complex structure represented by several
             nodes: field start, field code such as FORMTEXT, form field data, field separator,
             field result, field end and a bookmark. To programmatically create form fields in a Word document use 
             <see cref="M:Aspose.Words.DocumentBuilder.InsertCheckBox(System.String,System.Boolean,System.Int32)">DocumentBuilder.InsertCheckBox</see>,
             <see cref="M:Aspose.Words.DocumentBuilder.InsertTextInput(System.String,Aspose.Words.Fields.TextFormFieldType,System.String,System.String,System.Int32)">DocumentBuilder.InsertTextInput</see> and
             <see cref="M:Aspose.Words.DocumentBuilder.InsertComboBox(System.String,System.String[],System.Int32)">DocumentBuilder.InsertComboBox</see> which
             make sure all of the form field nodes are created in a correct order and in a suitable state.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.SpecialChar">
      <summary>
            Base class for special characters in the document.
            </summary>
      <remarks>
        <p>A Microsoft Word document can include a number of special characters
            that represent fields, form fields, shapes, OLE objects, footnotes etc. For the list
            of special characters see <see cref="T:Aspose.Words.ControlChar" />.</p>
        <p>
          <b>SpecialChar</b> is an inline-node and can only be a child of <b>Paragraph</b>.</p>
        <p>
          <b>SpecialChar</b> char is used as a base class for more specific classes
            that represent special characters that Aspose.Words provides programmatic access for.
            The <b>SpecialChar</b> class is also used itself to represent special character for which
            Aspose.Words does not provide detailed programmatic access.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Inline">
      <summary>
            Base class for inline-level nodes that consist of a single run of text with font formatting.
            </summary>
      <remarks>
        <p>A class derived from <b>Inline</b> can be a child of <b>Paragraph</b>.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Inline.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Inline.GetDirectRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Inline.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Inline.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Inline.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Inline.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Inline.ParentParagraph">
      <summary>
            Retrieves the parent <see cref="T:Aspose.Words.Paragraph" /> of this node.
            </summary>
    </member>
    <member name="P:Aspose.Words.Inline.Font">
      <summary>
            Provides access to the font formatting of this object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Inline.IsInsertRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Inline.IsDeleteRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Inline.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.SpecialChar.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls DocumentVisitor.VisitSpecialChar.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>False if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="M:Aspose.Words.SpecialChar.GetText">
      <summary>
            Gets the special character that this node represents.
            </summary>
      <returns>The string that contains the character that this node represents.</returns>
    </member>
    <member name="P:Aspose.Words.SpecialChar.NodeType">
      <summary>
            Returns <b>NodeType.SpecialChar</b>.
            </summary>
    </member>
    <member name="M:Aspose.Words.Fields.FormField.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Fields.FormField.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls DocumentVisitor.VisitFormField.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>False if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="M:Aspose.Words.Fields.FormField.SetTextInputValue(System.Object)">
      <summary>
            Sets the new value in a text form field with text formatting.
            </summary>
      <remarks>
        <p>Applies the text formatting specified in <see cref="P:Aspose.Words.Fields.FormField.TextInputFormat" />
            and stores the value in <see cref="P:Aspose.Words.Fields.FormField.Result" />.</p>
      </remarks>
      <param name="newValue">Can be a string, number or a DateTime object.</param>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.NodeType">
      <summary>
            Returns <b>NodeType.FormField</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.Name">
      <summary>
            Gets or sets the form field name.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.Type">
      <summary>
            Returns the form field type.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.Result">
      <summary>
            Gets or sets a string that represents the result of this form field.
            </summary>
      <remarks>
        <p>For a text form field the result is the text that is in the field.</p>
        <p>For a checkbox form field the result can be "1" or "0" to indicate checked or unchecked.</p>
        <p>For a dropdown form field the result is the string selected in the dropdown.</p>
        <p>Note that setting <b>Result</b> for a text form field does not apply formatting
            specified in <see cref="P:Aspose.Words.Fields.FormField.TextInputFormat" />. If you want to set a value and apply the 
            formatting, use the <see cref="M:Aspose.Words.Fields.FormField.SetTextInputValue(System.Object)" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.StatusText">
      <summary>
            Returns or sets the text that's displayed in the status bar when a form field has the focus.
            </summary>
      <remarks>
        <p>If the OwnStatus property is set to true, the StatusText property specifies the status bar text. 
            If the OwnStatus property is set to false, the StatusText property specifies the name of an AutoText 
            entry that contains status bar text for the form field.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.OwnStatus">
      <summary>
            Specifies the source of the text that's displayed in the status bar when a form field has the focus.
            </summary>
      <remarks>
        <p>If true, the text specified by the StatusText property is displayed. 
            If false, the text of the AutoText entry specified by the StatusText property is displayed.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.HelpText">
      <summary>
            Returns or sets the text that's displayed in a message box when the form field has the focus and the user presses F1.
            </summary>
      <remarks>
        <p>If the OwnHelp property is set to True, HelpText specifies the text string value. 
            If OwnHelp is set to False, HelpText specifies the name of an AutoText entry that contains help 
            text for the form field.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.OwnHelp">
      <summary>
            Specifies the source of the text that's displayed in a message box when a form field has the focus and the user presses F1.
            </summary>
      <remarks>
        <p>If True, the text specified by the HelpText property is displayed. 
            If False, the text in the AutoText entry specified by the HelpText property is displayed.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.CalculateOnExit">
      <summary>
            True if references to the specified form field are automatically updated whenever the field is exited.
            </summary>
      <remarks>
        <p>Setting <b>CalculateOnExit</b> only affects the behavior of the form field when
            the document is opened in Microsoft Word. Aspose.Words never updates references
            to the form field.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.EntryMacro">
      <summary>
            Returns or sets an entry macro name for the form field.
            </summary>
      <remarks>
            The entry macro runs when the form field gets the focus in Microsoft Word.</remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.ExitMacro">
      <summary>
            Returns or sets an exit macro name for the form field. 
            </summary>
      <remarks>
        <p>The exit macro runs when the form field loses the focus in Microsoft Word.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.Enabled">
      <summary>
            True if a form field is enabled. 
            </summary>
      <remarks>
        <p>If a form field is enabled, its contents can be changed as the form is filled in.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.TextInputFormat">
      <summary>
            Returns or sets the text formatting for a text form field.
            </summary>
      <remarks>
        <p>If the text form field contains regular text, then valid format strings are
            "", "UPPERCASE", "LOWERCASE", "FIRST CAPITAL" and "TITLE CASE". The strings
            are case-insensitive.</p>
        <p>If the text form field contains a number or a date/time value, then valid 
            format strings are number or date and time format strings.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.TextInputType">
      <summary>
            Returns or sets the type of a text form field.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.MaxLength">
      <summary>
            Maximum length for the text field. Zero when the length is not limited.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.DropDownItems">
      <summary>
            Provides access to the items of a dropdown form field.
            </summary>
      <remarks>
        <p>Microsoft Word allows maximum 25 items in a dropdown form field.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.DropDownSelectedIndex">
      <summary>
            Gets or sets the index specifying the currently selected item in a dropdown form field.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.Checked">
      <summary>
            Gets or sets the checked status of the check box form field.
            </summary>
      <remarks>
        <p>Applicable for a check box form field only.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.IsCheckBoxExactSize">
      <summary>
            Gets or sets the boolean value that indicates whether the size of the textbox is automatic or specified explicitly.
            </summary>
      <remarks>
        <p>Applicable for a check box form field only.</p>
        <seealso cref="P:Aspose.Words.Fields.FormField.CheckBoxSize" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FormField.CheckBoxSize">
      <summary>
            Gets or sets the size of the checkbox in points. Has effect only when <see cref="P:Aspose.Words.Fields.FormField.IsCheckBoxExactSize" /> is true.
            </summary>
      <remarks>
        <p>Applicable for a check box form field only.</p>
        <seealso cref="P:Aspose.Words.Fields.FormField.IsCheckBoxExactSize" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.NumberStyle">
      <summary>
            Specifies the number style for a list, footnotes and endnotes, page numbers.
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Arabic">
      <summary>
            Arabic numbering (1, 2, 3, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.UppercaseRoman">
      <summary>
            Upper case Roman (I, II, III, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.LowercaseRoman">
      <summary>
            Lower case Roman (i, ii, iii, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.UppercaseLetter">
      <summary>
            Upper case Letter (A, B, C, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.LowercaseLetter">
      <summary>
            Lower case letter (a, b, c, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Ordinal">
      <summary>
            Ordinal (1., 2., 3., ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Number">
      <summary>
            Numbered (One, Two, Three, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.OrdinalText">
      <summary>
            Ordinal (text) (First, Second, Third, ...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Hex">
      <summary>
            Hexadecimal: 8, 9, A, B, C, D, E, F, 10, 11, 12 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ChicagoManual">
      <summary>
            Chicago Manual of Style: *, †, †
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Kanji">
      <summary>
            Ideograph-digital
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.KanjiDigit">
      <summary>
            Japanese counting
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.AiueoHalfWidth">
      <summary>
            Aiueo
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.IrohaHalfWidth">
      <summary>
            Iroha
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ArabicFullWidth">
      <summary>
            Full-width Arabic: 1, 2, 3, 4
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ArabicHalfWidth">
      <summary>
            Half-width Arabic: 1, 2, 3, 4
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.KanjiTraditional">
      <summary>
            Japanese legal
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.KanjiTraditional2">
      <summary>
            Japanese digital ten thousand
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.NumberInCircle">
      <summary>
            Enclosed circles
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.DecimalFullWidth">
      <summary>
            Decimal full width: 1, 2, 3, 4
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Aiueo">
      <summary>
            Aiueo full width
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Iroha">
      <summary>
            Iroha full width
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.LeadingZero">
      <summary>
            Leading Zero (01, 02,..., 09, 10, 11,..., 99, 100, 101,...) 
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Bullet">
      <summary>
            Bullet (check the character code in the text)
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Ganada">
      <summary>
            Korean Ganada
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Chosung">
      <summary>
            Korea Chosung
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.GB1">
      <summary>
            Enclosed full stop
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.GB2">
      <summary>
            Enclosed parenthesis
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.GB3">
      <summary>
            Enclosed circle Chinese
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.GB4">
      <summary>
            Ideograph enclosed circle
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Zodiac1">
      <summary>
            Ideograph traditional
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Zodiac2">
      <summary>
            Ideograph Zodiac
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Zodiac3">
      <summary>
            Ideograph Zodiac traditional
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.TradChinNum1">
      <summary>
            Taiwanese counting
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.TradChinNum2">
      <summary>
            Ideograph legal traditional
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.TradChinNum3">
      <summary>
            Taiwanese counting thousand
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.TradChinNum4">
      <summary>
            Taiwanese digital
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.SimpChinNum1">
      <summary>
            Chinese counting
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.SimpChinNum2">
      <summary>
            Chinese legal simplified
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.SimpChinNum3">
      <summary>
            Chinese counting thousand
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.SimpChinNum4">
      <summary>
            Chinese (not implemented)
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HanjaRead">
      <summary>
            Korean digital
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HanjaReadDigit">
      <summary>
            Korean counting
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Hangul">
      <summary>
            Korea legal
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Hanja">
      <summary>
            Korea digital2
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Hebrew1">
      <summary>
            Hebrew-1
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Arabic1">
      <summary>
            Arabic alpha
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Hebrew2">
      <summary>
            Hebrew-2
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.Arabic2">
      <summary>
            Arabic abjad
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HindiLetter1">
      <summary>
            Hindi vowels
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HindiLetter2">
      <summary>
            Hindi consonants
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HindiArabic">
      <summary>
            Hindi numbers
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.HindiCardinalText">
      <summary>
            Hindi descriptive (cardinals)
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ThaiLetter">
      <summary>
            Thai letters
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ThaiArabic">
      <summary>
            Thai numbers
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.ThaiCardinalText">
      <summary>
            Thai descriptive (cardinals)
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.VietCardinalText">
      <summary>
            Vietnamese descriptive (cardinals)
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.NumberInDash">
      <summary>
            Page number format: - 1 -, - 2 -, - 3 -, - 4 -
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.LowercaseRussian">
      <summary>
            Lowercase Russian alphabet
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.UppercaseRussian">
      <summary>
            Uppercase Russian alphabet
            </summary>
    </member>
    <member name="F:Aspose.Words.NumberStyle.None">
      <summary>
            No bullet or number.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.FieldEnd">
      <summary>
            Represents an end of a Word field in a document.
            </summary>
      <remarks>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldEnd" /> is an inline-level node and represented 
            by the <see cref="F:Aspose.Words.ControlChar.FieldEndChar" /> control character in the document.</p>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldEnd" /> can only be a child of <see cref="T:Aspose.Words.Paragraph" />.</p>
        <p>A complete field in a Microsoft Word document is a complex structure consisting of
a field start character, field code, field separator character, field result
and field end character. Some fields only have field start, field code and field end.</p>
        <p>To easily insert a new field into a document, use the <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" />
method.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Fields.FieldChar">
      <summary>
            Base class for nodes that represent field characters in a document.
            </summary>
      <remarks>
        <p>A complete field in a Microsoft Word document is a complex structure consisting of
a field start character, field code, field separator character, field result
and field end character. Some fields only have field start, field code and field end.</p>
        <p>To easily insert a new field into a document, use the <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" />
method.</p>
        <seealso cref="T:Aspose.Words.Fields.FieldStart" />
        <seealso cref="T:Aspose.Words.Fields.FieldSeparator" />
        <seealso cref="T:Aspose.Words.Fields.FieldEnd" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Fields.FieldChar.FieldType">
      <summary>
            Returns the type of the field.
            </summary>
    </member>
    <member name="M:Aspose.Words.Fields.FieldEnd.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitFieldEnd(Aspose.Words.Fields.FieldEnd)" />.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>
        <b>False</b> if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="P:Aspose.Words.Fields.FieldEnd.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.FieldEnd" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FieldEnd.HasSeparator">
      <summary>
            Returns <b>true</b> if this field has a separator.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.VerticalAlignment">
      <summary>
            Specifies vertical alignment of a floating shape, text frame or a floating table.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.VerticalAlignment" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.None">
      <summary>
            The object is explicitly positioned, usually using its <b>Top</b> property.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Top">
      <summary>
            The object is aligned to the top of the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Center">
      <summary>
            The object is centered relative to the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Bottom">
      <summary>
            The object is aligned to the right of the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Inside">
      <summary>
            Not documented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Outside">
      <summary>
            Not documented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.VerticalAlignment.Inline">
      <summary>
            Not documented. Seems to be a possible value for floating paragraphs and tables.
            </summary>
    </member>
    <member name="T:Aspose.Words.BorderType">
      <summary>
            Specifies sides of a border.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Bottom">
      <summary>
            Specifies the bottom border of a paragraph or a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Left">
      <summary>
            Specifies the left border of a paragraph or a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Right">
      <summary>
            Specifies the right border of a paragraph or a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Top">
      <summary>
            Specifies the top border of a paragraph or a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Horizontal">
      <summary>
            Specifies the horizontal border between cells in a table or between conforming paragraphs.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.Vertical">
      <summary>
            Specifies the vertical border between cells in a table.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.DiagonalDown">
      <summary>
            Specifies the diagonal border in a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.BorderType.DiagonalUp">
      <summary>
            Specifies the diagonal border in a table cell.
            </summary>
    </member>
    <member name="T:Aspose.Words.TabLeader">
      <summary>
            Specifies the type of the leader line displayed under the tab character.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.None">
      <summary>
            No leader line is displayed.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.Dots">
      <summary>
            The leader line is made up from dots.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.Dashes">
      <summary>
            The leader line is made up from dashes.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.Line">
      <summary>
            The leader line is a single line.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.Heavy">
      <summary>
            The leader line is a single thick line.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabLeader.MiddleDot">
      <summary>
            The leader line is made up from middle-dots.
            </summary>
    </member>
    <member name="T:Aspose.Words.LineSpacingRule">
      <summary>
            Specifies line spacing values for a paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineSpacingRule.AtLeast">
      <summary>
            The line spacing can be greater than or equal to, but never less than, 
            the value specified in the <see cref="P:Aspose.Words.ParagraphFormat.LineSpacing" /> property.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineSpacingRule.Exactly">
      <summary>
            The line spacing never changes from the value specified in the 
            <see cref="P:Aspose.Words.ParagraphFormat.LineSpacing" /> property, 
            even if a larger font is used within the paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineSpacingRule.Multiple">
      <summary>
            The line spacing is specified in the <see cref="P:Aspose.Words.ParagraphFormat.LineSpacing" />
            property as the number of lines. One line equals 12 points.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.Table">
      <summary>
            Represents a table in a Word document.
            </summary>
      <remarks>
        <p>
          <b>Table</b> is a block-level node and can be a child of classes derived from <b>Story</b> or 
            <b>InlineStory</b>.</p>
        <p>
          <b>Table</b> can contain one or more <b>Row</b> nodes.</p>
        <p>A minimal valid table needs to have at least one <b>Row</b>.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Table.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Table</b> class.
            </summary>
      <remarks>
        <p>When <b>Table</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Table</b> to the document use InsertAfter or InsertBefore 
            on the story where you want the table inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Tables.Table.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Tables.Table.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitTableStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitTableEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Tables.Table.EnsureMinimum">
      <summary>
            If the table has now rows, creates and appends one <b>Row</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Table.NodeType">
      <summary>
            Returns <b>NodeType.Table</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Table.FirstRow">
      <summary>
            Returns the first <b>Row</b> node in the table.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Table.LastRow">
      <summary>
            Returns the last <b>Row</b> node in the table.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.Table.Rows">
      <summary>
            Provides typed access to the rows of the table.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.CellCollection">
      <summary>
            Provides typed access to a collection of <see cref="T:Aspose.Words.Tables.Cell" /> nodes.
            </summary>
    </member>
    <member name="T:Aspose.Words.NodeCollection">
      <summary>
            Represents a collection of nodes of a specific type.
            </summary>
      <remarks>
        <p>
          <b>NodeCollection</b> does not own the nodes it contains, rather, is just a selection of nodes 
            of the specified type, but the nodes are stored in the tree under their respective parent nodes.</p>
        <p>
          <b>NodeCollection</b> supports indexed access, iteration and provides add and remove methods.</p>
        <p>The <b>NodeCollection</b> collection can be "live" or "snapshot". When the collection is live, 
            changes to the children of the node object that it was created from are immediately reflected in 
            the nodes returned by the <b>NodeCollection</b> properties and methods.</p>
        <p>
          <b>NodeCollection</b> is returned by <see cref="M:Aspose.Words.CompositeNode.GetChildNodes(Aspose.Words.NodeType,System.Boolean,System.Boolean)" /> 
            and also serves as a base class for typed node collections such as <see cref="T:Aspose.Words.SectionCollection" />, 
            <see cref="T:Aspose.Words.ParagraphCollection" /> etc.</p>
        <p>
          <b>NodeCollection</b> can be "flat" and contain only immediate children of the node it was created
            from, or it can be "deep" and contain all descendant children.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.INodeCollection">
      <summary>
            Base interface for node collections. Reserved for internal use.
            </summary>
      <dev>
            Why it has to be public? So the obfuscator does not obfuscate the methods?
            </dev>
    </member>
    <member name="M:Aspose.Words.INodeCollection.GetEnumerator">
      <summary>
            Gets the enumerator for the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.INodeCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.INodeCollection.Item(System.Int32)">
      <summary>
            Gets the item at the specified index.
            </summary>
    </member>
    <member name="M:Aspose.Words.NodeCollection.Add(Aspose.Words.Node)">
      <summary>
            Adds a node to the end of the collection.
            </summary>
      <remarks>
        <p>The node is inserted as a child into the node object from which the collection was created.</p>
      </remarks>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="node">The node to be added to the end of the collection.</param>
      <exception cref="T:System.NotSupportedException">The <b>NodeCollection</b> is a "deep" collection.</exception>
    </member>
    <member name="M:Aspose.Words.NodeCollection.Insert(System.Int32,Aspose.Words.Node)">
      <summary>
            Inserts a node into the collection at the specified index.
            </summary>
      <remarks>
        <p>The node is inserted as a child into the node object from which the collection was created.</p>
        <p>If the index is equal to or greater than Count, the node is added at the end of the collection.</p>
        <p>If the index is negative and its absolute value is greater than Count, the node is added at the end of the collection.</p>
      </remarks>
      <remarks>
        <p>If the newChild is already in the tree, it is first removed.</p>
        <p>If the node being inserted was created from another document, you should use 
<see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" /> to import the node to the current document. 
The imported node can then be inserted into the current document.</p>
      </remarks>
      <param name="index">The zero-based index of the node.
            Negative indexes are allowed and indicate access from the back of the list. 
            For example -1 means the last node, -2 means the second before last and so on.</param>
      <param name="node">The node to insert.</param>
      <exception cref="T:System.NotSupportedException">The <b>NodeCollection</b> is a "deep" collection.</exception>
    </member>
    <member name="M:Aspose.Words.NodeCollection.Remove(Aspose.Words.Node)">
      <summary>
            Removes the node from the collection and from the document.
            </summary>
      <param name="node">The node to remove.</param>
    </member>
    <member name="M:Aspose.Words.NodeCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the node at the specified index from the collection and from the document.
            </summary>
      <param name="index">The zero-based index of the node.
            Negative indexes are allowed and indicate access from the back of the list. 
            For example -1 means the last node, -2 means the second before last and so on.</param>
    </member>
    <member name="M:Aspose.Words.NodeCollection.Clear">
      <summary>
            Removes all nodes from this collection and from the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.NodeCollection.Contains(Aspose.Words.Node)">
      <summary>
            Determines whether a node is in the collection.
            </summary>
      <remarks>
        <p>This method performs a linear search; therefore, the average execution time is proportional to Count.</p>
      </remarks>
      <param name="node">The node to locate.</param>
      <returns>True if item is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Words.NodeCollection.IndexOf(Aspose.Words.Node)">
      <summary>
            Returns the zero-based index of the specified node.
            </summary>
      <param name="node">The node to locate.</param>
      <returns>The zero-based index of the node within the collection, if found; otherwise, -1.</returns>
      <remarks>
        <p>This method performs a linear search; therefore, the average execution time is proportional to Count.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.NodeCollection.ToArray">
      <summary>
            Copies all nodes from the collection to a new array of nodes.
            </summary>
      <remarks>
        <p>You should not be adding/removing nodes while iterating over a collection 
of nodes because it invalidates the iterator and requires refreshes for live collections.</p>
        <p>To be able to add/remove nodes during iteration, use this method to copy 
nodes into a fixed-size array and then iterate over the array.</p>
      </remarks>
      <returns>An array of nodes.</returns>
    </member>
    <member name="M:Aspose.Words.NodeCollection.GetEnumerator">
      <summary>
            Provides a simple "foreach" style iteration over the collection of nodes.
            </summary>
      <returns>An IEnumerator.</returns>
    </member>
    <member name="P:Aspose.Words.NodeCollection.Item(System.Int32)">
      <summary>
            Retrieves a node at the given index.
            </summary>
      <param name="index">An index into the collection of nodes.</param>
      <remarks>
        <p>The index is zero-based.</p>
        <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
        <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
        <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.NodeCollection.Count">
      <summary>
            Gets the number of nodes in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>Cell</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="T:Aspose.Words.TextColumnCollection">
      <summary>
            A collection of <see cref="T:Aspose.Words.TextColumn" /> objects that represent all the columns of text in a section of a document.
            </summary>
      <remarks>
        <p>Use <see cref="M:Aspose.Words.TextColumnCollection.SetCount(System.Int32)" /> to set the number of text columns.</p>
        <p>To make all columns equal width and spaced evenly, set <see cref="P:Aspose.Words.TextColumnCollection.EvenlySpaced" /> to <b>true</b>
            and specify the amount of space between the columns in <see cref="P:Aspose.Words.TextColumnCollection.Spacing" />. MS Word will
            automatically calculate column widths.</p>
        <p>If you have <b>EvenlySpaced</b> set to <b>false</b>, you need to specify width and spacing for each 
            column individually. Use the indexer to access individual <see cref="T:Aspose.Words.TextColumn" /> objects.</p>
        <p>When using custom column widths, make sure the sum of all column widths and spacings between them 
            equals page width minus left and right page margins.</p>
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="T:Aspose.Words.Section" />
      </remarks>
      <dev>
            This is a pure presentation class. Does not store any model data, just provides friendly
            access to section attributes that are related to managing text columns.
            </dev>
    </member>
    <member name="M:Aspose.Words.TextColumnCollection.SetCount(System.Int32)">
      <summary>
            Arranges text into the specified number of text columns.
            </summary>
      <remarks>
        <p>When <see cref="P:Aspose.Words.TextColumnCollection.EvenlySpaced" /> is <b>false</b> and you increase the number of columns, 
            new <see cref="T:Aspose.Words.TextColumn" /> objects are created with zero width and spacing. 
            You need to set width and spacing for the new columns.</p>
      </remarks>
      <param name="newCount">The number of columns the text is to be arranged into.</param>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.EvenlySpaced">
      <summary>
        <b>True</b> if text columns are of equal width and evenly spaced.
            </summary>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.Spacing">
      <summary>
            When columns are evenly spaced, gets or sets the amount of space between each column in points.
            </summary>
      <remarks>
            Has effect only when <see cref="P:Aspose.Words.TextColumnCollection.EvenlySpaced" /> is set to <b>true</b>.
            </remarks>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.Width">
      <summary>
            When columns are evenly spaced, gets the width of the columns.
            </summary>
      <remarks>
        <p>Has effect only when <see cref="P:Aspose.Words.TextColumnCollection.EvenlySpaced" /> is set to <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.LineBetween">
      <summary>
            When <b>true</b>, adds a vertical line between columns.
            </summary>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.Count">
      <summary>
            Gets the number of columns in the section of a document.
            </summary>
    </member>
    <member name="P:Aspose.Words.TextColumnCollection.Item(System.Int32)">
      <summary>
            Returns a text column at the specified index.
            </summary>
    </member>
    <member name="T:Aspose.Words.Section">
      <summary>
            Represents a single section in a document.
            </summary>
      <remarks>
        <p>
          <b>Section</b> can have one <see cref="P:Aspose.Words.Section.Body" /> and maximum one <see cref="T:Aspose.Words.HeaderFooter" />
            of each <see cref="T:Aspose.Words.HeaderFooterType" />. <b>Body</b> and <b>HeaderFooter</b> nodes 
            can be in any order inside <b>Section</b>.</p>
        <p>A minimal valid section needs to have <b>Body</b> with one <b>Paragraph</b>.</p>
        <p>Each section has its own set of properties that specify page size, orientation, margins etc.</p>
        <p>You can create a copy of a section using <see cref="M:Aspose.Words.Section.Clone(System.Boolean)" />. The copy can be inserted into
            the same or different document.</p>
        <p>To add, insert or remove a whole section including section break and
            section properties use methods of the <b>Sections</b> object.</p>
        <p>To copy and insert just content of the section excluding the section break
            and section properties use <b>AppendContent</b> and <b>PrependContent</b> methods.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Section.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the Section class.
            </summary>
      <remarks>
        <p>When the section is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To include Section into a document use Document.InsertAfter, Document.InsertBefore
            or Sections.Add and Section.Insert methods.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Section.Clone">
      <summary>
            Creates a duplicate of this section.
            </summary>
      <dev>Kept to remain compatiable with the old API.</dev>
    </member>
    <member name="M:Aspose.Words.Section.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Section.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitSectionStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitSectionEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Section.PrependContent(Aspose.Words.Section)">
      <summary>
            Inserts a copy of content of the source section at the beginning of this section. 
            </summary>
      <remarks>
        <p>Only content of <see cref="P:Aspose.Words.Section.Body" /> of the source section is copied, page setup, 
            headers and footers are not copied.</p>
        <p>The nodes are automatically imported if the source section belongs to a different document.</p>
        <p>No new section is created in the destination document.</p>
      </remarks>
      <param name="sourceSection">The section to copy content from.</param>
    </member>
    <member name="M:Aspose.Words.Section.AppendContent(Aspose.Words.Section)">
      <summary>
            Inserts a copy of content of the source section at the end of this section. 
            </summary>
      <remarks>
        <p>Only content of <see cref="P:Aspose.Words.Section.Body" /> of the source section is copied, page setup, 
            headers and footers are not copied.</p>
        <p>The nodes are automatically imported if the source section belongs to a different document.</p>
        <p>No new section is created in the destination document.</p>
      </remarks>
      <param name="sourceSection">The section to copy content from.</param>
    </member>
    <member name="M:Aspose.Words.Section.ClearContent">
      <summary>
            Clears the section.
            </summary>
      <remarks>
        <p>The text of <see cref="P:Aspose.Words.Section.Body" /> is cleared, only one empty paragraph is left that represents the section break.</p>
        <p>The text of all headers and footers is cleared, but <see cref="T:Aspose.Words.HeaderFooter" /> objects themselves are not removed.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Section.ClearHeadersFooters">
      <summary>
            Clears the headers and footers of this section.
            </summary>
      <remarks>
        <p>The text of all headers and footers is cleared, but <see cref="T:Aspose.Words.HeaderFooter" /> objects themselves are not removed.</p>
        <p>This makes headers and footers of this section linked to headers and footers of the previous section.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Section.DeleteHeaderFooterShapes">
      <summary>
            Deletes all free-floating shapes from the headers and footers of this section.
            </summary>
    </member>
    <member name="M:Aspose.Words.Section.EnsureMinimum">
      <summary>
            Ensures that the section has Body with one Paragraph.
            </summary>
    </member>
    <member name="M:Aspose.Words.Section.GetDirectSectionAttr(System.Int32)">
      <summary>
            ISectionAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Section.FetchInheritedSectionAttr(System.Int32)">
      <summary>
            ISectionAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Section.SetSectionAttr(System.Int32,System.Object)">
      <summary>
            ISectionAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Section.ClearSectionAttrs">
      <summary>
            ISectionAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Section.NodeType">
      <summary>
            Returns <b>NodeType.Section</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Section.Body">
      <summary>
            Returns the <b>Body</b> child node of the section.
            </summary>
      <remarks>
        <p>
          <b>Body</b> contains main text of the section.</p>
        <p>Returns null if the section does not have a <b>Body</b> node among its children.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Section.HeadersFooters">
      <summary>
            Provides access to the headers and footers nodes of the section.
            </summary>
    </member>
    <member name="P:Aspose.Words.Section.PageSetup">
      <summary>
            Returns an object that represents page setup and section properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.Section.ProtectedForForms">
      <summary>
            True if the section is protected for forms. When a section is protected for forms, 
            users can select and modify text only in form fields in Microsoft Word. 
            </summary>
    </member>
    <member name="T:Aspose.Words.PageBorderDistanceFrom">
      <summary>
            Specifies the positioning of the page border relative to the page margin.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="P:Aspose.Words.PageSetup.BorderDistanceFrom" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.PageBorderDistanceFrom.Text">
      <summary>
            Border position is measured from the page margin.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageBorderDistanceFrom.PageEdge">
      <summary>
            Border position is measured from the page edge.
            </summary>
    </member>
    <member name="T:Aspose.Words.Properties.PropertyType">
      <summary>
            Specifies data type of a document property.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Properties.DocumentProperty" />
        <seealso cref="P:Aspose.Words.Properties.DocumentProperty.Type" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.Boolean">
      <summary>
            The property is a boolean value.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.DateTime">
      <summary>
            The property is a date time value.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.Double">
      <summary>
            The property is a floating number.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.Number">
      <summary>
            The property is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.String">
      <summary>
            The property is a string value.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.StringArray">
      <summary>
            The property is an array of strings.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.ObjectArray">
      <summary>
            The property is an array of objects.
            </summary>
    </member>
    <member name="F:Aspose.Words.Properties.PropertyType.Other">
      <summary>
            The property is some other type.
            </summary>
    </member>
    <member name="T:Aspose.Words.Reporting.MergeImageFieldEventHandler">
      <summary>
            Represents the method that will handle the MergeImageField event.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Reporting.MergeImageFieldEventArgs" />
        <seealso cref="T:Aspose.Words.Reporting.MailMerge" />
        <seealso cref="E:Aspose.Words.Reporting.MailMerge.MergeImageField" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.Reporting.MergeFieldEventHandler">
      <summary>
            Represents the method that will handle the MergeField event.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Reporting.MailMerge" />
        <seealso cref="E:Aspose.Words.Reporting.MailMerge.MergeField" />
        <seealso cref="T:Aspose.Words.Reporting.MergeFieldEventArgs" />
      </remarks>
    </member>
    <member name="T:Aspose.Words.Reporting.IMailMergeDataSource">
      <summary>
            Implement this interface to allow mail merge from a custom data source, such as list of objects.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Reporting.MailMerge" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Reporting.IMailMergeDataSource.MoveNext">
      <summary>
            Advances to the next record in the data source.
            </summary>
      <returns>True if moved to next record successfully. False if reached end of the data source.</returns>
    </member>
    <member name="M:Aspose.Words.Reporting.IMailMergeDataSource.GetValue(System.String,System.Object@)">
      <summary>
            Returns a value for the specified field name or false if the field is not found.
            </summary>
      <param name="fieldName">The name of the data field.</param>
      <param name="fieldValue">Returns the field value.</param>
      <returns>
        <b>True</b> if value was found.</returns>
    </member>
    <member name="P:Aspose.Words.Reporting.IMailMergeDataSource.TableName">
      <summary>
            Returns the name of the data source.
            </summary>
      <remarks>
        <p>If you are implementing <see cref="T:Aspose.Words.Reporting.IMailMergeDataSource" />, return the name of the data 
            source from this property.</p>
        <p>Aspose.Words uses this name to match against the mail merge region name specified 
            in the template document. The comparison between the data source name and
            the mail merge region name is not case sensitive.</p>
      </remarks>
      <returns>The name of the data source. Empty string if the data source has no name.</returns>
    </member>
    <member name="T:Aspose.Words.Fields.TextFormFieldType">
      <summary>
            Specifies the type of a text form field.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.TextFormFieldType.RegularText">
      <summary>
            Text form field can contain any text.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.TextFormFieldType.NumberText">
      <summary>
            Text form field can contain only numbers.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.TextFormFieldType.DateText">
      <summary>
            Text for field can contain only a valid date value.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.FieldType">
      <summary>
            Enumeration that identifies all different types of Word fields.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNone">
      <summary>
            Field type is not specified or unknown.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAddressBlock">
      <summary>
            Inserts an address block.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAdvance">
      <summary>
            Offset subsequent text within a line to the left, right, up or down.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAsk">
      <summary>
            Prompt the user for text to assign to a bookmark.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAuthor">
      <summary>
            The name of the document's author from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAutoNum">
      <summary>
            Insert an automatic number.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAutoNumLegal">
      <summary>
            Insert an automatic number in legal format.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAutoNumOutline">
      <summary>
            Insert an automatic number in outline format.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAutoText">
      <summary>
            Insert an AutoText entry.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldAutoTextList">
      <summary>
            Insert text based on style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldBarCode">
      <summary>
            Insert a delivery point barcode.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldBidiOutline">
      <summary>
            Undocumented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldComments">
      <summary>
            The comments from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldCompare">
      <summary>
            Compares two values.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldCreateDate">
      <summary>
            The date the document was created.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDatabase">
      <summary>
            Insert data from an external database.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDate">
      <summary>
            Today's date.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDDE">
      <summary>
            Undocumented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDDEAuto">
      <summary>
            Undocumented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDocProperty">
      <summary>
            Insert the value of the property.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldDocVariable">
      <summary>
            Insert the value of the document variable.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldEditTime">
      <summary>
            The total document editing time.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldEmbed">
      <summary>
            OLE2 embedded object.
            Might occur only in files. In the document object, represented by a single shape node.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldEquation">
      <summary>
            Create a scientific equation.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFileName">
      <summary>
            The document's name and location.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFileSize">
      <summary>
            The size on disk of the active document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFillIn">
      <summary>
            Prompt the user for text to insert in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFormCheckBox">
      <summary>
            Check box control.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFormDropDown">
      <summary>
            Drop down control.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFormTextInput">
      <summary>
            Text control.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldFormula">
      <summary>
            Calculates the result of an expression.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldGreetingLine">
      <summary>
            Undocumented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldGoToButton">
      <summary>
            Move the insertion point to a new location.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldHyperlink">
      <summary>
            Open and jump to the specified file.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldIf">
      <summary>
            Evaluate arguments conditionally.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldIncludePicture">
      <summary>
            "INCLUDEPICTURE", Insert a picture from a file.
            Might occur only in files. In the document object, represented by a single shape node.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldIncludeText">
      <summary>
            Insert text from a file.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldIndex">
      <summary>
            Create an index.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldIndexEntry">
      <summary>
            Mark an index entry.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldInfo">
      <summary>
            Data from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldKeyword">
      <summary>
            The keywords from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldLastSavedBy">
      <summary>
            Name of user who last saved the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldLink">
      <summary>
        <p>Linked OLE2 object.</p>
        <p>The LINK field in the file can be with an image or without.
            Aspose.Words represents a LINK field with an image and without differently in the model.
            A LINK field with an image will be represented by a <see cref="T:Aspose.Words.Drawing.Shape" /> 
            object and no field. A LINK field without an image will be represeted as a normal field.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldListNum">
      <summary>
            Insert an element in a list.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldMacroButton">
      <summary>
            Run a macro.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldMergeField">
      <summary>
            Insert a mail merge field.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldMergeRec">
      <summary>
            The number of the current merge record.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldMergeSeq">
      <summary>
            Merge record sequence number.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNext">
      <summary>
            Go to the next record in a mail merge.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNextIf">
      <summary>
            Conditionally go to the next record in a mail merge.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNoteRef">
      <summary>
            Insert the number of a footnote or endnote.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNumChars">
      <summary>
            The number of characters in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNumPages">
      <summary>
            The number of pages in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldNumWords">
      <summary>
            The number of words in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldOCX">
      <summary>
        <p>Represents an ActiveX control such as a command button etc.</p>
        <p>Normally, Aspose.Words will represent an ActiveX control as a
            <see cref="T:Aspose.Words.Drawing.Shape" /> object, but for some documents, where a control does 
            not have data and/or seems to be invalid, it will be represented as a field.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldPage">
      <summary>
            Insert the number of the current page.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldPageRef">
      <summary>
            Insert the number of the page containing the specified bookmark.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldPrint">
      <summary>
            Download commands to a printer.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldPrintDate">
      <summary>
            The date the document was last printed.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldPrivate">
      <summary>
            Stores data for documents converted from other file formats.
            Microsoft Word inserts a PRIVATE field when converting file formats; 
            the field contains data needed for converting a document back to its original file format.
            A PRIVATE field is formatted as hidden text and doesn't affect the document layout. 
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldQuote">
      <summary>
            Insert literal text.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldRef">
      <summary>
            Insert the text marked by a bookmark.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldRefDoc">
      <summary>
            Create an index, table of contents, table of figures, and/or table of authorities by using multiple documents.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldRevisionNum">
      <summary>
            Insert the number of times the document has been saved.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSaveDate">
      <summary>
            The date the document was last saved.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSection">
      <summary>
            Insert the number of the current section.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSectionPages">
      <summary>
            Insert the total number of pages in the section.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSequence">
      <summary>
            Insert an automatic sequence number.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSet">
      <summary>
            Assign new text to a bookmark.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldShape">
      <summary>
            Represents an inline shape in the document.
            Might occur only in files. In the document object, represented by a single shape node.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSkipIf">
      <summary>
            Conditionally skip a record in a mail merge.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldStyleRef">
      <summary>
            Insert the text from a like-style paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSubject">
      <summary>
            The document's subject from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldSymbol">
      <summary>
            Insert a special character.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTemplate">
      <summary>
            The name of the template attached to the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTime">
      <summary>
            The current time.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTitle">
      <summary>
            The document's title from Summary Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTOA">
      <summary>
            Create a table of authorities.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTOAEntry">
      <summary>
            Make a table of authorities entry.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTOC">
      <summary>
            Create a table of contents.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldTOCEntry">
      <summary>
            Make a table of contents entry.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldUserAddress">
      <summary>
            Address from Tools Options User Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldUserInitials">
      <summary>
            Initials form Tools Options User Info.
            </summary>
    </member>
    <member name="F:Aspose.Words.Fields.FieldType.FieldUserName">
      <summary>
            Name from Tools Options User Info.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.FieldStart">
      <summary>
            Represents a start of a Word field in a document.
            </summary>
      <remarks>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldStart" /> is an inline-level node and represented by the 
            <see cref="F:Aspose.Words.ControlChar.FieldStartChar" /> control character in the document.</p>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldStart" /> can only be a child of <see cref="T:Aspose.Words.Paragraph" />.</p>
        <p>A complete field in a Microsoft Word document is a complex structure consisting of
a field start character, field code, field separator character, field result
and field end character. Some fields only have field start, field code and field end.</p>
        <p>To easily insert a new field into a document, use the <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" />
method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Fields.FieldStart.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitFieldStart(Aspose.Words.Fields.FieldStart)" />.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>
        <b>False</b> if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="P:Aspose.Words.Fields.FieldStart.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.FieldStart" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Drawing</b> namespace contains classes that allow to
            create and modify drawing objects in Microsoft Word documents.</p>
        <p>Aspose.Words supports all grawing objects in Microsoft Word documents, including
            OfficeArt shapes, textboxes, pictures, diagrams, OLE objects and ActiveX controls.</p>
        <p>The main classes in this namespace are:</p>
        <list type="bullet">
          <item>
            <see cref="T:Aspose.Words.Drawing.Shape" /> represents an object in the drawing layer, 
            such as an AutoShape, textbox, freeform, OLE object, ActiveX control, or picture.</item>
          <item>
            <see cref="T:Aspose.Words.Drawing.GroupShape" /> represents a group of shapes 
            in a document.</item>
          <item>
            <see cref="T:Aspose.Words.Drawing.ShapeBase" /> is the base class for the
            shape and group shape classes, provides all common shape properties such as position, 
            size and text wrapping. A shape is a node in the document tree.</item>
        </list>
        <p>Although not every type of drawing object can be programmatically created and not every shape
            property can be accessed, all drawing objects are fully preserved in Microsoft Word documents
            during document open-save operations.</p>
        <p>Names of classes, methods and properties in this namespace correspond to VML DOM where possible.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ImageData">
      <summary>
            Defines an image for a shape.
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.ImageData" /> property to access and modify the image inside a shape. 
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.ImageData" /> class directly.</p>
        <p>An image can be stored inside a shape, linked to external file or both (linked and stored in the document).</p>
        <p>Regardless of whether the image is stored inside the shape or linked, you can always access the actual
            image using the <see cref="M:Aspose.Words.Drawing.ImageData.ToImage" />, <see cref="M:Aspose.Words.Drawing.ImageData.ToStream" /> and <see cref="M:Aspose.Words.Drawing.ImageData.Save(System.String)" /> methods. 
            If the image is stored inside the shape, you can also directly access it using the
            <see cref="P:Aspose.Words.Drawing.ImageData.ImageBytes" /> property.</p>
        <p>To store an image inside a shape use the <see cref="M:Aspose.Words.Drawing.ImageData.SetImage(System.String)" /> method. To link an image
            to a shape, set the <see cref="P:Aspose.Words.Drawing.ImageData.SourceFullName" /> property.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.SetImage(System.Drawing.Image)">
      <summary>
            Sets the image that the shape displays.
            </summary>
      <param name="image">The image object.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.SetImage(System.String)">
      <summary>
            Sets the image that the shape displays.
            </summary>
      <param name="fileName">The image file. Can be a file name or a URL.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.SetImage(System.IO.Stream)">
      <summary>
            Sets the image that the shape displays.
            </summary>
      <param name="stream">The stream that contains the image.
            </param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.SetImage(System.Byte[])">
      <summary>
            Sets the image that the shape displays.
            </summary>
      <param name="imageBytes">Bytes of the image.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.ToImage">
      <summary>
            Gets the image stored in the shape as a .NET Image object.
            </summary>
      <remarks>
        <p>A new <see cref="T:System.Drawing.Image" /> object is created every time this method is called.</p>
        <p>It is the responsibility of the caller to dispose the image object.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.ToStream">
      <summary>
            Creates and returns a stream that contains the image bytes.
            </summary>
      <remarks>
        <p>If the image bytes are stored in the shape, creates and returns a 
            <see cref="T:System.IO.MemoryStream" /> object.</p>
        <p>If the image is linked and stored in a file, opens the file and returns a 
            <see cref="T:System.IO.FileStream" /> object.</p>
        <p>If the image is linked and stored in an external URL, downloads the file and returns a 
            <see cref="T:System.IO.MemoryStream" /> object.</p>
        <p>Is it the responsibility of the caller to dispose the stream object.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.ToByteArray">
      <summary>
            Returns image bytes for any image regardless whether the image is stored or linked.
            </summary>
      <remarks>
        <para>If the image is linked, downloads the image every time it is called.</para>
        <seealso cref="P:Aspose.Words.Drawing.ImageData.ImageBytes" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.Save(System.IO.Stream)">
      <overloads>Saves the image of the shape.</overloads>
      <summary>
            Saves the image into the specified stream.
            </summary>
      <param name="stream">The stream where to save the image to.</param>
      <remarks>
        <p>Is it the responsibility of the caller to dispose the stream object.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.Save(System.String)">
      <summary>
            Saves the image into a file.
            </summary>
      <param name="fileName">The file name where to save the image.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageData.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.ImageBytes">
      <summary>
            Gets the raw bytes of the image stored in the shape. 
            </summary>
      <remarks>
        <p>Returns <c>null</c> if the image is not stored in the document.</p>
        <seealso cref="M:Aspose.Words.Drawing.ImageData.SetImage(System.String)" />
        <seealso cref="M:Aspose.Words.Drawing.ImageData.ToByteArray" />
        <seealso cref="M:Aspose.Words.Drawing.ImageData.ToImage" />
        <seealso cref="M:Aspose.Words.Drawing.ImageData.ToStream" />
        <seealso cref="M:Aspose.Words.Drawing.ImageData.Save(System.String)" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.HasImage">
      <summary>
            Returns true if the shape has image bytes or links an image.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.ImageSize">
      <summary>
            Gets the information about image size and resolution.
            </summary>
      <remarks>
        <p>If the image is linked only and not stored in the document, returns zero size.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.ImageType">
      <summary>
            Gets the type of the image.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.SourceFullName">
      <summary>
            Gets or sets the path and name of the source file for the linked image.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
        <p>If <see cref="P:Aspose.Words.Drawing.ImageData.SourceFullName" /> is not an empty string, the image is linked.</p>
        <p>If <see cref="P:Aspose.Words.Drawing.ImageData.SourceFullName" /> is not an empty string, but <see cref="P:Aspose.Words.Drawing.ImageData.ImageBytes" /> is <c>null</c>, 
            then the image is linked and not stored in the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.IsLink">
      <summary>
            Returns true if the image is linked to the shape (when <see cref="P:Aspose.Words.Drawing.ImageData.SourceFullName" /> is specified).
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.IsLinkOnly">
      <summary>
            Returns true if the image is linked and not stored in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.Title">
      <summary>
            Defines the title of an image.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.CropTop">
      <summary>
            Defines the fraction of picture removal from the top side.
            </summary>
      <remarks>
        <p>The amount of cropping can range from -1.0 to 1.0. The default value is 0. Note 
that a value of 1 will display no picture at all. Negative values will result in 
the picture being squeezed inward from the edge being cropped (the empty space 
between the picture and the cropped edge will be filled by the fill color of the 
shape). Positive values less than 1 will result in the remaining picture being 
stretched to fit the shape.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.CropBottom">
      <summary>
            Defines the fraction of picture removal from the bottom side.
            </summary>
      <remarks>
        <p>The amount of cropping can range from -1.0 to 1.0. The default value is 0. Note 
that a value of 1 will display no picture at all. Negative values will result in 
the picture being squeezed inward from the edge being cropped (the empty space 
between the picture and the cropped edge will be filled by the fill color of the 
shape). Positive values less than 1 will result in the remaining picture being 
stretched to fit the shape.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.CropLeft">
      <summary>
            Defines the fraction of picture removal from the left side.
            </summary>
      <remarks>
        <p>The amount of cropping can range from -1.0 to 1.0. The default value is 0. Note 
that a value of 1 will display no picture at all. Negative values will result in 
the picture being squeezed inward from the edge being cropped (the empty space 
between the picture and the cropped edge will be filled by the fill color of the 
shape). Positive values less than 1 will result in the remaining picture being 
stretched to fit the shape.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.CropRight">
      <summary>
            Defines the fraction of picture removal from the right side.
            </summary>
      <remarks>
        <p>The amount of cropping can range from -1.0 to 1.0. The default value is 0. Note 
that a value of 1 will display no picture at all. Negative values will result in 
the picture being squeezed inward from the edge being cropped (the empty space 
between the picture and the cropped edge will be filled by the fill color of the 
shape). Positive values less than 1 will result in the remaining picture being 
stretched to fit the shape.</p>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.Borders">
      <summary>
            Gets the collection of borders of the image. Borders only have effect for inline images.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.ChromaKey">
      <summary>
            Defines the color value of the image that will be treated as transparent. 
            </summary>
      <remarks>
        <p>The default value is 0.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.Brightness">
      <summary>
            Gets or sets the brightness of the picture. 
            The value for this property must be a number from 0.0 (dimmest) to 1.0 (brightest). 
            </summary>
      <remarks>
        <p>The default value is 0.5.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.Contrast">
      <summary>
            Gets or sets the contrast for the specified picture. The value 
            for this property must be a number from 0.0 (the least contrast) to 1.0 (the greatest contrast). 
            </summary>
      <remarks>
        <p>The default value is 0.5.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.BiLevel">
      <summary>
            Determines whether an image will be displayed in black and white. 
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageData.GrayScale">
      <summary>
            Determines whether a picture will display in grayscale mode.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.BreakType">
      <summary>
            Specifies type of a break inside a document.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.ParagraphBreak">
      <summary>
            Break between paragraphs.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.PageBreak">
      <summary>
            Explicit page break.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.ColumnBreak">
      <summary>
            Explicit column break. 
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.SectionBreakContinuous">
      <summary>
            Specifies start of new section on the same page as the previous section.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.SectionBreakNewColumn">
      <summary>
            Specifies start of new section in the new column.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.SectionBreakNewPage">
      <summary>
            Specifies start of new section on a new page.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.SectionBreakEvenPage">
      <summary>
            Specifies start of new section on a new even page.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.SectionBreakOddPage">
      <summary>
            Specifies start of new section on a odd page.
            </summary>
    </member>
    <member name="F:Aspose.Words.BreakType.LineBreak">
      <summary>
            Explicit line break.
            </summary>
    </member>
    <member name="T:Aspose.Words.Bookmark">
      <summary>
            Represents a single bookmark.
            </summary>
      <remarks>
        <p>
          <see cref="T:Aspose.Words.Bookmark" /> is a "facade" object that encapsulates two nodes <see cref="P:Aspose.Words.Bookmark.BookmarkStart" />
            and <see cref="P:Aspose.Words.Bookmark.BookmarkEnd" /> in a document tree and allows to work with a bookmark as a single object.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Bookmark.Remove">
      <summary>
            Removes the bookmark from the document. Does not remove text inside the bookmark.
            </summary>
    </member>
    <member name="P:Aspose.Words.Bookmark.Name">
      <summary>
            Gets the name of the bookmark.
            </summary>
      <remarks>
            Note that if you change the name of a bookmark to a name that already exists in the document,
            no error will be given and only the first bookmark will be stored when you save the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Bookmark.Text">
      <summary>
            Gets/sets the text enclosed in the bookmark.
            </summary>
    </member>
    <member name="P:Aspose.Words.Bookmark.BookmarkStart">
      <summary>
            Gets the node that represents the start of the bookmark.
            </summary>
    </member>
    <member name="P:Aspose.Words.Bookmark.BookmarkEnd">
      <summary>
            Gets the node that represents the end of the bookmark.
            </summary>
    </member>
    <member name="T:Aspose.Words.NodeChangedAction">
      <summary>
            Specifies the type of node change.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.NodeChangedEventArgs" />
        <seealso cref="P:Aspose.Words.NodeChangedEventArgs.Action" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.NodeChangedAction.Insert">
      <summary>
            A node is being inserted in the tree.
            </summary>
    </member>
    <member name="F:Aspose.Words.NodeChangedAction.Remove">
      <summary>
            A node is being removed from the tree.
            </summary>
    </member>
    <member name="T:Aspose.Words.Properties.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Properties</b> namespace provides classes to work
            with custom and built-in document properties such as title, keywords, company etc.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Reporting.MergeFieldEventArgsBase">
      <summary>
            Base class for <see cref="T:Aspose.Words.Reporting.MergeFieldEventArgs" /> and <see cref="T:Aspose.Words.Reporting.MergeImageFieldEventArgs" />.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Reporting.MergeFieldEventArgs" />
        <seealso cref="T:Aspose.Words.Reporting.MergeImageFieldEventArgs" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.Document">
      <summary>
            Returns the <see cref="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.Document" /> object for which the mail merge is performed.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.TableName">
      <summary>
            Gets the name of the data table for the current merge operation or empty string if the name is not available.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.RecordIndex">
      <summary>
            Gets the zero based index of the record that is being merged.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.FieldName">
      <summary>
            Gets the name of the merge field in the data source.
            </summary>
      <remarks>
        <p>If you have a mapping from a document field name to a different data source field name, 
            then this is the mapped field name.</p>
        <p>If you specified a field name prefix, for example "Image:MyFieldName" in the document,
            then <b>FieldName</b> returns field name without the prefix, that is "MyFieldName".</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.DocumentFieldName">
      <summary>
            Gets the name of the merge field as specified in the document.
            </summary>
      <remarks>
        <p>If you have a mapping from a document field name to a different data source field name,
            then this is the original field name as specified in the document.</p>
        <p>If you specified a field name prefix, for example "Image:MyFieldName" in the document,
            then <b>DocumentFieldName</b> returns field name without the prefix, that is "MyFieldName".</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.FieldValue">
      <summary>
            Gets the value of the field from the data source.
            </summary>
      <remarks>
            This property contains a value that has just been selected from your data source
            for this field by the mail merge engine.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.Field">
      <summary>
            Gets the object that represents the current merge field.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.DropDownItemCollection">
      <summary>
            A collection of strings that represent all the items in a drop-down form field.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Fields.FormField" />
        <seealso cref="P:Aspose.Words.Fields.FormField.DropDownItems" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Fields.DropDownItemCollection.Add(System.String)">
      <summary>
            Adds a string to the end of the collection.
            </summary>
      <param name="s">The string to add to the end of the collection.</param>
      <returns>The zero-based index at which the new element is inserted.</returns>
    </member>
    <member name="M:Aspose.Words.Fields.DropDownItemCollection.Insert(System.Int32,System.String)">
      <summary>
            Inserts a string into the collection at the specified index.
            </summary>
      <param name="index">The zero-based index at which value is inserted.</param>
      <param name="value">The string to insert.</param>
    </member>
    <member name="P:Aspose.Words.Fields.DropDownItemCollection.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ArrowWidth">
      <summary>
            Width of the arrow at the end of a line.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.StartArrowWidth" />
        <seealso cref="P:Aspose.Words.Drawing.Stroke.EndArrowWidth" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowWidth.Narrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowWidth.Medium">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowWidth.Wide">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.SaveType">
      <summary>
            Enumerates different ways of presenting the document at the client browser. 
            </summary>
      <remarks>
        <p>It is recommended to use the <see cref="F:Aspose.Words.SaveType.OpenInWord" /> option. The <see cref="F:Aspose.Words.SaveType.OpenInBrowser" />
            option does not always work as expected, probably because of some security configuration/issues 
            in Internet Explorer and Microsoft Word.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.SaveType.OpenInWord">
      <summary>
            Send the document to the browser and present an option to save the
            document to disk or open in an application associated with .doc extension.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveType.OpenInBrowser">
      <summary>
            Send the document to the browser and presents an option to save the 
            document to disk or open inside the browser.
            </summary>
    </member>
    <member name="T:Aspose.Words.SaveFormat">
      <summary>
            Indicates the format in which the document is saved.
            </summary>
      <remarks>
        <p>To convert a document into PDF format, save it in the Aspose.Pdf.Xml format,
            then use Aspose.Pdf (purchased separately) to read the XML file and produce a PDF file.</p>
        <p>If the document contains images, <b>Aspose.Words</b> will save every image into a 
            separate file and include the file name in the produced XML file. The image files 
            are created in the same folder where the XML file is saved. If you are saving the 
            XML file to a stream, <b>Aspose.Words</b> will save images to the Windows temporary folder.</p>
        <note>
          <b>Aspose.Words</b> does not automatically delete the image files.
            The responsibility to delete the image files lies with <b>Aspose.Pdf</b>. To instruct
            <b>Aspose.Pdf</b> to delete image files, set the <b>Pdf.IsImagesInXmlDeleteNeeded</b>
            property to true.</note>
        <note>Some formatting specified in a Microsoft Word document might be
            lost when converting to PDF.</note>
        <seealso cref="M:Aspose.Words.Document.Save(System.IO.Stream,Aspose.Words.SaveFormat)" />
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.SaveFormat.None">
      <summary>
            Default, invalid value for file format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Doc">
      <summary>
            Saves the document in the Microsoft Word 97 - 2003 Document format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Text">
      <summary>
            Saves the document in the plain text format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.AsposePdf">
      <summary>
            Saves the document in the Aspose.Pdf.Xml format that can be read by Aspose.Pdf to produce a PDF file.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Html">
      <summary>
            Saves the document in the HTML format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.WordML">
      <summary>
            Saves the document in the Microsoft Word 2003 WordprocessingML format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Rtf">
      <summary>
            Saves the document in the RTF format. 
            All characters above 7-bits are escaped as hexadecimal or Unicode characters.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Docx">
      <summary>
            Saves the document as a Microsoft Office 2007 Open XML Document (macro-free).
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Docm">
      <summary>
            Saves the document as a Microsoft Office 2007 Open XML Macro-Enabled Document.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Odt">
      <summary>
            Saves the document in the OpenDocument format.
            </summary>
    </member>
    <member name="F:Aspose.Words.SaveFormat.Mhtml">
      <summary>
            Saves the document in the MHTML (Web archive) format.
            </summary>
    </member>
    <member name="T:Aspose.Words.TextOrientation">
      <summary>
            Specifies orientation of text in a table cell or a text frame.
            </summary>
    </member>
    <member name="F:Aspose.Words.TextOrientation.Horizontal">
      <summary>
            Text is arranged horizontally (lr-tb).
            </summary>
    </member>
    <member name="F:Aspose.Words.TextOrientation.Downward">
      <summary>
            Text is rotated 90 degrees to the right to appear from top to bottom (tb-rl).
            </summary>
    </member>
    <member name="F:Aspose.Words.TextOrientation.Upward">
      <summary>
            Text is rotated 90 degrees to the left to appear from bottom to top (bt-lr).
            </summary>
    </member>
    <member name="F:Aspose.Words.TextOrientation.HorizontalRotatedFarEast">
      <summary>
            Text is arranged horizontally, but Far East characters are rotated 90 degrees to the left (lr-tb-v).
            </summary>
    </member>
    <member name="F:Aspose.Words.TextOrientation.VerticalFarEast">
      <summary>
            Far East characters appear vertical, other text is rotated 90 degrees 
            to the right to appear from top to bottom (tb-rl-v). 
            </summary>
    </member>
    <member name="T:Aspose.Words.Run">
      <summary>
            Represents a run of characters with the same font formatting.
            </summary>
      <remarks>
        <p>All text of the document is stored in runs of text.</p>
        <p>
          <b>Run</b> can only be a child of <b>Paragraph</b>.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Run.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Run</b> class.
            </summary>
      <remarks>
        <p>When <b>Run</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Run</b> to the document use InsertAfter or InsertBefore 
            on the paragraph where you want the run inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Run.#ctor(Aspose.Words.Document,System.String)">
      <summary>
            Initializes a new instance of the <b>Run</b> class.
            </summary>
      <remarks>
        <p>When <b>Run</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Run</b> to the document use InsertAfter or InsertBefore 
            on the paragraph where you want the run inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
      <param name="text">The text of the run.</param>
    </member>
    <member name="M:Aspose.Words.Run.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls DocumentVisitor.VisitRun.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>False if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="M:Aspose.Words.Run.GetText">
      <summary>
            Gets the text of the run.
            </summary>
      <returns>The text of the run.</returns>
    </member>
    <member name="P:Aspose.Words.Run.NodeType">
      <summary>
            Returns <b>NodeType.Run</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Run.Text">
      <summary>
            Gets or sets the text of the run.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.RowAlignment">
      <summary>
            Specifies alignment for a table row.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.RowAlignment.Left">
      <summary>
            The row is aligned to the left.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.RowAlignment.Center">
      <summary>
            The row is centered.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.RowAlignment.Right">
      <summary>
            The row is aligned to the right.
            </summary>
    </member>
    <member name="T:Aspose.Words.Style">
      <summary>
            Represents a single built-in or user-defined style.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.GetDirectParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.GetDirectParaAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.FetchInheritedParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            Gets a paragraph attribute from one of the parent styles or global defaults.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.FetchParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.SetParaAttr(System.Int32,System.Object)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.RemoveParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.ClearParaAttrs">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.GetDirectRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Style.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.Name">
      <summary>
            Gets the name of the style. 
            </summary>
      <remarks>
        <para>Names of built-in styles in documents created in different languages of MS Word can be different.</para>
        <seealso cref="P:Aspose.Words.Style.StyleIdentifier" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.StyleIdentifier">
      <summary>
            Gets the locale independent style identifier for a built-in style.
            </summary>
      <remarks>
        <para>For user defined (custom) styles, this property returns <see cref="F:Aspose.Words.StyleIdentifier.User" />.</para>
        <seealso cref="P:Aspose.Words.Style.Name" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.IsHeading">
      <summary>
            True when the style is one of the built-in Heading styles.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.Type">
      <summary>
            Gets the style tpe (paragraph or character).
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.Document">
      <summary>
            Gets the owner document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.BaseStyle">
      <summary>
            Gets/sets the name of the style this style is based on.
            </summary>
      <remarks>
            This will be an empty string if the style is not based on any other style and it can be set 
            to an empty string.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Style.NextParagraphStyle">
      <summary>
            Gets/sets the name of the style to be applied automatically to a new paragraph inserted after a 
            paragraph formatted with the specified style. 
            </summary>
      <remarks>
            This property is not used by Aspose.Words. The next paragraph style will only
            be applied automatically when you edit the document in MS Word.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Style.BuiltIn">
      <summary>
            True if this style is one of the built-in styles in MS Word.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.Font">
      <summary>
            Gets the character formatting of the style.
            </summary>
      <remarks>
        <para>This property is only valid for character and paragraph styles.
            For other style types this property returns null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.ParagraphFormat">
      <summary>
            Gets the paragraph formatting of the style.
            </summary>
      <remarks>
        <para>This property is only valid for paragraph styles.
            For other style types this property returns null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.List">
      <summary>
            Gets the list that defines formatting of this list style. 
            </summary>
      <remarks>
        <para>This property is only valid for list styles.
            For other style types this property returns null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.ListFormat">
      <summary>
            Provides access to the list formatting properties of a paragraph style.
            </summary>
      <remarks>
        <para>This property is only valid for paragraph styles.
            For other style types this property returns null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Style.Styles">
      <summary>
            Gets the collection of styles this style belongs to.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.DirectParaAttrsCount">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Style.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="T:Aspose.Words.NodeImporter">
      <summary>
            Allows to efficiently perform repeated import of nodes from one document to another.
            </summary>
      <remarks>
        <p>Aspose.Words provides functionality for easy copying and moving fragments
            between Microsoft Word documents. This is known as "importing nodes".
            Before you can insert a fragment from one document into another, you need to "import" it.
            Importing creates a deep clone of the original node, ready to be inserted into the 
            destination document.</p>
        <p>The simplest way to import a node is to use the <see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean)" /> method
            provided by the <see cref="T:Aspose.Words.Document" /> object.</p>
        <p>However, when you need to import nodes from one document to another multiple times,
            it is better to use the <see cref="T:Aspose.Words.NodeImporter" /> class. The <see cref="T:Aspose.Words.NodeImporter" />
            class allows to minimize the number of styles and lists created in the destination document.</p>
        <p>Copying or moving fragments from one Microsoft Word document to another presents a number 
            of technical challenges for Aspose.Words. In a Word document, styles and list formatting
            are stored centrally, separately from the text of the document. The paragraphs
            and runs of text merely reference the styles by internal unique identifiers.</p>
        <p>The challenges arise from the fact that styles and lists are different in different documents.
            For example, to copy a paragraph formatted with the Heading 1 style from one document to another,
            a number of things must be taken into account: decide whether to copy the Heading 1 style from
            the source document to the destination document, clone the paragraph, update the cloned
            paragraph so it refers to the correct Heading 1 style in the destination document.
            If the style had to be copied, all the styles that it references (based on style 
            and next paragraph style) should be analyzed and possibly copied too and so on.
            Similar issues exist when copying bulleted or numbered paragraphs because Microsoft Word
            stores list definitions separately from text.</p>
        <p>The <see cref="T:Aspose.Words.NodeImporter" /> class is like a context, that holds the "translation tables"
            during the import. It correctly translates between styles and lists in the source and 
            destination documents.</p>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean)" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.NodeImporter.#ctor(Aspose.Words.Document,Aspose.Words.Document,Aspose.Words.ImportFormatMode)">
      <summary>
            Initalizes a new instance of the <see cref="T:Aspose.Words.NodeImporter" /> class.
            </summary>
      <param name="srcDoc">The source document.</param>
      <param name="dstDoc">The destination document that will be the owner of imported nodes.</param>
      <param name="importFormatMode">Specifies how to merge style formatting that clashes.</param>
    </member>
    <member name="M:Aspose.Words.NodeImporter.ImportNode(Aspose.Words.Node,System.Boolean)">
      <summary>
        <p>Imports a node from one document into another.</p>
      </summary>
      <remarks>
        <p>Importing a node creates a copy of the source node belonging to the importing document. 
The returned node has no parent. The source node is not altered or removed from the original document.</p>
        <p>Before a node from another document can be inserted into this document, it must be imported.
During import, document-specific properties such as references to styles and lists are translated
from the original to the importing document. After the node was imported, it can be inserted
into the appropriate place in the document using <see cref="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)" /> or 
<see cref="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)" />.</p>
        <p>If the source node already belongs to the destination document, then simply a deep clone
of the source node is created.</p>
      </remarks>
      <param name="srcNode">The node to import.</param>
      <param name="isImportChildren">True to import all child nodes recursively; otherwise, false.</param>
      <returns>The cloned, imported node. The node belongs to the destination document, but has no parent.</returns>
    </member>
    <member name="T:Aspose.Words.Drawing.Stroke">
      <summary>
            Defines a stroke for a shape.
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.Stroke" /> property to access stroke properties of a shape.
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.Stroke" /> class directly.</p>
        <seealso cref="P:Aspose.Words.Drawing.Shape.Stroke" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.On">
      <summary>
            Defines whether the path will be stroked.
            </summary>
      <remarks>
        <p>The default value is <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.Weight">
      <summary>
            Defines the brush thickness that strokes the path of a shape in points.
            </summary>
      <remarks>
        <p>The default value is 0.75.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.Color">
      <summary>
            Defines the color of a stroke.
            </summary>
      <remarks>
        <p>The default value is 
            <see cref="P:System.Drawing.Color.Black" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.Color2">
      <summary>
            Defines a second color for a stroke.
            </summary>
      <remarks>
        <p>The default value is 
            <see cref="P:System.Drawing.Color.White" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.DashStyle">
      <summary>
            Specifies the dot and dash pattern for a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.DashStyle.Solid" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.JoinStyle">
      <summary>
            Defines the join style of a polyline.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.JoinStyle.Round" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.EndCap">
      <summary>
            Defines the cap style for the end of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.EndCap.Flat" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.LineStyle">
      <summary>
            Defines the line style of the stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ShapeLineStyle.Single" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.StartArrowType">
      <summary>
            Defines the arrowhead for the start of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowType.None" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.EndArrowType">
      <summary>
            Defines the arrowhead for the end of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowType.None" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.StartArrowWidth">
      <summary>
            Defines the arrowhead width for the start of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowWidth.Medium" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.StartArrowLength">
      <summary>
            Defines the arrowhead length for the start of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowLength.Medium" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.EndArrowWidth">
      <summary>
            Defines the arrowhead width for the end of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowWidth.Medium" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.EndArrowLength">
      <summary>
            Defines the arrowhead length for the end of a stroke.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.ArrowLength.Medium" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.Opacity">
      <summary>
            Defines the amount of transparency of a stroke. Valid range is from 0 to 1.
            </summary>
      <remarks>
        <p>The default value is 1.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Stroke.ImageBytes">
      <summary>
            Defines the image for a stroke image or pattern fill.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.JoinStyle">
      <summary>
            Line join style.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.JoinStyle" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.JoinStyle.Bevel">
      <summary>
            Join edges by a straight line.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.JoinStyle.Miter">
      <summary>
            Extend edges until they join.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.JoinStyle.Round">
      <summary>
            Draw an arc between the two edges.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.DashStyle">
      <summary>
            Dashed line style.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.DashStyle" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.Solid">
      <summary>
            Solid (continuous) pen.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.ShortDash">
      <summary>
            System dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.ShortDot">
      <summary>
            System dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.ShortDashDot">
      <summary>
            System dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.ShortDashDotDot">
      <summary>
            System dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.Dot">
      <summary>
            Square dot style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.Dash">
      <summary>
            Dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.LongDash">
      <summary>
            Long dash style.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.DashDot">
      <summary>
            Dash short dash.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.LongDashDot">
      <summary>
            Long dash short dash.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.DashStyle.LongDashDotDot">
      <summary>
            Long dash short dash short dash.
            </summary>
    </member>
    <member name="T:Aspose.Words.FootnoteLocation">
      <summary>
            Defines the footnote or endnote position.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.FootnoteOptions" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.FootnoteLocation.BottomOfPage">
      <summary>
            Footnotes are output at the bottom of each page. Valid for footnotes only.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteLocation.BeneathText">
      <summary>
            Footnotes are output beheath text on each page. Valid for footnotes only.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteLocation.EndOfSection">
      <summary>
            Endnotes are output at the end of the section. Valid for endnotes only.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteLocation.EndOfDocument">
      <summary>
            Endnotes are output at the end of the document. Valid for endnotes only.
            </summary>
    </member>
    <member name="T:Aspose.Words.FootnoteNumberingRule">
      <summary>
            Determines when automatic footnote or endnote numbering restarts.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.FootnoteOptions" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.FootnoteNumberingRule.Continuous">
      <summary>
            Numbering continuous throughout the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteNumberingRule.RestartSection">
      <summary>
            Numbering restarts at each section.
            </summary>
    </member>
    <member name="F:Aspose.Words.FootnoteNumberingRule.RestartPage">
      <summary>
            Numbering restarts at each page.
            </summary>
    </member>
    <member name="T:Aspose.Words.Underline">
      <summary>
            Indicates type of the underline applied to a font.
            </summary>
    </member>
    <member name="F:Aspose.Words.Underline.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Single">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Words">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Double">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Dotted">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Thick">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Dash">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DashLong">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DotDash">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DotDotDash">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.Wavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DottedHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DashHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DashLongHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DotDashHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.DotDotDashHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.WavyHeavy">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Underline.WavyDouble">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.TabAlignment">
      <summary>
            Specifies the alignment/type of a tab stop.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Left">
      <summary>
            Left-aligns the text after the tab stop.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Center">
      <summary>
            Centers the text around the tab stop.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Right">
      <summary>
            Right-aligns the text at the tab stop.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Decimal">
      <summary>
            Aligns the text at the decimal dot.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Bar">
      <summary>
            Draws a vertical bar at the tab stop position.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.List">
      <summary>
            The tab is a delimeter between the number/bullet and text in a list item.
            </summary>
    </member>
    <member name="F:Aspose.Words.TabAlignment.Clear">
      <summary>
            Clears any tab stop in this position.
            </summary>
    </member>
    <member name="T:Aspose.Words.Comment">
      <summary>
            Represents a container for text of a comment.
            </summary>
      <remarks>
        <p>
          <b>Comment</b> is an inline-level node and can only be a child of <b>Paragraph</b>.</p>
        <p>
          <b>Comment</b> can contain <b>Paragraph</b> and <b>Table</b> child nodes.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Comment.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Comment</b> class.
            </summary>
      <remarks>
        <p>When <b>Comment</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Comment</b> to the document use InsertAfter or InsertBefore 
            on the paragraph where you want the comment inserted.</p>
        <para>After creating a comment, don't forget to set its <see cref="P:Aspose.Words.Comment.Author" />,
            <see cref="P:Aspose.Words.Comment.Initial" /> and <see cref="P:Aspose.Words.Comment.DateTime" /> properties.</para>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Comment.#ctor(Aspose.Words.Document,System.String,System.String,System.DateTime)">
      <summary>
            Initializes a new instance of the <b>Comment</b> class.
            </summary>
      <param name="doc">The owner document.</param>
      <param name="author">The author name for the comment. Cannot be null.</param>
      <param name="initial">The author initials for the comment. Cannot be null.</param>
      <param name="dateTime">The date and time for the comment.</param>
    </member>
    <member name="M:Aspose.Words.Comment.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitCommentStart(Aspose.Words.Comment)" />, then calls <see cref="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)" /> for all 
            child nodes of the comment and calls <see cref="M:Aspose.Words.DocumentVisitor.VisitCommentEnd(Aspose.Words.Comment)" /> at the end.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Comment.NodeType">
      <summary>
            Returns <b>NodeType.Comment</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Comment.StoryType">
      <summary>
            Returns <b>StoryType.Comments</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Comment.Initial">
      <summary>
            Returns or sets the initials of the user associated with a specific comment.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Comment.DateTime">
      <summary>
            Gets the date and time that the comment was made.
            </summary>
      <remarks>
        <para>Default is <see cref="F:System.DateTime.MinValue" />.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Comment.Author">
      <summary>
            Returns or sets the author name for a comment.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Tables.RowFormat">
      <summary>
            Represents all formatting for a table row.
            </summary>
      <dev>
            I don't expose Shading here because default shading in MS Word works very strange,
            cells do not seem to inherit the shading specified for the table so it will be pretty
            confusing to work with. Setting row shading should actually go and set shading for
            all of the cells in the row.
            </dev>
    </member>
    <member name="M:Aspose.Words.Tables.RowFormat.ClearFormatting">
      <summary>
            Resets to default row formatting.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.RowFormat.ClearCellPadding">
      <summary>
            Sets default cell margins (padding) to zero.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.RowFormat.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.RowFormat.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.RowFormat.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.Alignment">
      <summary>
            Gets or sets a value that represents the alignment for the row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.AllowAutoFit">
      <summary>
            Allows Microsoft Word to automatically resize cells in a table to fit their contents.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.Borders">
      <summary>
            Gets the collection of default cell borders for the row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.Bidi">
      <summary>
            Gets or sets whether this is a rigt-to-left table.
            </summary>
      <remarks>
        <p>When true, the cells in this row are laid out right to left.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.LeftPadding">
      <summary>
            Gets or sets the amount of space (in points) to add to the left of the contents of cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.RightPadding">
      <summary>
            Gets or sets the amount of space (in points) to add to the right of the contents of cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.TopPadding">
      <summary>
            Gets or sets the amount of space (in points) to add above the contents of cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.BottomPadding">
      <summary>
            Gets or sets the amount of space (in points) to add below the contents of cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.CellSpacing">
      <summary>
            Gets or sets the amount of space (in points) between the cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.Height">
      <summary>
            Gets or sets the height of the table row in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.HeightRule">
      <summary>
            Gets or sets the rule for determining the height of the table row.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.AllowBreakAcrossPages">
      <summary>
            True if the text in a table row is allowed to split across a page break.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.HeadingFormat">
      <summary>
            True if the row is repeated as a table heading on every page when the table spans more than one page.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowFormat.LeftIndent">
      <summary>
            Gets or sets the value that represents the left indent of the table row.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Tables</b> namespace contains classes that 
            represent tables, rows, cells and their formatting.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.SectionCollection">
      <summary>
            A collection of <b>Section</b> objects in the document.
            </summary>
      <remarks>
        <p>A Microsoft Word document can contain multiple sections. To create a section in a Microsoft Word, 
            select the Insert/Break command and select a break type. The break specifies whether section starts 
            on a new page or on the same page.</p>
        <p>Programmatically inserting and removing sections can be used to customize documents produced
            during mail merge. If a document needs to have different content or parts of the
            content depending on some criteria, then you can create a "master" document that contains 
            multiple sections and delete some of the sections before or after mail merge.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SectionCollection.Item(System.Int32)">
      <summary>
            Retrieves a section at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the list of sections.</param>
    </member>
    <member name="T:Aspose.Words.Reporting.MergeImageFieldEventArgs">
      <summary>
            Provides data for the <see cref="T:Aspose.Words.Reporting.MergeImageFieldEventHandler" /> event.
            </summary>
      <remarks>
        <p>This event occurs during mail merge when an image mail merge
            field is encountered in the document. You can respond to this event to return a
            file name, stream, or an <see cref="T:System.Drawing.Image" /> object to the mail merge 
            engine so it is inserted into the document.</p>
        <p>There are three properties avaialable <see cref="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.ImageFileName" />, 
            <see cref="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.ImageStream" /> and <see cref="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.Image" /> to specify where the image must be taken from. 
            Set only one of these properties.</p>
        <p>To insert an image mail merge field into a document in Word, select Insert/Field command,
            then select MergeField and type Image:MyFieldName.</p>
        <seealso cref="T:Aspose.Words.Reporting.MergeImageFieldEventHandler" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.ImageFileName">
      <summary>
            Sets the file name of the image that the mail merge engine must insert into the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.ImageStream">
      <summary>
            Specifies the stream for the mail merge engine to read an image from.
            </summary>
      <remarks>
        <p>Aspose.Words closes this stream after it merges the image into the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeImageFieldEventArgs.Image">
      <summary>
            Specifies the image that the mail merge engine must insert into the document.
            </summary>
    </member>
    <member name="T:Aspose.Words.ZoomType">
      <summary>
            Possible values for how large or small the document appears on the screen in Microsoft Word.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.ViewOptions" />
        <seealso cref="P:Aspose.Words.ViewOptions.ZoomType" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.ZoomType.None">
      <summary>
            Indicates to use the explicit zoom percentage.
            </summary>
    </member>
    <member name="F:Aspose.Words.ZoomType.FullPage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.ZoomType.PageWidth">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.ZoomType.TextFit">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.LoadFormat">
      <summary>
            Indicates the format of the document that is to be loaded.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Auto">
      <summary>
            Instructs Aspose.Words to recognize the format automatically.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Doc">
      <summary>
            Microsoft Word 97 - 2003 Document format.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Html">
      <summary>
            HTML format.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Rtf">
      <summary>
            RTF format.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.WordML">
      <summary>
            Microsoft Word 2003 WordprocessingML format.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Docx">
      <summary>
            Microsoft Office 2007 Open XML format.
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Odt">
      <summary>
            OpenDocument Text format (OpenOffice Writer) format. Beta!
            </summary>
    </member>
    <member name="F:Aspose.Words.LoadFormat.Unknown">
      <summary>
            Unrecognized format, cannot be loaded by Aspose.Words.
            </summary>
    </member>
    <member name="T:Aspose.Words.TextureIndex">
      <summary>
            Specifies shading texture.
            </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture10Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture12Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture15Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture17Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture20Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture22Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture25Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture27Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture2Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture30Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture32Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture35Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture37Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture40Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture42Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture45Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture47Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture50Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture52Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture55Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture57Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture60Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture62Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture65Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture67Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture70Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture72Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture75Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture77Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture7Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture80Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture82Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture85Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture87Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture90Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture92Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture95Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.Texture97Pt5Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureCross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkCross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkDiagonalCross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkDiagonalDown">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkDiagonalUp">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkHorizontal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDarkVertical">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDiagonalCross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDiagonalDown">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureDiagonalUp">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureHorizontal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureNone">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureSolid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextureIndex.TextureVertical">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.NodeList">
      <summary>
            Represents a collection of nodes.
            </summary>
      <remarks>
        <p>
          <b>NodeList</b> is returned by <see cref="M:Aspose.Words.CompositeNode.SelectNodes(System.String)" /> and contains a collection 
            of nodes matching the XPath query.</p>
        <p>
          <b>NodeList</b> supports indexed access and iteration.</p>
        <note>Treat the <b>NodeList</b> collection as a "snapshot" collection. <b>NodeList</b> starts 
            as a "live" collection because the nodes are not actually retrieved when the XPath query is run. 
            The nodes are only retrieved upon access and at this time the node and all nodes that precede 
            it are cached forming a "snapshot" collection.</note>
      </remarks>
    </member>
    <member name="M:Aspose.Words.NodeList.ToArray">
      <summary>
            Copies all nodes from the collection to a new array of nodes.
            </summary>
      <remarks>
        <p>You should not be adding/removing nodes while iterating over a collection 
of nodes because it invalidates the iterator and requires refreshes for live collections.</p>
        <p>To be able to add/remove nodes during iteration, use this method to copy 
nodes into a fixed-size array and then iterate over the array.</p>
      </remarks>
      <returns>An array of nodes.</returns>
    </member>
    <member name="M:Aspose.Words.NodeList.GetEnumerator">
      <summary>
            Provides a simple "foreach" style iteration over the collection of nodes.
            </summary>
      <returns>An IEnumerator.</returns>
    </member>
    <member name="P:Aspose.Words.NodeList.Item(System.Int32)">
      <summary>
            Retrieves a node at the given index.
            </summary>
      <remarks>
        <p>The index is zero-based.</p>
        <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
        <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
        <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
      </remarks>
      <param name="index">An index into the list of nodes.</param>
    </member>
    <member name="P:Aspose.Words.NodeList.Count">
      <summary>
            Gets the number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.CellFormat">
      <summary>
            Represents all formatting for a table cell.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.CellFormat.ClearFormatting">
      <summary>
            Resets to default cell formatting. Does not change the width of the cell.
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.CellFormat.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.CellFormat.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.CellFormat.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.Tables.CellFormat.FetchInheritedShadingAttr(System.Int32)">
      <summary>
            IShadingAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.LeftPadding">
      <summary>
            Returns or sets the amount of space (in points) to add to the left of the contents of cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.RightPadding">
      <summary>
            Returns or sets the amount of space (in points) to add to the right of the contents of cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.TopPadding">
      <summary>
            Returns or sets the amount of space (in points) to add above the contents of cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.BottomPadding">
      <summary>
            Returns or sets the amount of space (in points) to add below the contents of cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.Borders">
      <summary>
            Gets collection of borders of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.Shading">
      <summary>
            Returns a Shading object that refers to the shading formatting for the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.VerticalAlignment">
      <summary>
            Returns or sets the vertical alignment of text in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.Width">
      <summary>
            Returns or sets the width of the cell in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.VerticalMerge">
      <summary>
            Specifies how the cell is merged with other cells vertically.
            </summary>
      <remarks>
        <p>Cells can only be merged vertically if their left and right boundaries are identical.</p>
        <p>When cells are vertically merged, the display areas of the merged cells are consolidated.
            The consolidated area is used to display the contents of the first vertically merged cell 
            and all other vertically merged cells must be empty.</p>
        <seealso cref="P:Aspose.Words.Tables.CellFormat.HorizontalMerge" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.HorizontalMerge">
      <summary>
            Specifies how the cell is merged horizontally with other cells in the row.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Tables.CellFormat.VerticalMerge" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.Orientation">
      <summary>
            Returns or sets the orientation of text in a table cell. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.FitText">
      <summary>
            If true, fits text in the cell, compressing each paragraph to the width of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.CellFormat.WrapText">
      <summary>
            If true, wrap text for the cell.
            </summary>
    </member>
    <member name="T:Aspose.Words.Reporting.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Reporting</b> namespace contains classes that form
            the reporting engine of Aspose.Words. The reporting engine allows to quickly 
            and easily populate documents designed in Microsoft Word with data from 
            various data sources such as <b>DataTable</b>, <b>DataSet</b>, 
            <b>DataView</b>, <b>IDataReader</b> or an array of values.</p>
        <p>The <see cref="T:Aspose.Words.Reporting.MailMerge" /> object which provides access to the reporting functionality 
            is available via the <see cref="P:Aspose.Words.Document.MailMerge">Document.MailMerge</see> property.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Lists.ListCollection">
      <summary>
            Stores and manages formatting of bulleted and numbered lists used in a document.
            </summary>
      <remarks>
        <p>A list in a Microsoft Word document is a set of list formatting properties.
            The formatting of the lists is stored in the <see cref="T:Aspose.Words.Lists.ListCollection" /> collection separately 
            from the paragraphs of text.</p>
        <p>You do not create objects of this class. There is always only one <see cref="T:Aspose.Words.Lists.ListCollection" /> 
            object per document and it is accessible via the <see cref="P:Aspose.Words.Document.Lists" /> property.</p>
        <p>To create a new list based on a predefined list template or based on a list style, 
            use the <see cref="M:Aspose.Words.Lists.ListCollection.Add(Aspose.Words.Style)" /> method.</p>
        <p>To create a new list with formatting identical to an existing list,
            use the <see cref="M:Aspose.Words.Lists.ListCollection.AddCopy(Aspose.Words.Lists.List)" /> method.</p>
        <p>To make a paragraph bulleted or numbered, you need to apply list formatting
            to a paragraph by assigning a <see cref="T:Aspose.Words.Lists.List" /> object to the 
            <see cref="P:Aspose.Words.ListFormat.List" /> property of <see cref="T:Aspose.Words.ListFormat" />.</p>
        <p>To remove list formatting from a paragraph, use the <see cref="M:Aspose.Words.ListFormat.RemoveNumbers" />
            method.</p>
        <p>If you know a bit about WordprocessingML, then you might know it defines separate concepts
            for "list" and "list definition". This exactly corresponds to how list formatting is stored
            in a Microsoft Word document at the low level. List definition is like a "schema" and
            list is like an instance of a list definition.</p>
        <p>To simplify programming model, Aspose.Words hides the distinction between list and list 
            definition in much the same way like Microsoft Word hides this in its user interface.
            This allows you to concentrate more on how you want your document to look like, rather than 
            building low-level objects to satisfy requirements of the Microsoft Word file format.</p>
        <p>It is not possible to delete lists once they are created in the current version of Aspose.Words.
            This is similar to Microsoft Word where user does not have explicit control over list definitions.</p>
        <seealso cref="T:Aspose.Words.Lists.List" />
        <seealso cref="T:Aspose.Words.Lists.ListLevel" />
        <seealso cref="T:Aspose.Words.ListFormat" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Lists.ListCollection.GetEnumerator">
      <summary>
            Gets the enumerator object that will enumerate lists in the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.Lists.ListCollection.Add(Aspose.Words.Lists.ListTemplate)">
      <overloads>Creates a new list and adds it to the collection of lists in the document.</overloads>
      <summary>
            Creates a new list based on a predefined template and adds it to the collection of lists in the document.
            </summary>
      <param name="template">The template of the list.</param>
      <returns>The newly created list.</returns>
      <remarks>
        <p>Aspose.Words list templates correspond to the 21 list templates available
            in the Bullets and Numbering dialog box in Microsoft Word 2003.</p>
        <p>All lists created using this method have 9 list levels.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Lists.ListCollection.Add(Aspose.Words.Style)">
      <summary>
            Creates a new list that references a list style and adds it to the collection of lists in the document.
            </summary>
      <param name="listStyle">The list style.</param>
      <returns>Thew newly created list.</returns>
      <remarks>
        <p>The newly created list references the list style. If you change the properties of the list
            style, it is reflected in the properties of the list. Vice versa, if you change the properties
            of the list, it is reflected in the properties of the list style.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Lists.ListCollection.AddCopy(Aspose.Words.Lists.List)">
      <summary>
            Creates a new list by copying the specified list and adding it to the collection of lists in the document.
            </summary>
      <param name="srcList">The source list to copy from.</param>
      <returns>The newly created list.</returns>
      <remarks>
        <p>The source list can be from any document. If the source list belongs to a different document,
            a copy of the list is created and added to the current document.</p>
        <p>If the source list is a reference to or a definition of a list style, 
            the newly created list is not related to the original list style.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Lists.ListCollection.GetListByListId(System.Int32)">
      <summary>
            Gets a list by a list identifier. 
            </summary>
      <param name="listId">The list identifier.</param>
      <returns>Returns the list object. Returns null if a list with the specified identifier was not found.</returns>
      <remarks>
        <p>You don't normally need to use this method. Most of the time you apply list formatting
            to paragraphs just by settings the <see cref="P:Aspose.Words.ListFormat.List" /> property
            of the <see cref="T:Aspose.Words.ListFormat" /> object.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListCollection.Count">
      <summary>
            Gets the count of numbered and bulleted lists in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListCollection.Item(System.Int32)">
      <summary>
            Gets a list by index.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListCollection.Document">
      <summary>
            Gets the owner document.
            </summary>
    </member>
    <member name="T:Aspose.Words.ImportFormatMode">
      <summary>
            Specifies how formatting is merged when importing content from another document.
            </summary>
      <remarks>
        <p>When you copy nodes from one document to another, this option specifies how formatting 
            is resolved when both documents have a style with the same name, but different formatting.</p>
        <p>The formatting is resolved as follows:</p>
        <list type="number">
          <item>Built-in styles are matched using their locale independent style identifier.
            User defined styles are matched using case-sensitive style name.</item>
          <item>If a matching style is not found in the destination document, the style
            (and all styles referenced by it) are copied into the destination document
            and the imported nodes are updated to reference the new style.</item>
          <item>If a matching style already exists in the destination document, what happens 
            depends on the <c>importFormatMode</c> parameter passed to 
            <see cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)">Document.ImportNode</see> 
            as described below.</item>
        </list>
        <p>When using the <b>UseDestinationStyles</b> option, if a matching style already exists 
            in the destination document, the style is not copied and the imported nodes are updated 
            to reference the existing style.</p>
        <p>The drawback of using <b>UseDestinationStyles</b> is that the imported text might
            look different in the destination document comparing to the source document. 
            For example, the "Heading 1" style in the source document uses Arial 16pt font and
            the "Heading 1" style in the destination document uses Times New Roman 14pt font.
            When importing text of "Heading 1" style with no other direct formatting, it will 
            appear as Times New Roman 14pt font in the destination document.</p>
        <p>Using the <b>KeepSourceFormatting</b> option allows to make sure the imported
            text looks in the destination document exactly like it was in the source document.
            If a matching style already exists in the destination document, the source style 
            is copied and given a unique name by appending a suffix number to it, for example
            "Normal_0" or "Heading 1_5".</p>
        <p>The drawback of using <b>KeepSourceFormatting</b> is that if you perform several imports, 
            you could end up with many styles in the destination document and that could make using 
            consistent style formatting in Microsoft Word difficult for this document.</p>
        <seealso cref="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.ImportFormatMode.UseDestinationStyles">
      <summary>
            Use the destination document styles and copy new styles. This is the default option.
            </summary>
    </member>
    <member name="F:Aspose.Words.ImportFormatMode.KeepSourceFormatting">
      <summary>
            Copy all required styles to the destination document, generate unique style names if needed.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.TextBox">
      <summary>
            Defines attributes that specify how a text is displayed inside a shape.
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.TextBox" /> property to access text properties of a shape.
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.TextBox" /> class directly.</p>
        <seealso cref="P:Aspose.Words.Drawing.Shape.TextBox" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.InternalMarginLeft">
      <summary>
            Specifies the inner left margin in points for a shape.
            </summary>
      <remarks>
        <p>The default value is 1/10 inch.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.InternalMarginRight">
      <summary>
            Specifies the inner right margin in points for a shape.
            </summary>
      <remarks>
        <p>The default value is 1/10 inch.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.InternalMarginTop">
      <summary>
            Specifies the inner top margin in points for a shape.
            </summary>
      <remarks>
        <p>The default value is 1/20 inch.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.InternalMarginBottom">
      <summary>
            Specifies the inner bottom margin in points for a shape.
            </summary>
      <remarks>
        <p>The default value is 1/20 inch.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.FitShapeToText">
      <summary>
            Determines whether Microsoft Word will grow the shape to fit text.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.LayoutFlow">
      <summary>
            Determines the flow of the text layout in a shape.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.LayoutFlow.Horizontal" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextBox.TextBoxWrapMode">
      <summary>
            Determines how text wraps inside a shape.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.TextBoxWrapMode.Square" />.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Drawing.LayoutFlow">
      <summary>
            Determines the flow of the text layout in a textbox. 
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.TextBox.LayoutFlow" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.Horizontal">
      <summary>
            Text is displayed horizontally.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.TopToBottomIdeographic">
      <summary>
            Ideographic text is displayed vertically.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.BottomToTop">
      <summary>
            Text is displayed vertically.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.TopToBottom">
      <summary>
            Text is displayed vertically.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.HorizontalIdeographic">
      <summary>
            Ideographic text is displayed horizontally.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.LayoutFlow.Vertical">
      <summary>
            Text is displayed vertically.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ImageSize">
      <summary>
            Contains information about image size and resolution.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ImageData.ImageSize" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageSize.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes width and height to the given values in pixels. Initalizes resolution to 96 dpi.
            </summary>
      <param name="widthPixels">Width in pixels.</param>
      <param name="heightPixels">Height in pixels.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageSize.#ctor(System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Initializes width, height and resolution to the given values.
            </summary>
      <param name="widthPixels">Width in pixels.</param>
      <param name="heightPixels">Height in pixels.</param>
      <param name="horizontalResolution">Horizontal resolution in DPI.</param>
      <param name="verticalResolution">Vertical resolution in DPI.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.ImageSize.#ctor(Aspose.Images.ImageSizeCore)">
      <summary>
            Creates an object from an internal image size object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.WidthPixels">
      <summary>
            Gets the width of the image in pixels.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.HeightPixels">
      <summary>
            Gets the height of the image in pixels.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.HorizontalResolution">
      <summary>
            Gets the horizontal resolution in DPI.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.VerticalResolution">
      <summary>
            Gets the vertical resolution in DPI.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.WidthPoints">
      <summary>
            Gets the width of the image in points. 1 point is 1/72 inch.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.ImageSize.HeightPoints">
      <summary>
            Gets the height of the image in points. 1 point is 1/72 inch.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ArrowLength">
      <summary>
            Length of the arrow at the end of a line.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.StartArrowLength" />
        <seealso cref="P:Aspose.Words.Drawing.Stroke.EndArrowLength" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowLength.Short">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowLength.Medium">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowLength.Long">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.Fields.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Fields</b> namespace contains classes that 
            represent Microsoft Word fields in a document.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.NodeType">
      <summary>
            Specifies the type of a Word document node.
            </summary>
      <dev>
        <p>Enumerated node types are provided as a common denominator to ensure all functionality 
            is accessible to all clients (including COM applications that might not have full access 
            to the runtime type information).</p>
      </dev>
    </member>
    <member name="F:Aspose.Words.NodeType.Any">
      <summary>
            Indicates all node types. Allows to select all children.
            </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Document">
      <summary>
        <p>A <see cref="T:Aspose.Words.Document" /> object that, as the root of the document tree, 
            provides access to the entire Word document.</p>
        <p>A <see cref="T:Aspose.Words.Document" /> node can have <see cref="T:Aspose.Words.Section" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Section">
      <summary>
        <p>A <see cref="T:Aspose.Words.Section" /> object that corresponds to one section in a Word document.</p>
        <p>A <see cref="T:Aspose.Words.Section" /> node can have <b>Body</b> and <b>HeaderFooter</b> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Body">
      <summary>
        <p>A <see cref="T:Aspose.Words.Body" /> object that contains the main text of a section (main text story).</p>
        <p>A <see cref="T:Aspose.Words.Body" /> node can have <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.HeaderFooter">
      <summary>
        <p>A <see cref="T:Aspose.Words.HeaderFooter" /> object that contains text of a particular header or footer inside a section.</p>
        <p>A <see cref="T:Aspose.Words.HeaderFooter" /> node can have <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Table">
      <summary>
        <p>A <see cref="T:Aspose.Words.Tables.Table" /> object that represents a table in a Word document.</p>
        <p>A <see cref="T:Aspose.Words.Tables.Table" /> node can have <see cref="T:Aspose.Words.Tables.Row" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Row">
      <summary>
        <p>A row of a table.</p>
        <p>A <see cref="T:Aspose.Words.Tables.Row" /> node can have <see cref="T:Aspose.Words.Tables.Cell" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Cell">
      <summary>
        <p>A cell of a table row.</p>
        <p>A <see cref="T:Aspose.Words.Tables.Cell" /> node can have <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Paragraph">
      <summary>
        <p>A paragraph of text.</p>
        <p>A <see cref="T:Aspose.Words.Paragraph" /> node is a container for inline level elements 
            <see cref="T:Aspose.Words.Run" />, 
            <see cref="T:Aspose.Words.Fields.FieldStart" />, 
            <see cref="T:Aspose.Words.Fields.FieldSeparator" />,
            <see cref="T:Aspose.Words.Fields.FieldEnd" />,
            <see cref="T:Aspose.Words.Fields.FormField" />,
            <see cref="T:Aspose.Words.Drawing.Shape" />,
            <see cref="T:Aspose.Words.Drawing.GroupShape" />,
            <see cref="T:Aspose.Words.Footnote" />,
            <see cref="T:Aspose.Words.Comment" />,
            <see cref="T:Aspose.Words.SpecialChar" />,
            as well as <see cref="T:Aspose.Words.BookmarkStart" /> and <see cref="T:Aspose.Words.BookmarkEnd" />.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.BookmarkStart">
      <summary>
        <p>A beginning of a bookmark marker.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.BookmarkEnd">
      <summary>
        <p>An end of a bookmark marker.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.GroupShape">
      <summary>
        <p>A group of shapes, images, OLE objects or other group shapes.</p>
        <p>A <see cref="T:Aspose.Words.Drawing.GroupShape" /> node can contain other 
            <see cref="T:Aspose.Words.Drawing.Shape" /> and <see cref="T:Aspose.Words.Drawing.GroupShape" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Shape">
      <summary>
        <p>A drawing object, such as an OfficeArt shape, image or an OLE object.</p>
        <p>A <see cref="T:Aspose.Words.Drawing.Shape" /> node can contain <see cref="T:Aspose.Words.Paragraph" />
            and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Comment">
      <summary>
        <p>A comment in a Word document.</p>
        <p>A <see cref="T:Aspose.Words.Comment" /> node can have <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Footnote">
      <summary>
        <p>A footnote or endnote in a Word document.</p>
        <p>A <see cref="T:Aspose.Words.Footnote" /> node can have <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Run">
      <summary>
        <p>A run of text.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.FieldStart">
      <summary>
        <p>A special character that designates the start of a Word field.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.FieldSeparator">
      <summary>
        <p>A special character that separates the field code from the field result.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.FieldEnd">
      <summary>
        <p>A special character that designates the end of a Word field.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.FormField">
      <summary>
        <p>A form field.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.SpecialChar">
      <summary>
        <p>A special character that is not one of the more specific special character types.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.SmartTag">
      <summary>
        <para>A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph</para>
      </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.System">
      <summary>
            Reserved for internal use by Aspose.Words.
            </summary>
    </member>
    <member name="F:Aspose.Words.NodeType.Null">
      <summary>
            Reserved for internal use by Aspose.Words.
            </summary>
    </member>
    <member name="T:Aspose.Words.Markup.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Markup</b> namespace contains classes that 
            represent customer defined semantics in a document: smart tags, custom XML and 
            structured document tags (content controls).</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Lists.ListTrailingCharacter">
      <summary>
            Specifies the character that separates the list label from the text of the paragraph.
            </summary>
      <remarks>
        <p>Used as a value for the <see cref="P:Aspose.Words.Lists.ListLevel.TrailingCharacter" /> property.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.Lists.ListTrailingCharacter.Tab">
      <summary>
            A tab character is placed between the list label and text of the paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTrailingCharacter.Space">
      <summary>
            A space character is placed between the list label and text of the paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTrailingCharacter.Nothing">
      <summary>
            There is no separator character between the list label and text of the paragraph.
            </summary>
    </member>
    <member name="T:Aspose.Words.Fields.FormFieldCollection">
      <summary>
            A collection of <b>FormField</b> objects that represent all the form fields in a range.
            </summary>
      <dev>Facade wrapper for a collection of form field objects.</dev>
    </member>
    <member name="M:Aspose.Words.Fields.FormFieldCollection.Remove(Aspose.Words.Fields.FormField)">
      <summary>
            Removes the specified form field from the document.
            </summary>
      <remarks>
            If there is a bookmark associated with the form field, the bookmark is not removed.
            </remarks>
      <param name="formField">The formField to remove.</param>
    </member>
    <member name="M:Aspose.Words.Fields.FormFieldCollection.Remove(System.String)">
      <summary>
            Removes a form field with the specified name.
            </summary>
      <remarks>
            If there is a bookmark associated with the form field, the bookmark is not removed.
            </remarks>
      <param name="formField">The case-insensitive name of the form field to remove.</param>
    </member>
    <member name="M:Aspose.Words.Fields.FormFieldCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a form field at the specified index.
            </summary>
      <remarks>
            If there is a bookmark associated with the form field, the bookmark is not removed.
            </remarks>
      <param name="index">The zero-based index of the form field to remove.</param>
    </member>
    <member name="M:Aspose.Words.Fields.FormFieldCollection.Clear">
      <summary>
            Removes all form fields from this collection and from the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.Fields.FormFieldCollection.GetEnumerator">
      <summary>
            Returns an enumerator object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormFieldCollection.Count">
      <summary>
            Returns the number of form fields in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Fields.FormFieldCollection.Item(System.Int32)">
      <summary>
            Returns a form field at the specified index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="P:Aspose.Words.Fields.FormFieldCollection.Item(System.String)">
      <summary>
            Returns a form field by bookmark name.
            </summary>
      <remarks>
            Returns null if the form field with the specified bookmark name cannot be found.
            </remarks>
      <param name="bookmarkName">Case-insensitive bookmark name.</param>
    </member>
    <member name="T:Aspose.Words.Fields.FieldExtractedEventHandler">
      <summary>
            Raised when a field is found by the field extractor.
            </summary>
    </member>
    <member name="T:Aspose.Words.FileCorruptedException">
      <summary>
            Thrown during document load, when the document appears to be corrupted and impossible to load.
            </summary>
    </member>
    <member name="T:Aspose.Words.CompatibilityOptions">
      <summary>
            Contains compatibility options (that is, the user preferences entered on the <b>Compatibility</b>
            tab of the <b>Options</b> dialog in Microsoft Word).
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.CompatibilityOptions" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoTabForHangingIndent">
      <summary>
            Specifies not to add automatic tab stop for a hanging indent.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoExtraSpaceForRaisedLoweredCharacters">
      <summary>
            Specifies not to add extra space for raised or lowered characters.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SuppressSpaceBeforeAfterPageOrBreak">
      <summary>
            Specifies whether to suppress <b>Space Before</b> after a hard page or column break.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.WrapTrailingSpaces">
      <summary>
            Specifies whether to wrap trailing spaces to the next line.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.PrintColorsAsBlack">
      <summary>
            Specifies whether to print colors as black on noncolor printers.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoColumnBalance">
      <summary>
            Specifies not to balance columns for continuous section starts.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.ConvertMailMergeEsc">
      <summary>
            Specifies whether to treat "\ as "" in mail-merge data sources.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SuppressTopSpacing">
      <summary>
            Specifies whether to suppress extra line spacing at the top of a page.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.MacWord5TableBorders">
      <summary>
            Specifies whether to combine table borders as is done in Word 5.x for the Macintosh.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.TransparentMetafiles">
      <summary>
            Specifies not to blank the area behind metafile pictures.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.BreaksInFrames">
      <summary>
            Specifies whether to show hard page or column breaks in frames.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SwapBordersOnOddFacingPages">
      <summary>
            Specifies whether to swap left and right borders on odd facing pages.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.ConvertBackslashIntoYenSign">
      <summary>
            Specifies whether to convert backslash characters into yen signs.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.DontExpandSpacesOnShiftReturnLine">
      <summary>
            Specifies not to expand character spaces on the line ending Shift-Return.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.UnderlineOnTrailingSpaces">
      <summary>
            Specifies whether to draw underline on trailing spaces.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.BalanceSbcsAndDbcsCharacters">
      <summary>
            Specifies whether to balance SBCS characters and DBCS characters.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.MacWord5TopSpacing">
      <summary>
            Specifies whether to suppress extra line spacing at the top of a page as is done in Word 5.x for the Macintosh.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SpacingInWholePoints">
      <summary>
            Specifies whether to perform Expand/Condense by whole number of points.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.PrintBodyBeforeHeaderFooter">
      <summary>
            Specifies whether to print body text before a header or footer.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoLeading">
      <summary>
            Specifies not to add leading (extra space) between rows of text.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.AddSpaceForUnderlines">
      <summary>
            Specifies whether to add space for underlines.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.MacWord5SmallCaps">
      <summary>
            Specifies whether to use larger small caps as is done in Word 5.x for the Macintosh.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.WordPerfect5ExtraLineSpacing">
      <summary>
            Specifies whether to suppress extra line spacing as is done in WordPerfect 5.x.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.TruncateFontHeight">
      <summary>
            Specifies whether to truncate font height.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SubstituteFonts">
      <summary>
            Specifies whether to substitute fonts based on font size.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.Word6LineWrap">
      <summary>
            Specifies whether to wrap lines as is done in Word 6.0.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.OldWordBorderRules">
      <summary>
            Specifies whether to use Word 6.x/95 border rules.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.DontCenterExactLineHeightLines">
      <summary>
            Specifies not to center "exact line height" lines.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SuppressBottomSpacing">
      <summary>
            Specifies whether to suppress extra line spacing at the bottom of a page.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.WordPerfect5SpaceWidth">
      <summary>
            Specifies whether to set the width of a space as is done in WordPerfect 5.x.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.WordPerfect6Justification">
      <summary>
            Specifies whether to do full justification as is done WordPerfect 6.x for Windows.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.PrinterMetrics">
      <summary>
            Specifies whether to use printer metrics to lay out document.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.Word97AutoShapes">
      <summary>
            Specifies whether to lay out AutoShapes as is done in Word 97.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.OldWordFootnotes">
      <summary>
            Specifies whether to lay out footnotes as is done in Word 6.x/95/97.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoHtmlParagraphAutoSpacing">
      <summary>
            Specifies not to use HTML paragraph auto spacing.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.AdjustLineToGridInTable">
      <summary>
            Specifies whether to adjust line height to grid height in the table.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.ForgetLastTabAlignment">
      <summary>
            Specifies whether to forget last tab alignment.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.Word95AutoSpace">
      <summary>
            Specifies whether to use Word 95 style auto space.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.AlignTableRowsIndependently">
      <summary>
            Specifies whether to align table rows independently.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.TablesWithRawWidth">
      <summary>
            Specifies whether to lay out tables with raw width.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.AllowTableRowsLayOutApart">
      <summary>
            Specifies whether to allow table rows to lay out apart.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.Word97LineBreakingRules">
      <summary>
            Specifies whether to use Word 97 line breaking rules for Asian text.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.DontBreakWrappedTables">
      <summary>
            Specifies not to break wrapped tables across pages.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoSnapToGridInsideTablesWithInlines">
      <summary>
            Specifies not to snap text to grid inside table with Inline objects.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.SelectEntireField">
      <summary>
            Specifies whether to select entire field with first or last character.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.LineBreakingRules">
      <summary>
            Specifies whether to use line breaking rules.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoHangingPunctuation">
      <summary>
            Specifies not to allow hanging punctuation with character grid.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.NoAsianRulesForLineBreaks">
      <summary>
            Specifies whether to use Asian rules for line breaks with character grid.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.Word2002TableStyleRules">
      <summary>
            Specifies whether to use Word 2002 table style rules.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.AllowTablesExtendIntoMargins">
      <summary>
            Specifies whether to allow tables to extend into margins.
            </summary>
    </member>
    <member name="P:Aspose.Words.CompatibilityOptions.UICompat97To2003">
      <summary>
        <b>True</b> to disable UI functionality which is not compatible with Word97-2003.
            Default value is <b>false</b>.
            </summary>
    </member>
    <member name="T:Aspose.Layout.NamespaceDoc">
      <summary>
            The Aspose.Layout namespace contains classes of the layout model. These are classes used internally by the Aspose.Editor and Aspose.Words products.
            </summary>
    </member>
    <member name="T:Aspose.Words.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words</b> namespace provides 
            classes for programmatically generating, converting and modifying Microsoft Word documents 
            without utilizing Microsoft Word.</p>
        <p>Aspose.Words is written completely in C#, CLS compliant and contains only safe managed code. Microsoft Word is not required in order to use Aspose.Words.</p>
        <p>The classes in the <b>Aspose.Words</b> namespace
            borrow best practices from two well-known frameworks: Microsoft Word Automation and System.Xml. 
            A document in Aspose.Words is represented by a tree of nodes, much like in XML DOM. 
            Where possible, class, method and property names match those found in Microsoft Word Automation. </p>
        <p>The main classes in this namespace are:</p>
        <list type="bullet">
          <item>
            <see cref="T:Aspose.Words.Document" /> is the main class of the object 
            model that represents a Microsoft Word document.</item>
          <item>
            <see cref="T:Aspose.Words.DocumentBuilder" /> provides an
            easy way to insert content and formatting into a document.</item>
          <item>
            <see cref="T:Aspose.Words.Node" /> is the base class for all nodes
            in the document.</item>
          <item>
            <see cref="T:Aspose.Words.CompositeNode" /> is the base class 
            for all nodes of the document that can contain other nodes, for example
            <see cref="T:Aspose.Words.Paragraph" />,
            <see cref="T:Aspose.Words.Section" /> and
            <see cref="T:Aspose.Words.Tables.Table" />.</item>
        </list>
      </summary>
    </member>
    <member name="T:Aspose.Words.PleaseReportException">
      <summary>
            Thrown when something unexpected is encountered in a document and Aspose.Words cannot process it safely. 
            It is recommended that you report the problem file to the Aspose.Words development team for a fix.
            </summary>
      <remarks>
        <p>Since MS Word file format is not 100% documented, this exception is thrown when 
            we would like you to post the error and the document that caused the exception 
            in the Aspose.Forums (http://www.aspose.com/Forums) for Aspose developers to 
            investigate and fix.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.ParagraphFormat">
      <summary>
            Represents all the formatting for a paragraph.
            </summary>
    </member>
    <member name="M:Aspose.Words.ParagraphFormat.ClearFormatting">
      <summary>
            Resets to default paragraph formatting.
            </summary>
      <remarks>
            Default paragraph formatting is Normal style, left aligned, no indentation,
            no spacing, no borders and no shading.
            </remarks>
    </member>
    <member name="M:Aspose.Words.ParagraphFormat.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.ParagraphFormat.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.ParagraphFormat.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.ParagraphFormat.FetchInheritedShadingAttr(System.Int32)">
      <summary>
            IShadingAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.Alignment">
      <summary>
            Gets or sets text alignment for the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.NoSpaceBetweenParagraphsOfSameStyle">
      <summary>
            When true, <see cref="P:Aspose.Words.ParagraphFormat.SpaceBefore" /> and <see cref="P:Aspose.Words.ParagraphFormat.SpaceAfter" /> will be ignored
            between the paragraphs of the same style.
            </summary>
      <remarks>
        <p>This setting only takes affect when applied to a paragraph style. If applied to
            a paragraph directly, it has no effect.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.KeepTogether">
      <summary>
            True if all lines in the paragraph are to remain on the same page. 
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.KeepWithNext">
      <summary>
            True if the paragraph is to remains on the same page as the paragraph that follows it.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.PageBreakBefore">
      <summary>
            True if a page break is forced before the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.SuppressAutoHyphens">
      <summary>
            Specifies whether the current paragraph should be exempted from any hyphenation which 
            is applied in the document settings.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.WidowControl">
      <summary>
            True if the first and last lines in the paragraph are to remain on the same page as the rest of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.Bidi">
      <summary>
            Gets or sets whether this is a rigt-to-left paragraph.
            </summary>
      <remarks>
        <p>When true, the runs and other inline objects in this paragraph
            are laid out right to left.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.LeftIndent">
      <summary>
            Gets or sets the value (in points) that represents the left indent for paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.RightIndent">
      <summary>
            Gets or sets the value (in points) that represents the right indent for paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.FirstLineIndent">
      <summary>
            Gets or sets the value (in points) for a first line or hanging indent. 
            Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.SpaceBeforeAuto">
      <summary>
            True if the amount of spacing before the paragraph is set automatically.
            </summary>
      <remarks>
        <p>When set to true, overrides the effect of <see cref="P:Aspose.Words.ParagraphFormat.SpaceBefore" />.</p>
      </remarks>
      <remarks>
        <p>When you set paragraph Space Before and Space After to Auto,
Microsoft Word adds 14 points spacing between paragraphs automatically
according to the following rules:</p>
        <list type="bullet">
          <item>Normally, spacing is added after all paragraphs.</item>
          <item>In a bulleted or numbered list, spacing is added only after the last item in the list.
Spacing is not added between the list items.</item>
          <item>In a nested bulleted or numbered list spacing is not added.</item>
          <item>Spacing is normally added after a table.</item>
          <item>Spacing is not added after a table if it is the last block in a table cell.</item>
          <item>Spacing is not added after the last paragraph in a table cell.</item>
        </list>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.SpaceAfterAuto">
      <summary>
            True if the amount of spacing after the paragraph is set automatically.
            </summary>
      <remarks>
        <p>When set to true, overrides the effect of <see cref="P:Aspose.Words.ParagraphFormat.SpaceAfter" />.</p>
      </remarks>
      <remarks>
        <p>When you set paragraph Space Before and Space After to Auto,
Microsoft Word adds 14 points spacing between paragraphs automatically
according to the following rules:</p>
        <list type="bullet">
          <item>Normally, spacing is added after all paragraphs.</item>
          <item>In a bulleted or numbered list, spacing is added only after the last item in the list.
Spacing is not added between the list items.</item>
          <item>In a nested bulleted or numbered list spacing is not added.</item>
          <item>Spacing is normally added after a table.</item>
          <item>Spacing is not added after a table if it is the last block in a table cell.</item>
          <item>Spacing is not added after the last paragraph in a table cell.</item>
        </list>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.SpaceBefore">
      <summary>
            Gets or sets the amount of spacing (in points) before the paragraph.
            </summary>
      <remarks>
        <p>Has no effect when <see cref="P:Aspose.Words.ParagraphFormat.SpaceBeforeAuto" /> is true.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.SpaceAfter">
      <summary>
            Gets or sets the amount of spacing (in points) after the paragraph.
            </summary>
      <remarks>
        <p>Has no effect when <see cref="P:Aspose.Words.ParagraphFormat.SpaceAfterAuto" /> is true.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.LineSpacingRule">
      <summary>
            Gets or sets the line spacing for the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.LineSpacing">
      <summary>
            Gets or sets the line spacing (in points) for the paragraph.
            </summary>
      <remarks>
        <p>When LineSpacingRule property is set to AtLeast, the line spacing can be greater than or equal to, 
            but never less than the specified LineSpacing value.</p>
        <p>When LineSpacingRule propert is set to Exactly, the line spacing never changes from 
            the specified LineSpacing value, even if a larger font is used within the paragraph.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.IsHeading">
      <summary>
            True when the paragraph style is one of the built-in Heading styles.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.IsListItem">
      <summary>
            True when the paragraph is an item in a bulleted or numbered list.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.OutlineLevel">
      <summary>
            Specifies the outline level of the paragraph in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.Shading">
      <summary>
            Returns a Shading object that refers to the shading formatting for the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.Borders">
      <summary>
            Gets collection of borders of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.Style">
      <summary>
            Gets or sets the paragraph style applied to this formatting.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.StyleName">
      <summary>
            Gets or sets the name of the paragraph style applied to this formatting.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.StyleIdentifier">
      <summary>
            Gets or sets the locale independent style identifier of the paragraph style applied to this formatting.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphFormat.TabStops">
      <summary>
            Gets the collection of custom tab stops defined for this object.
            </summary>
    </member>
    <member name="T:Aspose.Words.ListFormat">
      <summary>
            Allows to control what list formatting is applied to a paragraph.
            </summary>
      <remarks>
        <p>A paragraph in a Microsoft Word document can be bulleted or numbered.
            When a paragraph is bulleted or numbered, it is said that list formatting
            is applied to the paragraph.</p>
        <p>You do not create objects of the <see cref="T:Aspose.Words.ListFormat" /> class directly. 
            You access <see cref="T:Aspose.Words.ListFormat" /> as a property of another object that can 
            have list formatting associated with it. At the moment the objects that can
            have list formatting are: <see cref="T:Aspose.Words.Paragraph" />,
            <see cref="T:Aspose.Words.Style" /> and <see cref="T:Aspose.Words.DocumentBuilder" />.</p>
        <p>
          <see cref="T:Aspose.Words.ListFormat" /> of a <see cref="T:Aspose.Words.Paragraph" /> specifies
            what list formatting and list level is applied to that particular paragraph.</p>
        <p>
          <see cref="T:Aspose.Words.ListFormat" /> of a <see cref="T:Aspose.Words.Style" /> (applicable
            to paragraph styles only) allows to specify what list formatting and list level
            is applied to all paragraphs of that particular style.</p>
        <p>
          <see cref="T:Aspose.Words.ListFormat" /> of a <see cref="T:Aspose.Words.DocumentBuilder" />
            provides access to the list formatting at the current cursor position
            inside the <see cref="T:Aspose.Words.DocumentBuilder" />.</p>
        <p>The list formatting itself is stored inside a <see cref="T:Aspose.Words.Lists.List" />
            object that is stored separately from the paragraphs. The list objects
            are stored inside a <see cref="T:Aspose.Words.Lists.ListCollection" /> collection. There is a single 
            <see cref="T:Aspose.Words.Lists.ListCollection" /> collection per <see cref="T:Aspose.Words.Document" />.</p>
        <p>The paragraphs do not physically belong to a list. The paragraphs just
            reference a particular list object via the <see cref="P:Aspose.Words.ListFormat.List" /> property
            and a particular level in the list via the <see cref="P:Aspose.Words.ListFormat.ListLevelNumber" /> property.
            By setting these two properties you control what bullets and numbering is
            applied to a paragraph.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.ListFormat.ApplyBulletDefault">
      <summary>
            Starts a new default bulleted list and applies it to the paragraph.
            </summary>
      <remarks>
        <p>This is a shorctut method that creates a new list using the default bulleted
            template, applies it to the paragraph and selects the 1st list level.</p>
        <seealso cref="P:Aspose.Words.ListFormat.List" />
        <seealso cref="M:Aspose.Words.ListFormat.RemoveNumbers" />
        <seealso cref="P:Aspose.Words.ListFormat.ListLevelNumber" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.ListFormat.ApplyNumberDefault">
      <summary>
            Starts a new default numbered list and applies it to the paragraph.
            </summary>
      <remarks>
        <p>This is a shorctut method that creates a new list using the default numbered
            template, applies it to the paragraph and selects the 1st list level.</p>
        <seealso cref="P:Aspose.Words.ListFormat.List" />
        <seealso cref="M:Aspose.Words.ListFormat.RemoveNumbers" />
        <seealso cref="P:Aspose.Words.ListFormat.ListLevelNumber" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.ListFormat.RemoveNumbers">
      <summary>
            Removes numbers or bullets from the current paragraph and sets list level to zero.
            </summary>
      <remarks>
        <p>Calling this method is equivalent to setting the <see cref="P:Aspose.Words.ListFormat.List" /> property to null.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.ListFormat.ListIndent">
      <summary>
            Increases the list level of the current paragraph by one level.
            </summary>
      <remarks>
        <p>This method changes the list level and applies formatting properties of the new level.</p>
        <p>In Word documents, lists may consist of up to nine levels. List formatting 
            for each level specifies what bullet or number is used, left indent, space between 
            the bullet and text etc.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.ListFormat.ListOutdent">
      <summary>
            Decreases the list level of the current paragraph by one level.
            </summary>
      <remarks>
        <p>This method changes the list level and applies formatting properties of the new level.</p>
        <p>In Word documents, lists may consist of up to nine levels. List formatting 
            for each level specifies what bullet or number is used, left indent, space between 
            the bullet and text etc.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.ListFormat.ListLevelNumber">
      <summary>
            Gets or sets the list level number (0 to 8) for the paragraph.
            </summary>
      <remarks>
        <p>In Word documents, lists may consist of 1 or 9 levels, numbered 0 to 8.</p>
        <p>Has effect only when the <see cref="P:Aspose.Words.ListFormat.List" /> property is set to reference a valid list.</p>
        <seealso cref="P:Aspose.Words.ListFormat.List" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.ListFormat.IsListItem">
      <summary>
            True when the paragraph has bulleted or numbered formatting applied to it.
            </summary>
    </member>
    <member name="P:Aspose.Words.ListFormat.List">
      <summary>
            Gets or sets the list this paragraph is a member of.
            </summary>
      <remarks>
        <p>The list that is being assigned to this property must belong to the current document.</p>
        <p>The list that is being assigned to this property must not be a list style definition.</p>
        <p>Setting this property to null removes bullets and numbering from the paragraph
            and sets the list level number to zero. Setting this property to null is equivalent 
            to calling <see cref="M:Aspose.Words.ListFormat.RemoveNumbers" />.</p>
        <seealso cref="P:Aspose.Words.ListFormat.ListLevelNumber" />
        <seealso cref="M:Aspose.Words.ListFormat.RemoveNumbers" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.ListFormat.ListLevel">
      <summary>
            Returns the list level object applied to the current paragraph.
            </summary>
    </member>
    <member name="T:Aspose.Words.NodeChangedEventArgs">
      <summary>
            Provides data for the <see cref="E:Aspose.Words.Document.NodeInserted" />, <see cref="E:Aspose.Words.Document.NodeInserting" />,
            <see cref="E:Aspose.Words.Document.NodeRemoved" /> and <see cref="E:Aspose.Words.Document.NodeRemoving" /> events.
            <seealso cref="T:Aspose.Words.Document" /><seealso cref="T:Aspose.Words.NodeChangedEventHandler" /><seealso cref="T:Aspose.Words.NodeChangedAction" /></summary>
    </member>
    <member name="P:Aspose.Words.NodeChangedEventArgs.Node">
      <summary>
            Gets the <see cref="P:Aspose.Words.NodeChangedEventArgs.Node" /> that is being added or removed.
            </summary>
    </member>
    <member name="P:Aspose.Words.NodeChangedEventArgs.OldParent">
      <summary>
            Gets the node's parent before the operation began.
            </summary>
    </member>
    <member name="P:Aspose.Words.NodeChangedEventArgs.NewParent">
      <summary>
            Gets the node's parent that will be set after the operation completes.
            </summary>
    </member>
    <member name="P:Aspose.Words.NodeChangedEventArgs.Action">
      <summary>
            Gets a value indicating what type of node change event is occurring.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ShapeLineStyle">
      <summary>
            Specifies the compound line style of a <see cref="T:Aspose.Words.Drawing.Shape" />.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.LineStyle" />
      </remarks>
      <dev>
            This enum name violates the rule "enum name equals property name", but I have to avoid
            collision between Aspose.Words.LineStyle and this line style because otherwise it will
            be too hard to port to Java as all types are in the same namespace in Java.
            </dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeLineStyle.Single">
      <summary>
            Single line.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeLineStyle.Double">
      <summary>
            Double lines of equal width.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeLineStyle.ThickThin">
      <summary>
            Double lines, one thick, one thin.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeLineStyle.ThinThick">
      <summary>
            Double lines, one thin, one thick.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeLineStyle.Triple">
      <summary>
            Three lines, thin, thick, thin.
            </summary>
    </member>
    <member name="T:Aspose.Words.ViewType">
      <summary>
            Possible values for the view mode in Microsoft Word.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.ViewOptions" />
        <seealso cref="P:Aspose.Words.ViewOptions.ViewType" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.ViewType.None">
      <summary>
            The document shall be rendered in the default view of the application.
            </summary>
    </member>
    <member name="F:Aspose.Words.ViewType.Normal">
      <summary>
            The document shall be rendered in a view optimized for outlining or creating long documents.
            </summary>
    </member>
    <member name="F:Aspose.Words.ViewType.Outline">
      <summary>
            The document shall be rendered in a view optimized for outlining or creating long documents.
            </summary>
    </member>
    <member name="F:Aspose.Words.ViewType.PageLayout">
      <summary>
            The document shall be opened in a view that displays the document as it will print.
            </summary>
    </member>
    <member name="F:Aspose.Words.ViewType.Web">
      <summary>
            The document shall be rendered in a view mimicking the way this document would be displayed 
            in a web page.
            </summary>
    </member>
    <member name="T:Aspose.Words.VariableCollection">
      <summary>
            A collection of document variables.
            </summary>
      <remarks>
        <p>Variable names and values are strings.</p>
        <p>Variable names are case-insensitive.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.VariableCollection.GetEnumerator">
      <summary>
            Returns a dictionary enumerator object that can be used to iterate over all items in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Words.VariableCollection.Add(System.String,System.String)">
      <summary>
            Adds a document variable to the collection.
            </summary>
      <param name="name">The case-insensitive name of the variable to add.</param>
      <param name="value">The value of the variable.</param>
    </member>
    <member name="M:Aspose.Words.VariableCollection.Contains(System.String)">
      <summary>
            Determines whether the collection contains a document variable with the given name.
            </summary>
      <param name="name">Case-insensitive name of the document variable to locate.</param>
      <returns>True if item is found in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Words.VariableCollection.IndexOfKey(System.String)">
      <summary>
            Returns the zero-based index of the specified document variable in the collection.
            </summary>
      <param name="name">The case-insensitive name of the variable.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Words.VariableCollection.Remove(System.String)">
      <summary>
            Removes a document variable with the specified name from the collection.
            </summary>
      <param name="name">The case-insensitive name of the variable.</param>
    </member>
    <member name="M:Aspose.Words.VariableCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a document variable at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Words.VariableCollection.Clear">
      <summary>
            Removes all elements from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.VariableCollection.Count">
      <summary>
            Gets the number of elements contained in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.VariableCollection.Item(System.String)">
      <overloads>Provides access to the collection items.</overloads>
      <summary>
            Gets or a sets a document variable by the case-insensitive name.
            </summary>
    </member>
    <member name="P:Aspose.Words.VariableCollection.Item(System.Int32)">
      <summary>
            Gets or sets a document variable at the specified index.
            </summary>
      <param name="index">Zero-based index of the document variable.</param>
    </member>
    <member name="T:Aspose.Words.SaveOptions">
      <summary>
            Provides various options that control how a document is saved.
            </summary>
      <remarks>
        <p>The <see cref="T:Aspose.Words.SaveOptions" /> objectis a set of options that allow you to control how Aspose.Words
            saves a <see cref="T:Aspose.Words.Document" />. <see cref="T:Aspose.Words.SaveOptions" /> is not persisted with the <see cref="T:Aspose.Words.Document" />.</p>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.ExportPrettyFormat">
      <summary>
            When true, pretty formats output where possible (HTML, WordML, RTF, DOCX, ODT). 
            Default value is <b>false</b>.
            </summary>
      <remarks>
        <p>Set to <b>true</b> to make HTML, WordML, RTF, DOCX and ODT output human readable.
            Useful for testing or debugging.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.ExportImagesFolder">
      <summary>
            Specifies the physical folder where the images will be saved when exporting a document to a <b>Stream</b>.
            Default is an empty string.
            </summary>
      <remarks>
        <p>Note, this property has effect only when saving to a <b>Stream</b> in HTML or Aspose.Pdf.Xml format.</p>
        <p>When you save a <see cref="T:Aspose.Words.Document" /> in HTML or Aspose.Pdf.Xml format,
            Aspose.Words needs to save all images embedded in the document as standalone files.
            If you save the document into a file and provide a file name, Aspose.Words saves the 
            embedded images in the same folder where the document file is saved.</p>
        <p>However, if you save the document into a stream, Aspose.Words does not have a folder 
            where to save the images, but still needs to save the embedded images somewhere as files. 
            In this case, <see cref="P:Aspose.Words.SaveOptions.ExportImagesFolder" /> allows you to specify where the 
            images will be saved and <see cref="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias" /> allows to specify how 
            the image URI written into the file will be constructed.</p>
        <p>If <see cref="P:Aspose.Words.SaveOptions.ExportImagesFolder" /> is an empty string, the images will be saved 
            into a temporary folder provided by the operating system.</p>
        <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias">
      <summary>
            Specifies the name of the folder used to construct image URIs written into the exported document. 
            Default is an empty string.
            </summary>
      <remarks>
        <p>Note, this property has effect only when saving into a <b>Stream</b> in HTML format.</p>
        <p>When you save a <see cref="T:Aspose.Words.Document" /> in HTML format,
            Aspose.Words needs to save all images embedded in the document as standalone files.
            If you save the document into a file and provide a file name, Aspose.Words saves the 
            embedded images in the same folder where the document file is saved.</p>
        <p>However, if you save the document into a stream, Aspose.Words does not have a folder 
            where to save the images, but still needs to save the embedded images somewhere as files. 
            In this case, <see cref="P:Aspose.Words.SaveOptions.ExportImagesFolder" /> allows you to specify where the 
            images will be saved and <see cref="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias" /> allows to specify how 
            the image URI written into the file will be constructed.</p>
        <p>Aspose.Words automatically generates a unique file name for every embedded image
            when exporting into HTML format. The image file name looks like
            <i>Aspose.Words.&lt;document guid&gt;.&lt;image number&gt;.&lt;extension&gt;</i>.</p>
        <p>If <see cref="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias" /> is not an empty string, then the full image URI is
            constructed as <i>HtmlExportImagesFolderAlias + UniqueImageFileName</i>.</p>
        <p>If <see cref="P:Aspose.Words.SaveOptions.HtmlExportImagesFolderAlias" /> is an empty string, then the image URI is
            constructed as <i>ExportImagesFolder + UniqueImageFileName</i>.</p>
        <seealso cref="P:Aspose.Words.SaveOptions.ExportImagesFolder" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportCssStyleSheetFileName">
      <summary>
            Specifies the name of the Cascading Style Sheet (CSS) file written with the exported document. 
            Default is an empty string.
            </summary>
      <remarks>
        <p>Note, this property has effect only when saving a <see cref="T:Aspose.Words.Document" /> in HTML format 
            and external CSS style sheet is requested using <see cref="P:Aspose.Words.SaveOptions.HtmlExportCssStyleSheetType" />.</p>
        <para>If you don't specify a value for this property, then the style sheet file will 
            have the same name as the HTML document name, but with a ".css" extension.</para>
        <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportCssStyleSheetType" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportTextInputFormFieldAsText">
      <summary>
            Specifies how to export Word text input form fields into HTML. 
            Default value is <b>false</b>.
            </summary>
      <remarks>
        <p>When <b>false</b>, exports Word text input form fields as INPUT elements in HTML.
            When set to <b>true</b>, exports text input form fields as normal text.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportHeadersFooters">
      <summary>
            Specifies whether to output headers and footers to HTML. 
            Default value is <b>true</b>.
            </summary>
      <remarks>
        <p>It is hard to meaningfully output headers and footers to HTML because HTML is not paginated. 
            When this property is <b>true</b>, Aspose.Words exports only primary headers and footers at the 
            beginning and end of each section. You can disable export of headers and footers altogether
            by setting this property to <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportAllowNegativeLeftIndent">
      <summary>
            Specifies whether negative left indent of paragraphs is normalized when exporting to HTML. 
            Default value is <b>false</b>.
            </summary>
      <remarks>
        <p>When negative left indent is not allowed, it is exported as zero left margin to HTML.
            When negative left indent is allowed, a paragraph might appear partially outside of the
            browser window.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportXhtmlTransitional">
      <summary>
            When true, writes a DOCTYPE declaration in the document prior to the root element. 
            Default value is <b>false</b>.
            </summary>
      <remarks>
        <p>
          <b>Aspose.Words</b> always writes well formed HTML regardless of this setting.</p>
        <p>When <b>true</b>, the beginning of the HTML output document will look like this:</p>
        <code>
            &lt;?xml version="1.0" encoding="utf-8" standalone="no" ?&gt;
            &lt;!DOCTYPE html 
            	  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
            &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
            </code>
        <p>
          <b>Aspose.Words</b> aims to output XHTML according to the XHTML 1.0 Transitional specification, 
            but the output will not always validate against the DTD. Some structures inside a Microsoft Word 
            document are hard or impossible to map to a document that will validate against the XHTML schema. 
            For example, XHTML does not allow nested lists (UL cannot be nested inside another UL element), 
            but in Microsoft Word document multilevel lists occur quite often.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportDocumentProperties">
      <summary>
            Specifies whether to export built-in and custom document properties to HTML. 
            Default value is <b>false</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportMetafileAsRaster">
      <summary>
            Specifies whether to convert metafiles into raster images when exporting to HTML.
            Default value is <b>true</b>.
            </summary>
      <remarks>
        <p>Metafiles are not natively displayed by HTML browsers. By default, Aspose.Words converts WMF and EMF 
            images into PNG files when exporting to HTML. Setting this property to <b>false</b> causes metafiles 
            to be exported to HTML without conversion.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportImageResolution" />
      <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize">
      <summary>
            Specifies whether images are scaled by Aspose.Words to the bounding shape size when exporting to HTML. 
            Default value is <b>true</b>.
            </summary>
      <remarks>
        <p>An image in a Microsoft Word document is a shape. The shape has a size and the image
            has its own size. The sizes are not directly linked. For example, the image can be 1024x786 pixels, 
            but shape that displays this image can be 400x300 points.</p>
        <p>In order to display an image in the browser, it must be scaled to the shape size.
            The <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> property controls where the scaling of the image
            takes place: in Aspose.Words during export to HTML or in the browser when displaying the document.</p>
        <p>When <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> is <b>true</b>, the image is scaled by Aspose.Words
            using high quality scaling during export to HTML. When <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> 
            is <b>false</b>, the image is output with its original size and the browser has to scale it.</p>
        <p>In general, browsers do quick and poor quality scaling. As a result, you will normally get better 
            display quality in the browser and smaller file size when <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> is <b>true</b>, 
            but better printing quality and faster conversion when <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> is <b>false</b>.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportImageResolution" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportImageResolution">
      <summary>
            Specifies the output resolution for images when exporting to HTML. 
            Default is 96 dpi.
            </summary>
      <remarks>
        <para>This property has effect for raster images only when <see cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" /> 
            is <b>true</b> and it has effect for metafiles only when <see cref="P:Aspose.Words.SaveOptions.HtmlExportMetafileAsRaster" /> 
            is <b>true</b>.</para>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportScaleImageToShapeSize" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportMetafileResolution">
      <summary>
            Specifies the resolution at which metafiles are converted to raster images when exporting to HTML. 
            Default is 96 dpi.
            </summary>
      <remarks>
        <p>Metafiles are not natively displayed by browsers and therefore Aspose.Words converts
            WMF and EMF images into PNG files when exporting to HTML. This setting specifies the 
            resolution of the created PNG files. If the HTML file is intended to be viewed on the 
            screen, the default setting will produce images of adequate quality and small size.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportCssStyleSheetType">
      <summary>
            Specifies how CSS (Cascading Style Sheet) styles are exported to HTML.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.CssStyleSheetType.Inline" />.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.HtmlExportCssStyleSheetFileName" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.HtmlExportEncoding">
      <summary>
            Specifies the encoding to use when exporting in HTML format.
            Default value is <b>Encoding.UTF8</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportBookmarkLevel">
      <summary>
            Specifies whether bookmarks for heading paragraphs are created in a PDF file when exporting to PDF.
            </summary>
      <remarks>
        <p>PDF bookmarks, if used, are visible in the Bookmarks pane in the PDF viewer.
            PDF bookmarks allow quick navigation to specific places in a document.</p>
        <p>By default, <b>PdfExportBookmarkLevel</b> is zero and PDF bookmarks are not created.</p>
        <p>You can set <b>PdfExportBookmarkLevel</b> to a value from 1 to 9 to request
            PDF bookmarks created for paragraphs marked with styles Heading 1 to Heading 9 respectively.</p>
        <p>For example, if you set <b>PdfExportBookmarkLevel</b> to 3, then all paragraphs with
            styles Heading 1, Heading 2 and Heading 3 will be marked as PDF bookmarks.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportFormFieldsAsText">
      <summary>
            Specifies how to export Word form fields into PDF. 
            Default value is <b>true</b>.
            </summary>
      <remarks>
        <p>True to export Word form fields as normal text; false to export form fields as 
            Adobe Acrobat Form Fields.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportCheckBoxFontName">
      <summary>
            Specifies the font to simulate check box form fields in PDF. 
            Default value is <b>"Wingdings"</b>.
            </summary>
      <remarks>
        <p>When <see cref="P:Aspose.Words.SaveOptions.PdfExportFormFieldsAsText" /> is set to true form fields are exported to 
            PDF as normal text. In Microsoft Word and Adobe Acrobat native check boxes look differently: 
            crosses and ticks respectively. By default check box marks are simulated as ticks. 
            You can change simulation options, in particular to make check boxes look as they appear 
            in Microsoft Word document.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxEmptySign" />
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxSelectedSign" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportCheckBoxEmptySign">
      <summary>
            Specifies the symbol to simulate unselected check box form fields in PDF. 
            Default value is <b>'\xa8'</b>.
            </summary>
      <remarks>
        <p>When <see cref="P:Aspose.Words.SaveOptions.PdfExportFormFieldsAsText" /> is set to true form fields are exported to 
            PDF as normal text. In Microsoft Word and Adobe Acrobat native check boxes look differently: 
            crosses and ticks respectively. By default check box marks are simulated as ticks. 
            You can change simulation options, in particular to make check boxes look as they appear 
            in Microsoft Word document.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxFontName" />
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxSelectedSign" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportCheckBoxSelectedSign">
      <summary>
            Specifies the symbol to simulate selected check box form fields in PDF. 
            Default value is <b>'\xfe'</b>.
            </summary>
      <remarks>
        <p>When <see cref="P:Aspose.Words.SaveOptions.PdfExportFormFieldsAsText" /> is set to true form fields are exported to 
            PDF as normal text. In Microsoft Word and Adobe Acrobat native check boxes look differently: 
            crosses and ticks respectively. By default check box marks are simulated as ticks. 
            You can change simulation options, in particular to make check boxes look as they appear 
            in Microsoft Word document.</p>
      </remarks>
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxFontName" />
      <seealso cref="P:Aspose.Words.SaveOptions.PdfExportCheckBoxEmptySign" />
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportMetafileResolution">
      <summary>
            Specifies resolution at which metafiles are converted to raster images when exporting to PDF. 
            Default is 300 dpi.
            </summary>
      <remarks>
        <p>Aspose.Pdf converts metafiles to raster images when creating a PDF file. This setting
            specifies the resolution of the created raster images. Higher resolution will result
            in higher quality image when printing the PDF file or viewing at high zoom value,
            but it will also result in bigger PDF file size.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.PdfExportFloatingTables">
      <summary>
            Specifies whether absolutely positioned tables are output as floating objects to PDF. 
            Default is <b>false</b>.
            </summary>
      <remarks>
        <p>Tables in Microsoft Word can be absolutely positioned. They should be normally output as floating 
            objects to PDF but this conflicts with a functional restriction in Aspose.Pdf: it doesn't support 
            text wrapping around floating objects. As in most cases output looks better without floating tables 
            this feature is turned off by default.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.TxtExportHeadersFooters">
      <summary>
            Specifies whether to output headers and footers when exporting in plain text format. 
            Default value is <b>true</b>.
            </summary>
      <remarks>
        <p>It is hard to meaningfully output headers and footers to plain text because it is not paginated. 
            When this property is <b>true</b>, Aspose.Words exports only primary headers and footers at the 
            beginning and end of each section. You can disable export of headers and footers altogether
            by setting this property to <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.TxtExportEncoding">
      <summary>
            Specifies the encoding to use when exporting in plain text format. 
            Default value is <b>Encoding.UTF8</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.SaveOptions.TxtExportParagraphBreak">
      <summary>
            Specifies the string to use as a paragraph break when exporting in plain text format.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.ControlChar.CrLf" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.SaveOptions.TxtExportTableLayout">
      <summary>
            Specifies whether tables should preserve layout when exporting in plain text format.
            </summary>
      <remarks>
        <p>The default value is false.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.DocumentBuilder">
      <summary>
            Provides methods to insert text, images and other content, specify font, paragraph and section formatting.
            </summary>
      <remarks>
        <p>
          <b>DocumentBuilder</b> makes the process of building a <b>Document</b> easier.
            <b>Document</b> is a composite object consisting of a tree of nodes and while inserting content
            nodes directly into the tree is possible, it requires good understanding of the tree structure.
            <b>DocumentBuilder</b> is a "facade" for the complex structure of <b>Document</b> and allows
            to insert content and formatting quickly and easily.</p>
        <p>Create a <b>DocumentBuilder</b> and associate it with a <see cref="P:Aspose.Words.DocumentBuilder.Document" />.</p>
        <p>The <b>DocumentBuilder</b> has an internal cursor where the text will be inserted
            when you call <see cref="M:Aspose.Words.DocumentBuilder.Write(System.String)" />, <see cref="M:Aspose.Words.DocumentBuilder.Writeln(System.String)" />, <see cref="M:Aspose.Words.DocumentBuilder.InsertBreak(Aspose.Words.BreakType)" /> 
            and other methods. You can navigate the <b>DocumentBuilder</b> cursor to a different location 
            in a document using various MoveToXXX methods.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.Font" /> property to specify character formatting that will apply to
            all text inserted from the current position in the document onwards.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.ParagraphFormat" /> property to specify paragraph formatting for the current
            and all paragraphs that will be inserted.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.PageSetup" /> property to specify page and section properties for the current
            section and all section that will be inserted.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.CellFormat" /> and <see cref="P:Aspose.Words.DocumentBuilder.RowFormat" /> properties to specify
            formatting properties for table cells and rows. User the <see cref="M:Aspose.Words.DocumentBuilder.InsertCell" /> and
            <see cref="M:Aspose.Words.DocumentBuilder.EndRow" /> methods to build a table.</p>
        <p>Note that <b>Font</b>, <b>ParagraphFormat</b> and <b>PageSetup</b> properties are updated whenever 
            you navigate to a different place in the document to reflect formatting properties available at the new location.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <remarks>
            Creates a new <b>DocumentBuilder</b> object and attaches it to a new <see cref="P:Aspose.Words.DocumentBuilder.Document" /> object.
            </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <remarks>
            Creates a new <b>DocumentBuilder</b> object, attaches to the specified <see cref="P:Aspose.Words.DocumentBuilder.Document" /> object.
            The cursor is positioned at the beginning of the document.
            </remarks>
      <param name="doc">The Document object to attach to.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToDocumentStart">
      <summary>
            Moves the cursor to the beginning of the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToDocumentEnd">
      <summary>
            Moves the cursor to the end of the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToSection(System.Int32)">
      <summary>
            Moves the cursor to the beginning of the body in a specified section.
            </summary>
      <remarks>
        <p>When sectionIndex is greater than or equal to 0, it specifies an index from 
            the beginning of the document with 0 being the first section. When sectionIndex is less than 0, 
            it specified an index from the end of the document with -1 being the last section.</p>
        <p>The cursor is moved to the first paragraph in the <b>Body</b> of the specified section.</p>
      </remarks>
      <param name="sectionIndex">The index of the section to move to.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToHeaderFooter(Aspose.Words.HeaderFooterType)">
      <summary>
            Moves the cursor to the beginning of a header or footer in the current section.
            </summary>
      <remarks>
        <p>After you moved the cursor into a header or footer, you can use the rest of DocumentBuilder
            methods to modify the contents of the header or footer.</p>
        <p>If you want to create headers and footers different for the first page, you need
            to set <see cref="P:Aspose.Words.PageSetup.DifferentFirstPageHeaderFooter" />.</p>
        <p>If you want to create headers and footers different for even and odd pages, you need
            to set <see cref="P:Aspose.Words.PageSetup.OddAndEvenPagesHeaderFooter" />.</p>
        <p>Use <see cref="M:Aspose.Words.DocumentBuilder.MoveToSection(System.Int32)" /> to move out of the header into the main text.</p>
      </remarks>
      <param name="headerFooterType">Specifies the header or footer to move to.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToMergeField(System.String)">
      <summary>
            Moves the cursor to a position just beyond the specified merge field and removes the merge field.
            </summary>
      <remarks>
        <p>Note that moving cursor to a merge field deletes the merge field from the document.</p>
        <p>The comparison is not case-sensitive. If the merge field was not found, false is returned
            and the cursor is not moved.</p>
      </remarks>
      <param name="fieldName">The name of the mail merge field you want to move the cursor to.</param>
      <returns>True if the merge field was found; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToField(Aspose.Words.Fields.Field,System.Boolean)">
      <summary>
            Moves the cursor to a field in the document.
            </summary>
      <param name="field">The field to move the cursor to.</param>
      <param name="isAfter">When true, moves the cursor to be after the field end. 
            When false, moves the cursor to be before the field start. </param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToBookmark(System.String)">
      <summary>
            Moves the cursor to a bookmark.
            </summary>
      <remarks>
        <p>Moves the cursor to a position just after the start of the bookmark with the 
            specified name.</p>
        <p>The comparison is not case-sensitive. If the bookmark was not found, false is
            returned and the cursor is not moved.</p>
        <p>Inserting new text does not replace existing text of the bookmark.</p>
        <p>Note that some bookmarks in the document are assigned to form fields.
            Moving to such a bookmark and inserting text there inserts the text into the
            form field code. Although this will not invalidate the form field, the inserted
            text will not be visible because it becomes part of the field code.</p>
      </remarks>
      <param name="bookmarkName">The name of the bookmark to move the cursor to.</param>
      <returns>True if the bookmark was found; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToBookmark(System.String,System.Boolean,System.Boolean)">
      <summary>
            Moves the cursor to a bookmark with greater precision.
            </summary>
      <remarks>
        <p>Moves the cursor to a position before or after the bookmark start or end.</p>
        <p>The comparison is not case-sensitive. If the bookmark was not found, false is
            returned and the cursor is not moved.</p>
      </remarks>
      <param name="bookmarkName">The name of the bookmark to move the cursor to.</param>
      <param name="isStart">When true, moves the cursor to the beginning of the bookmark.
            When false, moves the cursor to the end of the bookmark.</param>
      <param name="isAfter">When true, moves the cursor to be after the bookmark
            start or end position. When false, moves the cursor to be before the bookmark
            start or end position.</param>
      <returns>True if the bookmark was found; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToParagraph(System.Int32,System.Int32)">
      <summary>
            Moves the cursor to a paragraph in the current section.
            </summary>
      <remarks>
        <p>The navigation is performed inside the current story of the current section.
            That is, if you moved the cursor to the primary header of the first section,
            then paragraphIndex specified the index of the paragraph inside that header
            of that section.</p>
        <p>When paragraphIndex is greater than or equal to 0, it specifies an index from 
            the beginning of the section with 0 being the first paragraph. When paragraphIndex is less than 0, 
            it specified an index from the end of the section with -1 being the last paragraph.</p>
      </remarks>
      <param name="paragraphIndex">The index of the paragraph to move to.</param>
      <param name="characterIndex">The index of the character inside the paragraph.
            Currently can only specify 0 to move to the beginning of the paragraph or -1 to
            move to the end of the paragraph.
            </param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveToCell(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the cursor to a table cell in the current section.
            </summary>
      <remarks>
        <p>The navigation is performed inside the current story of the current section.</p>
        <p>For the index parameters, when index is greater than or equal to 0, it specifies an index from 
            the beginning with 0 being the first element. When index is less than 0, it specified an index from 
            the end with -1 being the last element.</p>
      </remarks>
      <param name="tableIndex">The index of the table to move to.</param>
      <param name="rowIndex">The index of the row in the table.</param>
      <param name="columnIndex">The index of the column in the table.</param>
      <param name="characterIndex">The index of the character inside the cell.
            Currently can only specify 0 to move to the beginning of the cell or -1 to
            move to the end of the cell.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveTo(Aspose.Words.Paragraph,Aspose.Words.Node)">
      <summary>
            If inline node is not null, moves to it, otherwise moves to the paragraph node.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.MoveTo(Aspose.Words.Node)">
      <summary>
            Moves the cursor to an inline node or to the end of a paragraph.
            </summary>
      <remarks>
        <p>When <i>node</i> is an inline-level node, the cursor is moved to this node
            and further content will be inserted before that node.</p>
        <p>When <i>node</i> is a <b>Paragraph</b>, the cursor is moved to the end of the paragraph
            and further content will be inserted just before the paragraph break.</p>
      </remarks>
      <param name="node">The node must be a paragraph or a direct child of a paragraph.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.DeleteRow(System.Int32,System.Int32)">
      <summary>
            Deletes a row from a table.
            </summary>
      <remarks>
        <p>If the cursor is inside the row that is being deleted, the cursor is moved
            out to the next row or to the next paragraph after the table.</p>
        <p>If you delete a row from a table that contains only one row, the whole 
            table is deleted.</p>
        <p>For the index parameters, when index is greater than or equal to 0, it specifies an index from 
            the beginning with 0 being the first element. When index is less than 0, it specified an index from 
            the end with -1 being the last element.</p>
      </remarks>
      <param name="tableIndex">The index of the table.</param>
      <param name="rowIndex">The index of the row in the table.</param>
      <returns>The row node that was just removed.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.Write(System.String)">
      <summary>
            Inserts a string into the document at the current insert position.
            </summary>
      <remarks>
            Current font formatting specified by the <see cref="P:Aspose.Words.DocumentBuilder.Font" /> property is used.
            </remarks>
      <param name="text">The string to insert into the document.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.Writeln(System.String)">
      <summary>
            Inserts a string and a paragraph break into the document.
            </summary>
      <remarks>
            Current font and paragraph formatting specified by the <see cref="P:Aspose.Words.DocumentBuilder.Font" /> and <see cref="P:Aspose.Words.DocumentBuilder.ParagraphFormat" /> properties are used.
            </remarks>
      <param name="text">The string to insert into the document.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.Writeln">
      <summary>
            Inserts a paragraph break into the document.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentBuilder.InsertParagraph" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertParagraph">
      <summary>
            Inserts a paragraph break into the document.
            </summary>
      <remarks>
        <p>Current paragraph formatting specified by the <see cref="P:Aspose.Words.DocumentBuilder.ParagraphFormat" /> property is used.</p>
        <p>Breaks the current paragraph in two. After inserting the paragraph, the cursor is placed at the beginning of the new paragraph.</p>
      </remarks>
      <returns>The paragraph node that was just inserted. It is the same node as <see cref="P:Aspose.Words.DocumentBuilder.CurrentParagraph" />.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertBreak(Aspose.Words.BreakType)">
      <summary>
            Inserts a break of the specified type into the document.
            </summary>
      <remarks>
            Use this method to insert paragraph, page, column, section or line break into the document.
            </remarks>
      <param name="breakType">Specifies the type of the break to insert.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertTableOfContents(System.String)">
      <summary>
            Inserts a TOC (table of contents) field into the document.
            </summary>
      <remarks>
        <p>This method inserts a TOC (table of contents) field into the document at 
            the current position.</p>
        <p>A table of contents in a Word document can be built in a number of ways
            and formatted using a variety of options. The way the table is built and 
            displayed by Microsoft Word is controlled by the field switches.</p>
        <p>The easiest way to specify the switches is to insert and configure a table of 
            contents into a Word document using the Insert-&gt;Reference-&gt;Index and Tables menu,
            then switch display of field codes on to see the switches. You can press Alt+F9 in 
            Microsoft Word to toggle display of field codes on or off.</p>
        <p>For example, after creating a table of contents, the following field is inserted
            into the document: <b>{ TOC \o "1-3" \h \z \u }</b>.
            You can copy <b>\o "1-3" \h \z \u</b> and use it as the switches parameter.</p>
        <p>Note that <b>InsertTableOfContents</b> will only insert a TOC field, but 
            will not actually build the table of contents. The table of contents is built by
            Microsoft Word when the field is updated.</p>
        <p>If you insert a table of contents using this method and then open the file 
            in Microsoft Word, you will not see the table of contents because the TOC field
            has not yet been updated.</p>
        <p>In Microsoft Word, fields are not automatically updated when a document is opened,
            but you can update fields in a document at any time by pressing F9.</p>
      </remarks>
      <param name="switches">The TOC field switches.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)">
      <summary>
            Inserts a Word field into the document.
            </summary>
      <remarks>
        <p>Fields in MS Word documents consist of a field code and a field result.
            The field code is like a formula and the field result is like the value that
            the formula produces. The field code may also contain field switches 
            that are like additional instructions to perform a specific action.</p>
        <p>You can switch between displaying field codes and results in your document in 
            MS Word using the keyboard shortcut Alt+F9. Field codes appear between curly braces ( { } ).</p>
        <p>To create fields using <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" />, you need to specify a field type,
            field code and field value. If you are not sure about particular field code
            syntax, create the field in MS Word first and switch to see its field code.</p>
      </remarks>
      <param name="fieldCode">Field code to insert (without curly braces).</param>
      <param name="fieldValue">Field value to insert. Pass null for fields that do not have a value.</param>
      <returns>A <see cref="T:Aspose.Words.Fields.FieldStart" /> node that represents
            the beginning of the inserted field.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertHyperlink(System.String,System.String,System.Boolean)">
      <summary>
            Inserts a hyperlink into the document.
            </summary>
      <remarks>
        <p>Note that you need to specify font formatting for the hyperlink display text explicitly
            using the <see cref="P:Aspose.Words.DocumentBuilder.Font" /> property.</p>
        <p>This methods internally calls <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" /> to insert an MS Word HYPERLINK field
            into the document.</p>
      </remarks>
      <param name="displayText">Text of the link to be displayed in the document.</param>
      <param name="urlOrBookmark">Link destination. Can be a url or a name of a bookmark inside the document.
            This method always adds apostrophes at the beginning and end of the url.</param>
      <param name="isBookmark">True if the previous parameter is a name of a bookmark inside the document;
            false is the previous parameter is a URL.</param>
      <returns>A <see cref="T:Aspose.Words.Fields.FieldStart" /> node that represents the beginning of the inserted field.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertTextInput(System.String,Aspose.Words.Fields.TextFormFieldType,System.String,System.String,System.Int32)">
      <summary>
            Inserts a text form field at the current position.
            </summary>
      <remarks>
        <p>If you specify a name for the form field, then a bookmark is automatically created with the same name.</p>
      </remarks>
      <param name="name">The name of the form field. Can be an empty string.</param>
      <param name="type">Specifies the type of the text form field.</param>
      <param name="format">Format string used to format the value of the form field.</param>
      <param name="fieldValue">Text that will be shown in the field.</param>
      <param name="maxLength">Maximum length the user can enter into the form field. Set to zero for unlimited length.</param>
      <returns>The form field node that was just inserted.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertCheckBox(System.String,System.Boolean,System.Int32)">
      <summary>
            Inserts a checkbox form field at the current position.
            </summary>
      <remarks>
        <p>If you specify a name for the form field, then a bookmark is automatically created with the same name.</p>
      </remarks>
      <param name="name">The name of the form field. Can be an empty string.</param>
      <param name="defaultValue">Default value of the form field.</param>
      <param name="size">Specifies the size of the checkbox in points. Specify 0 for MS Word
            to calculate the size of the checkbox automatically.</param>
      <returns>The form field node that was just inserted.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertComboBox(System.String,System.String[],System.Int32)">
      <summary>
            Inserts a combobox form field at the current position.
            </summary>
      <remarks>
        <p>If you specify a name for the form field, then a bookmark is automatically created with the same name.</p>
      </remarks>
      <param name="name">The name of the form field. Can be an empty string.</param>
      <param name="items">The items of the combobox. Maximum is 25 items.</param>
      <param name="selectedIndex">The index of the selected item in the combobox.</param>
      <returns>The form field node that was just inserted.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertFootnote(Aspose.Words.FootnoteType,System.String)">
      <summary>
            Inserts a footnote or endnote into the document.
            </summary>
      <param name="footnoteType">Specifies whether to insert a footnote or an endnote.</param>
      <param name="footnoteText">Specifies the text of the footnote.</param>
      <returns>Returns a footnote object that was just created.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Drawing.Image)">
      <overloads>Inserts an image into the document.</overloads>
      <summary>
            Inserts an image from a .NET <see cref="T:System.Drawing.Image" />
            object into the document. The image is inserted inline and at 100% scale.
            </summary>
      <param name="image">The image to insert into the document.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.String)">
      <summary>
            Inserts an image from a file or URL into the document. The image is inserted inline and at 100% scale.
            </summary>
      <param name="fileName">The file with the image. Can be any valid local or remote URI.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>This overload will automatically download the image before inserting into the document 
            if you specify a remote URI.</p>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.IO.Stream)">
      <summary>
            Inserts an image from a stream into the document. The image is inserted inline and at 100% scale.
            </summary>
      <param name="stream">The stream that contains the image.
            </param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Byte[])">
      <summary>
            Inserts an image from a byte array into the document. The image is inserted inline and at 100% scale.
            </summary>
      <param name="imageBytes">The byte array that contains the image.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Drawing.Image,System.Double,System.Double)">
      <summary>
            Inserts an inline image from a .NET <see cref="T:System.Drawing.Image" />
            object into the document and scales it to the specified size.
            </summary>
      <param name="image">The image to insert into the document.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.String,System.Double,System.Double)">
      <summary>
            Inserts an inline image from a file or URL into the document and scales it to the specified size.
            </summary>
      <param name="fileName">The file that contains the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.IO.Stream,System.Double,System.Double)">
      <summary>
            Inserts an inline image from a stream into the document and scales it to the specified size.
            </summary>
      <param name="stream">The stream that contains the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Byte[],System.Double,System.Double)">
      <summary>
            Inserts an inline image from a byte array into the document and scales it to the specified size.
            </summary>
      <param name="imageBytes">The byte array that contains the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Drawing.Image,Aspose.Words.Drawing.RelativeHorizontalPosition,System.Double,Aspose.Words.Drawing.RelativeVerticalPosition,System.Double,System.Double,System.Double,Aspose.Words.Drawing.WrapType)">
      <summary>
            Inserts an image from a .NET <see cref="T:System.Drawing.Image" />
            object at the specified position and size.
            </summary>
      <param name="image">The image to insert into the document.</param>
      <param name="horzPos">Specifies where the distance to the image is measured from.</param>
      <param name="left">Distance in points from the origin to the left side of the image.</param>
      <param name="vertPos">Specifies where the distance to the image measured from.</param>
      <param name="top">Distance in points from the origin to the top side of the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <param name="wrapType">Specifies how to wrap text around the image.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.String,Aspose.Words.Drawing.RelativeHorizontalPosition,System.Double,Aspose.Words.Drawing.RelativeVerticalPosition,System.Double,System.Double,System.Double,Aspose.Words.Drawing.WrapType)">
      <summary>
            Inserts an image from a file or URL at the specified position and size.
            </summary>
      <param name="fileName">The file that contains the image.</param>
      <param name="horzPos">Specifies where the distance to the image is measured from.</param>
      <param name="left">Distance in points from the origin to the left side of the image.</param>
      <param name="vertPos">Specifies where the distance to the image measured from.</param>
      <param name="top">Distance in points from the origin to the top side of the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <param name="wrapType">Specifies how to wrap text around the image.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.IO.Stream,Aspose.Words.Drawing.RelativeHorizontalPosition,System.Double,Aspose.Words.Drawing.RelativeVerticalPosition,System.Double,System.Double,System.Double,Aspose.Words.Drawing.WrapType)">
      <summary>
            Inserts an image from a stream at the specified position and size.
            </summary>
      <param name="stream">The stream that contains the image.</param>
      <param name="horzPos">Specifies where the distance to the image is measured from.</param>
      <param name="left">Distance in points from the origin to the left side of the image.</param>
      <param name="vertPos">Specifies where the distance to the image measured from.</param>
      <param name="top">Distance in points from the origin to the top side of the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <param name="wrapType">Specifies how to wrap text around the image.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertImage(System.Byte[],Aspose.Words.Drawing.RelativeHorizontalPosition,System.Double,Aspose.Words.Drawing.RelativeVerticalPosition,System.Double,System.Double,System.Double,Aspose.Words.Drawing.WrapType)">
      <summary>
            Inserts an image from a byte array at the specified position and size.
            </summary>
      <param name="imageBytes">The byte array that contains the image.</param>
      <param name="horzPos">Specifies where the distance to the image is measured from.</param>
      <param name="left">Distance in points from the origin to the left side of the image.</param>
      <param name="vertPos">Specifies where the distance to the image measured from.</param>
      <param name="top">Distance in points from the origin to the top side of the image.</param>
      <param name="width">The width of the image in points. Can be a negative value to request 100% scale.</param>
      <param name="height">The height if the image in points. Can be a negative value to request 100% scale.</param>
      <param name="wrapType">Specifies how to wrap text around the image.</param>
      <returns>The image node that was just inserted.</returns>
      <remarks>
        <p>You can change the image size, location, positioning method and other settings using the 
<see cref="T:Aspose.Words.Drawing.Shape" /> object returned by this method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertHtml(System.String)">
      <summary>
            Inserts HTML string into the document.
            </summary>
      <remarks>
        <p>You can use InsertHtml to insert an HTML fragment or whole HTML document.</p>
      </remarks>
      <param name="html">HTML string to insert into the document.</param>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertCell">
      <summary>
            Inserts a table cell into the document.
            </summary>
      <remarks>
        <p>To start a table, just call <b>InsertCell</b>. After this, any content you add using 
            other methods of the <see cref="T:Aspose.Words.DocumentBuilder" /> class will be added to the current cell.</p>
        <p>To start a new cell in the same row, call <b>InsertCell</b> again.</p>
        <p>To end a table row call <see cref="M:Aspose.Words.DocumentBuilder.EndRow" />.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.CellFormat" /> property to specify cell formatting.</p>
      </remarks>
      <returns>The cell node that was just inserted.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.StartTable">
      <summary>
            Starts a table in the document.
            </summary>
      <remarks>
        <p>The next method to call is <see cref="M:Aspose.Words.DocumentBuilder.InsertCell" />.</p>
        <p>This method starts a nested table when called inside a cell.</p>
      </remarks>
      <returns>The table node that was just created.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.EndTable">
      <summary>
            Ends a table in the document.
            </summary>
      <remarks>
        <p>This method should be called only once after <see cref="M:Aspose.Words.DocumentBuilder.EndRow" /> was called. When called, 
            <b>EndTable</b> moves the cursor out of the current cell to point just after the table.</p>
      </remarks>
      <returns>The table node that was just finished.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.EndRow">
      <summary>
            Ends a table row in the document.
            </summary>
      <remarks>
        <p>Call <b>EndRow</b> to end a table row. If you call <see cref="M:Aspose.Words.DocumentBuilder.InsertCell" /> immediately
            after that, then the table continues on a new row.</p>
        <p>Use the <see cref="P:Aspose.Words.DocumentBuilder.RowFormat" /> property to specify row formatting.</p>
      </remarks>
      <returns>The row node that was just finished.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.StartBookmark(System.String)">
      <summary>
            Marks the current position in the document as a bookmark start. 
            </summary>
      <remarks>
        <p>Bookmarks in a document can overlap and span any range. To create a valid bookmark you need to 
            call both <see cref="M:Aspose.Words.DocumentBuilder.StartBookmark(System.String)" /> and <see cref="M:Aspose.Words.DocumentBuilder.EndBookmark(System.String)" /> with the same <b>bookmarkName</b> 
            parameter.</p>
        <p>Badly formed bookmarks or bookmarks with duplicate names will be ignored when the document is saved.</p>
      </remarks>
      <param name="bookmarkName">Name of the bookmark.</param>
      <returns>The bookmark start node that was just created.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.EndBookmark(System.String)">
      <summary>
            Marks the current position in the document as a bookmark end.
            </summary>
      <remarks>
        <p>Bookmarks in a document can overlap and span any range. To create a valid bookmark you need to 
            call both <see cref="M:Aspose.Words.DocumentBuilder.StartBookmark(System.String)" /> and <see cref="M:Aspose.Words.DocumentBuilder.EndBookmark(System.String)" /> with the same <b>bookmarkName</b> 
            parameter.</p>
        <p>Badly formed bookmarks or bookmarks with duplicate names will be ignored when the document is saved.</p>
      </remarks>
      <param name="bookmarkName">Name of the bookmark.</param>
      <returns>The bookmark end node that was just created.</returns>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.PushFont">
      <summary>
            Saves current character formatting onto the stack.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.DocumentBuilder.Font" />
        <seealso cref="M:Aspose.Words.DocumentBuilder.PopFont" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.PopFont">
      <summary>
            Retrieves character formatting previously saved on the stack.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.DocumentBuilder.Font" />
        <seealso cref="M:Aspose.Words.DocumentBuilder.PushFont" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.InsertNode(Aspose.Words.Node)">
      <summary>
            Inserts a text level node inside the current paragraph before the cursor.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.GetDirectRunAttr(System.Int32)">
      <summary>
            Implements IRunAttrSource to provide access to the current run attributes in the document builder.
            
            DocumentBuilder has its own copy of run attributes, not connected to the model 
            to allow user to set font formatting before inserting text into the model.
            
            The fact that the builder has its own disconnected copy of run attributes
            and provides the Font property requires the builder to perform proper 
            run attribute resolution using character and paragraph styles.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            The logic in this method is same as in Run.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.GetDirectRowAttr(System.Int32)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.FetchInheritedRowAttr(System.Int32)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.SetRowAttr(System.Int32,System.Object)">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.ClearRowAttrs">
      <summary>
            IRowAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.GetDirectCellAttr(System.Int32)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.FetchInheritedCellAttr(System.Int32)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.SetCellAttr(System.Int32,System.Object)">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.DocumentBuilder.ClearCellAttrs">
      <summary>
            ICellAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.Document">
      <summary>
            Gets or sets the <see cref="P:Aspose.Words.DocumentBuilder.Document" /> object that this object is attached to.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.Font">
      <summary>
            Returns an object that represents current font formatting properties.
            </summary>
      <remarks>
        <p>Use <b>Font</b> to access and modify font formatting properties.</p>
        <p>Specify font formatting before inserting text.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.Bold">
      <summary>
            True if the font is formatted as bold.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.Italic">
      <summary>
            True if the font is formatted as italic.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.Underline">
      <summary>
            Gets/sets underline type for the current font.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.ParagraphFormat">
      <summary>
            Returns an object that represents current paragraph formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.ListFormat">
      <summary>
            Returns an object that represents current list formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.PageSetup">
      <summary>
            Returns an object that represents current page setup and section properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.RowFormat">
      <summary>
            Returns an object that represents current table row formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.CellFormat">
      <summary>
            Returns an object that represents current table cell formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.IsAtStartOfParagraph">
      <summary>
            Returns true if the cursor is at the beginning of the current paragraph (no text before the cursor).
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.IsAtEndOfParagraph">
      <summary>
            Returns true if the cursor is at the end of the current paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.CurrentNode">
      <summary>
            Gets the node that is currently selected in this DocumentBuilder.
            </summary>
      <remarks>
        <p>
          <b>CurrentNode</b> is a cursor of <b>DocumentBuilder</b> and points to a <b>Node</b> 
            that is a direct child of a <b>Paragraph</b>. Any insert operations you perform using 
            <b>DocumentBuilder</b> will insert before the <b>CurrentNode</b>.</p>
        <p>When the current paragraph is empty or the cursor is positioned just
            before the end of the paragraph, <b>CurrentNode</b> returns null.</p>
        <seealso cref="P:Aspose.Words.DocumentBuilder.CurrentParagraph" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.CurrentParagraph">
      <summary>
            Gets the paragraph that is currently selected in this DocumentBuilder.
            </summary>
      <remarks>
        <see cref="P:Aspose.Words.DocumentBuilder.CurrentNode" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.CurrentStory">
      <summary>
            Gets the story that is currently selected in this DocumentBuilder.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.CurrentSection">
      <summary>
            Gets the section that is currently selected in this DocumentBuilder.
            </summary>
    </member>
    <member name="P:Aspose.Words.DocumentBuilder.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="T:Aspose.Words.BookmarkStart">
      <summary>
            Represents a start of a bookmark in a Word document.
            </summary>
      <remarks>
        <p>A complete bookmark in a Word document consists of a <see cref="T:Aspose.Words.BookmarkStart" />
            and a matching <see cref="T:Aspose.Words.BookmarkEnd" /> with the same bookmark name.</p>
        <p>
          <see cref="T:Aspose.Words.BookmarkStart" /> and <see cref="T:Aspose.Words.BookmarkEnd" /> are just markers inside a document
            that specify where the bookmark starts and ends.</p>
        <p>Use the <see cref="P:Aspose.Words.BookmarkStart.Bookmark" /> class as a "facade" to work with a bookmark
            as a single object.</p>
        <note>Currently bookmarks are supported only at the inline-level, that is inside <see cref="T:Aspose.Words.Paragraph" />,
            but bookmark start and bookmark end can be in different paragraphs.</note>
      </remarks>
    </member>
    <member name="M:Aspose.Words.BookmarkStart.#ctor(Aspose.Words.Document,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Words.BookmarkStart" /> class.
            </summary>
      <param name="doc">The owner document.</param>
      <param name="name">The name of the bookmark. Cannot be null.</param>
    </member>
    <member name="M:Aspose.Words.BookmarkStart.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitBookmarkStart(Aspose.Words.BookmarkStart)" />.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>False if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="M:Aspose.Words.BookmarkStart.GetText">
      <summary>
            Returns an empty string.
            </summary>
      <returns>An empty string.</returns>
    </member>
    <member name="P:Aspose.Words.BookmarkStart.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.BookmarkStart" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.BookmarkStart.Name">
      <summary>
            Get the bookmark name.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.BookmarkStart.Bookmark">
      <summary>
            Gets the facade object that encapsulates this bookmark start and end.
            </summary>
    </member>
    <member name="T:Aspose.Words.TextEffect">
      <summary>
            Animation effect for text runs.
            </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.LasVegasLights">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.BlinkingBackground">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.SparkleText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.MarchingBlackAnts">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.MarchingRedAnts">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.TextEffect.Shimmer">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.Tables.RowCollection">
      <summary>
            Provides typed access to a collection of <see cref="T:Aspose.Words.Tables.Row" /> nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.RowCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>Row</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="T:Aspose.Words.StyleCollection">
      <summary>
            A collection of Style objects that represent both the built-in and user-defined styles in a document.
            </summary>
      <dev>
            At the moment the styles are identified by istd (style index) that never changes (it only changes
            when importing a style from another document). Will it be better if I used a string name as an
            identifier? Note however, it should not change once it has been assigned, otherwise will need to
            update all references to the style in the model.
            </dev>
    </member>
    <member name="M:Aspose.Words.StyleCollection.GetEnumerator">
      <summary>
            Gets the enumerator object that will enumerate styles in the alphabetical order of their names.
            </summary>
    </member>
    <member name="M:Aspose.Words.StyleCollection.Add(Aspose.Words.StyleType,System.String)">
      <summary>
            Creates a new user defined style and adds it the collection. 
            </summary>
      <remarks>
        <p>You can create character, paragraph or a list style.</p>
        <p>When creating a list style, the style is created with default numbered list formatting (1 \ a \ i).</p>
        <p>Throws an exception if a style with this name already exists.</p>
      </remarks>
      <param name="type">A <see cref="T:Aspose.Words.StyleType" /> value that
            specifies the type of the style to create.</param>
      <param name="name">Case sensitive name of the style to create.</param>
    </member>
    <member name="M:Aspose.Words.StyleCollection.Add(Aspose.Words.Style)">
      <summary>
            Adds the style to the collection of styles.
            </summary>
    </member>
    <member name="P:Aspose.Words.StyleCollection.Document">
      <summary>
            Gets the owner document.
            </summary>
    </member>
    <member name="P:Aspose.Words.StyleCollection.Count">
      <summary>
            Gets the number of styles in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.StyleCollection.Item(System.String)">
      <overloads>Retrieves a style from the collection.</overloads>
      <summary>
            Gets a style by name or alias.
            </summary>
      <remarks>
        <p>Case sensitive, returns null if the style with the given name is not found.</p>
        <p>If this is an English name of a built in style that does not yet exist, automatically creates it.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.StyleCollection.Item(Aspose.Words.StyleIdentifier)">
      <summary>
            Gets a built-in style by its locale independent identifier.
            </summary>
      <remarks>
        <p>When accessing a style that does not yet exist, automatically creates it.</p>
      </remarks>
      <param name="sti">A <see cref="T:Aspose.Words.StyleIdentifier" /> value
            that specifies the built in style to retrieve.</param>
    </member>
    <member name="P:Aspose.Words.StyleCollection.Item(System.Int32)">
      <summary>
            Gets a style by index.
            </summary>
      <dev>
            Gets by index, not by istd.
            </dev>
    </member>
    <member name="T:Aspose.Words.Story">
      <summary>
            Base class for section-level stories.
            </summary>
      <remarks>
        <p>Text of a Word document is stored in several stories. 
            The main text is stored in the main text story represented by <see cref="T:Aspose.Words.Body" />, 
            each header and footer is stored in a separate story represented by <see cref="T:Aspose.Words.HeaderFooter" />.</p>
        <p>
          <b>Story</b> is a container for block-level nodes <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Story.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Story.DeleteShapes">
      <summary>
            Deletes all shapes from the text of this story.
            </summary>
    </member>
    <member name="P:Aspose.Words.Story.StoryType">
      <summary>
            Gets the type of this story.
            </summary>
    </member>
    <member name="P:Aspose.Words.Story.ParentSection">
      <summary>
            Gets the parent section of this story.
            </summary>
      <remarks>
        <p>
          <b>ParentSection</b> is equivalent to <c>(Section)ParentNode</c>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Story.FirstParagraph">
      <summary>
            Gets the first paragraph in the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.Story.LastParagraph">
      <summary>
            Gets the last paragraph in the story. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Story.Paragraphs">
      <summary>
            Gets a collection of paragraphs that are immediate children of the story.
            </summary>
    </member>
    <member name="P:Aspose.Words.Story.Tables">
      <summary>
            Gets a collection of tables that are immediate children of the story.
            </summary>
    </member>
    <member name="T:Aspose.Words.PageSetup">
      <summary>
            Represents the page setup properties of a section. 
            </summary>
      <remarks>
        <p>
          <b>PageSetup</b> object contains all the page setup attributes of a section 
            (left margin, bottom margin, paper size, and so on) as properties.</p>
      </remarks>
      <dev>
            This is a presentation object only, does not store any model data.
            </dev>
    </member>
    <member name="M:Aspose.Words.PageSetup.ClearFormatting">
      <summary>
            Resets page setup to default paper size, margins and orientation.
            </summary>
    </member>
    <member name="M:Aspose.Words.PageSetup.GetDirectBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.PageSetup.FetchInheritedBorderAttr(System.Int32)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="M:Aspose.Words.PageSetup.SetBorderAttr(System.Int32,System.Object)">
      <summary>
            IBorderAttrSource
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.OddAndEvenPagesHeaderFooter">
      <summary>
        <b>True</b> if the document has different headers and footers for odd-numbered and even-numbered pages.
            </summary>
      <remarks>
            Note, changing this property affects all sections in the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.DifferentFirstPageHeaderFooter">
      <summary>
        <b>True</b> if a different header or footer is used on the first page.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.MirrorMargins">
      <summary>
            For multiple page documents, swaps left and right margins on facing pages.
            </summary>
      <remarks>
            Note, changing this property affects all sections in the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.SectionStart">
      <summary>
            Returns or sets the type of section break for the specified object.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.SuppressEndnotes">
      <summary>
        <b>True</b> if endnotes are printed at the end of the next section that doesn't suppress endnotes. 
            Suppressed endnotes are printed before the endnotes in that section.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.VerticalAlignment">
      <summary>
            Returns or sets the vertical alignment of text on each page in a document or section.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.Bidi">
      <summary>
            Specifies that this section contains bidirectional (complex scripts) text.
            </summary>
      <remarks>
        <p>When true, the columns in this section are laid out from right to left.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.PageWidth">
      <summary>
            Returns or sets the width of the page in points. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.PageHeight">
      <summary>
            Returns or sets the height of the page in points. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.PaperSize">
      <summary>
            Returns or sets the paper size. 
            </summary>
      <remarks>
        <para>Setting this property updates <see cref="P:Aspose.Words.PageSetup.PageWidth" /> and <see cref="P:Aspose.Words.PageSetup.PageHeight" /> values.
            Setting this value to <see cref="F:Aspose.Words.PaperSize.Custom" /> does not change existing values.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.Orientation">
      <summary>
            Returns or sets the orientation of the page.
            </summary>
      <remarks>
        <p>Changing <b>Orientation</b> swaps <see cref="P:Aspose.Words.PageSetup.PageWidth" /> and <see cref="P:Aspose.Words.PageSetup.PageHeight" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.LeftMargin">
      <summary>
            Returns or sets the distance (in points) between the left edge of the page and the left boundary of the body text. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.RightMargin">
      <summary>
            Returns or sets the distance (in points) between the right edge of the page and the right boundary of the body text. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.TopMargin">
      <summary>
            Returns or sets the distance (in points) between the top edge of the page and the top boundary of the body text. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.BottomMargin">
      <summary>
            Returns or sets the distance (in points) between the bottom edge of the page and the bottom boundary of the body text. 
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.HeaderDistance">
      <summary>
            Returns or sets the distance (in points) between the header and the top of the page.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.FooterDistance">
      <summary>
            Returns or sets the distance (in points) between the footer and the bottom of the page.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.Gutter">
      <summary>
            Gets or sets the amount of extra space added to the margin for document binding.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.FirstPageTray">
      <summary>
            Returns or sets the paper tray to use for the first page of a section.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.OtherPagesTray">
      <summary>
            Returns or sets the paper tray to be used for all but the first page of a section.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.PageNumberStyle">
      <summary>
            Gets or sets the page number format.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.RestartPageNumbering">
      <summary>
        <b>True</b> if page numbering restarts at the beginning of the section.
            </summary>
      <remarks>
            If set to <b>false</b>, the <b>RestartPageNumbering</b> property will override the 
            <see cref="P:Aspose.Words.PageSetup.PageStartingNumber" /> property so that page numbering can continue from the previous section.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.PageStartingNumber">
      <summary>
            Gets or sets the starting page number of the section.
            </summary>
      <remarks>
            The <see cref="P:Aspose.Words.PageSetup.RestartPageNumbering" /> property, if set to <b>false</b>, will override the 
            <b>PageStartingNumber</b> property so that page numbering can continue from the previous section.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.LineNumberRestartMode">
      <summary>
            Gets or sets the way line numbering runs  that is, whether it starts over at the beginning of a new 
            page or section or runs continuously.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.LineNumberCountBy">
      <summary>
            Returns or sets the numeric increment for line numbers.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.LineNumberDistanceFromText">
      <summary>
            Gets or sets distance between the right edge of line numbers and the left edge of the document.
            </summary>
      <remarks>
            Set this property to zero for automatic distance between the line numbers and text of the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.LineStartingNumber">
      <summary>
            Gets or sets the starting line number.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.TextColumns">
      <summary>
            Returns a collection that represents the set of text columns.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.RtlGutter">
      <summary>
            Gets or sets whether Microsoft Word uses gutters for the section based on a right-to-left language or a left-to-right language.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.BorderAlwaysInFront">
      <summary>
            Specifies where the page border is positioned relative to intersecting texts and objects.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.BorderDistanceFrom">
      <summary>
            Gets or sets a value that indicates whether the specified page border is measured from the edge of the page or from the text it surrounds.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.BorderAppliesTo">
      <summary>
            Specifies which pages the page border is printed on.
            </summary>
    </member>
    <member name="P:Aspose.Words.PageSetup.BorderSurroundsHeader">
      <summary>
            Specifies whether the page border includes or excludes the header.
            </summary>
      <remarks>
            Note, changing this property affects all sections in the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.BorderSurroundsFooter">
      <summary>
            Specifies whether the page border includes or excludes the footer.
            </summary>
      <remarks>
            Note, changing this property affects all sections in the document.
            </remarks>
    </member>
    <member name="P:Aspose.Words.PageSetup.Borders">
      <summary>
            Gets a collection of the page borders.
            </summary>
    </member>
    <member name="T:Aspose.Words.Properties.DocumentPropertyCollection">
      <summary>
            Base class for <see cref="T:Aspose.Words.Properties.BuiltInDocumentProperties" /> and <see cref="T:Aspose.Words.Properties.CustomDocumentProperties" /> collections.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Properties.BuiltInDocumentProperties" />
        <seealso cref="T:Aspose.Words.Properties.CustomDocumentProperties" />
      </remarks>
      <remarks>
        <p>The names of the properties are case-insensitive.</p>
        <p>The properties in the collection are sorted alphabetically by name.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.GetEnumerator">
      <summary>
            Returns an enumerator object that can be used to iterate over all items in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.Contains(System.String)">
      <summary>
            Returns true if a property with the specified name exists in the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>True if the property exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.IndexOf(System.String)">
      <summary>
            Gets the index of a property by name.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.Remove(System.String)">
      <summary>
            Removes a property with the specified name from the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a property at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentPropertyCollection.Clear">
      <summary>
            Removes all properties from the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentPropertyCollection.Count">
      <summary>
            Gets number of items in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentPropertyCollection.Item(System.String)">
      <overloads>Provides access to the collection items.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Words.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>Returns null if a property with the specified name is not found.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentPropertyCollection.Item(System.Int32)">
      <summary>
            Returns a <see cref="T:Aspose.Words.Properties.DocumentProperty" /> object by index.
            </summary>
      <param name="index">Zero-based index of the <see cref="T:Aspose.Words.Properties.DocumentProperty" /> to retrieve.</param>
    </member>
    <member name="T:Aspose.Words.Properties.BuiltInDocumentProperties">
      <summary>
            A collection of built-in document properties.
            </summary>
      <remarks>
        <p>Provides access to <see cref="T:Aspose.Words.Properties.DocumentProperty" /> objects by their names (using an indexer) and
            via a set of typed properties that return values of appropriate types.</p>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.BuiltInDocumentProperties" />
        <seealso cref="P:Aspose.Words.Document.CustomDocumentProperties" />
      </remarks>
      <remarks>
        <p>The names of the properties are case-insensitive.</p>
        <p>The properties in the collection are sorted alphabetically by name.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Words.Properties.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Words.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>The string names of the properties correspond to the names of the typed
            properties available from <see cref="T:Aspose.Words.Properties.BuiltInDocumentProperties" />.</p>
        <p>If you request a property that is not present in the document, but the name
            of the property is recognized as a valid built-in name, a new <see cref="T:Aspose.Words.Properties.DocumentProperty" /> 
            is created, added to the collection and returned. The newly created property is assigned
            a default value (empty string, zero, false or DateTime.MinValue depending on the type
            of the built-in property).</p>
        <p>If you request a property that is not present in the document and the name
            is not recognized as a built-in name, a null is returned.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Author">
      <summary>
            Gets or sets the name of the document's author.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Bytes">
      <summary>
            Represents an estimate of the number of bytes in the document.
            </summary>
      <remarks>
        <p>This property is sometimes not set by Microsoft Word.</p>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Characters">
      <summary>
            Represents an estimate of the number of characters in the document.
            </summary>
      <remarks>
        <p>This property is updated when you call <see cref="M:Aspose.Words.Document.UpdateWordCount" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.CharactersWithSpaces">
      <summary>
            Represents an estimate of the number of characters (including spaces) in the document.
            </summary>
      <remarks>
        <p>This property is updated when you call <see cref="M:Aspose.Words.Document.UpdateWordCount" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Comments">
      <summary>
            Gets or sets the document comments.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Category">
      <summary>
            Gets or sets the category of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Company">
      <summary>
            Gets or sets the company property.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.CreatedTime">
      <summary>
            Gets or sets date of the document creation in UTC.
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Keywords">
      <summary>
            Gets or sets the document keywords.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.LastPrinted">
      <summary>
            Gets or sets the date when the document was last printed in UTC.
            </summary>
      <remarks>
        <p>If the document was never printed, this property will return DateTime.MinValue.</p>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.LastSavedBy">
      <summary>
            Gets or sets the name of the last author.
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.LastSavedTime">
      <summary>
            Gets or sets the time of the last save in UTC.
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Lines">
      <summary>
            Represents an estimate of the number of lines in the document.
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Manager">
      <summary>
            Gets or sets the manager property.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.NameOfApplication">
      <summary>
            Gets or sets the name of the application.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Pages">
      <summary>
            Represents an estimate of the number of pages in the document.
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Paragraphs">
      <summary>
            Represents an estimate of the number of paragraphs in the document.
            </summary>
      <remarks>
        <p>This property is updated when you call <see cref="M:Aspose.Words.Document.UpdateWordCount" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.RevisionNumber">
      <summary>
            Gets or sets the document revision number. 
            </summary>
      <remarks>
        <p>Aspose.Words does not update this property when you create or modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Template">
      <summary>
            Gets or sets the informational name of the document template.
            </summary>
      <remarks>
        <p>In Microsoft Word, this property is for informational purposes only and
            usually contains only the file name of the template without the path.</p>
        <p>Empty string means the document is attached to the Normal template.</p>
        <p>To get or set the actual name of the attached template, use the
            <see cref="P:Aspose.Words.Document.AttachedTemplate" /> property.</p>
        <seealso cref="P:Aspose.Words.Document.AttachedTemplate" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.TotalEditingTime">
      <summary>
            Gets or sets the total editing time in minutes.
            </summary>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Version">
      <summary>
            Represents the version number of the application that created the document.
            </summary>
      <remarks>
        <p>When a document was created by Microsoft Word, then high 16 bit represent
            the major version and low 16 bit represent the build number.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.BuiltInDocumentProperties.Words">
      <summary>
            Represents an estimate of the number of words in the document.
            </summary>
      <remarks>
        <p>This property is updated when you call <see cref="M:Aspose.Words.Document.UpdateWordCount" />.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Reporting.MergeFieldEventArgs">
      <summary>
            Provides data for the <b>MergeField</b> event.
            </summary>
      <remarks>
        <p>The <b>MergeField</b> event occurs during mail merge when a simple mail merge
            field is encountered in the document. You can respond to this event to return
            text for the mail merge engine to insert into the document.</p>
        <seealso cref="T:Aspose.Words.Reporting.MergeFieldEventHandler" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MergeFieldEventArgs.Text">
      <summary>
            Gets or sets the text that will be inserted into the document for the current merge field.
            </summary>
      <remarks>
        <p>When your event handler is called, this property is set to null.</p>
        <p>If you leave Text as null, the mail merge engine will insert <see cref="P:Aspose.Words.Reporting.MergeFieldEventArgsBase.FieldValue" /> in place of the merge field.</p>
        <p>If you set Text to a non empty string, the string will be inserted into the document in place of the merge field.</p>
        <p>If you set Text to an empty string, the mail merge engine will remove the merge field.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Drawing.ShapeType">
      <summary>
            Specifies the type of shape in a Microsoft Word document.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.ShapeType" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Image">
      <summary>
            The shape is an image.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextBox">
      <summary>
            The shape is a textbox. Note that shapes of many other types can also have text inside them too.
            A shape does not have to have this type to contain text.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Group">
      <summary>
        <p>The shape is a group shape.</p>
      </summary>
      <dev>In DOC file, shape group has shape type NonPrimitive, we don't want this in the model,
            so in the model it is our own constant.</dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.OleObject">
      <summary>
            The shape is an OLE object.
            <p>You cannot create shapes of this type in the document.</p></summary>
      <dev>
            In Microsoft Word, shapes that represent OLE objects have shape type picture,
            but in our model, they are distinguished into their own shape type.
            </dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.OleControl">
      <summary>
            The shape is an ActiveX control.
            <p>You cannot create shapes of this type in the document.</p></summary>
      <dev>
            In DOC and RTF, shapes that represent ActiveX controls have shape type picture.
            In WordML, ActiveX controls have their own shape type and so is in the model.
            </dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.NonPrimitive">
      <summary>
            A shape drawn by user and consisting of multiple segments and/or vertices (curve, freeform or scribble).
            <p>You cannot create shapes of this type in the document.</p></summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Rectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.RoundRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Ellipse">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Diamond">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Triangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.RightTriangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Parallelogram">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Trapezoid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Hexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Octagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Plus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Star">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Arrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ThickArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.HomePlate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Cube">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Balloon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Arc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Line">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Plaque">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Can">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Donut">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextSimple">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextOctagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextHexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextOnCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextOnRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.StraightConnector1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentConnector3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedConnector3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Callout1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Callout2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Callout3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentCallout1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentCallout2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentCallout3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BorderCallout1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BorderCallout2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BorderCallout3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentBorderCallout1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentBorderCallout2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentBorderCallout3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Ribbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Ribbon2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Chevron">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Pentagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.NoSmoking">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal32">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.WedgeRectCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.WedgeRRectCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.WedgeEllipseCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Wave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FoldedCorner">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.DownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.UpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.UpDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.IrregularSeal1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.IrregularSeal2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LightningBolt">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Heart">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.QuadArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.RightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.UpArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.DownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftRightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.UpDownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.QuadArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Bevel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.RightBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.RightBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BentArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.StripedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.NotchedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BlockArc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.SmileyFace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.VerticalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.HorizontalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CustomShape">
      <summary>
            This shape type seems to be set for shapes that are not part of the standard set of the
            auto shapes in Microsoft Word. For example, if you insert a new auto shape from ClipArt.
            <p>You cannot create shapes of this type in the document.</p></summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.UturnArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedLeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CurvedDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.CloudCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.EllipseRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.EllipseRibbon2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartDecision">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartInputOutput">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartPredefinedProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartInternalStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartDocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartMultidocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartTerminator">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartPreparation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartManualInput">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartManualOperation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartPunchedCard">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartPunchedTape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartSummingJunction">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartOr">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartCollate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartSort">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartExtract">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartMerge">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartOfflineStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartOnlineStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartMagneticTape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartMagneticDisk">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartMagneticDrum">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartDisplay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartDelay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextPlainText">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextStop">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextTriangle">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextTriangleInverted">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextChevron">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextChevronInverted">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextRingInside">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextRingOutside">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextArchUpCurve">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextArchDownCurve">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCircleCurve">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextButtonCurve">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextArchUpPour">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextArchDownPour">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCirclePour">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextButtonPour">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCurveUp">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCurveDown">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCascadeUp">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCascadeDown">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextWave1">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextWave2">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextWave3">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextWave4">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextInflate">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextDeflate">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextInflateBottom">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextDeflateBottom">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextInflateTop">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextDeflateTop">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextDeflateInflate">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextDeflateInflateDeflate">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextFadeRight">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextFadeLeft">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextFadeUp">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextFadeDown">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextSlantUp">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextSlantDown">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCanUp">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.TextCanDown">
      <summary>
            WordArt object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartAlternateProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.FlowChartOffpageConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Callout90">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentCallout90">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BorderCallout90">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.AccentBorderCallout90">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.LeftRightUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Sun">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Moon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BracketPair">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.BracePair">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.Seal4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.DoubleWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonBlank">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonHome">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonHelp">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonInformation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonForwardNext">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonBackPrevious">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonEnd">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonBeginning">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonReturn">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonDocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonSound">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.ActionButtonMovie">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ShapeType.MinValue">
      <summary>
            Reserved for the system use.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.RelativeVerticalPosition">
      <summary>
            Specifies to what the vertical position of a shape or text frame is relative.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.RelativeVerticalPosition" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeVerticalPosition.Margin">
      <summary>
            The object is positioned relative to the top page margin.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeVerticalPosition.Page">
      <summary>
            The object is positioned relative to the top edge of the page.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeVerticalPosition.Paragraph">
      <summary>
            The object is positioned relative to the top of the paragraph that contains the anchor.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeVerticalPosition.Line">
      <summary>
            Undocumented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.RelativeVerticalPosition.Default">
      <summary>
            Default value is <see cref="F:Aspose.Words.Drawing.RelativeVerticalPosition.Paragraph" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.UnsupportedFileFormatException">
      <summary>
            Thrown during document load, when the document format is not recognized or not supported by Aspose.Words.
            </summary>
    </member>
    <member name="T:Aspose.Words.BorderCollection">
      <summary>
            A collection of Border objects.
            </summary>
      <remarks>
            Different document elements have different borders.
            For example, ParagraphFormat has Bottom, Left, Right and Top borders.
            You can specify different formatting for each border independently or
            enumerate through all borders and apply same formatting.
            </remarks>
      <dev>
            This is a presentation object only, does not store any model data.
            </dev>
    </member>
    <member name="M:Aspose.Words.BorderCollection.ClearFormatting">
      <summary>
            Removes all borders of an object.
            </summary>
    </member>
    <member name="M:Aspose.Words.BorderCollection.GetEnumerator">
      <summary>
            Returns an enumerator object that can be used to iterate over all borders in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Item(Aspose.Words.BorderType)">
      <overloads>Retrieves a Border object.</overloads>
      <summary>
            Retrieves a Border object by border type.
            </summary>
      <remarks>
        <p>Note that not all borders are present for different document elements. 
            This method throws an exception if you request a border not applicable to the current object.</p>
      </remarks>
      <param name="borderType">A <see cref="T:Aspose.Words.BorderType" /> value
            that specifies the type of the border to retrieve.</param>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Item(System.Int32)">
      <summary>
            Retrieves a Border object by index.
            </summary>
      <param name="index">Zero-based index of the border to retrieve.</param>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Left">
      <summary>
            Gets the left border.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Right">
      <summary>
            Gets the right border.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Top">
      <summary>
            Gets the top border.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Bottom">
      <summary>
            Gets the bottom border.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Horizontal">
      <summary>
            Gets the horizontal border that is used between cells or conforming paragraphs.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Vertical">
      <summary>
            Gets the vertical border that is used between cells.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Count">
      <summary>
            Gets the number of borders in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.BorderCollection.LineWidth">
      <summary>
            Gets or sets the border width in points.
            </summary>
      <remarks>
        <p>Returns the width of the first border in the collection.</p>
        <p>Sets the width of all borders in the collection excluding diagonal borders.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.BorderCollection.LineStyle">
      <summary>
            Gets or sets the border style.
            </summary>
      <remarks>
        <p>Returns the style of the first border in the collection.</p>
        <p>Sets the style of all borders in the collection excluding diagonal borders.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Color">
      <summary>
            Gets or sets the border color.
            </summary>
      <remarks>
        <p>Returns the color of the first border in the collection.</p>
        <p>Sets the color of all borders in the collection excluding diagonal borders.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.BorderCollection.DistanceFromText">
      <summary>
            Gets or sets distance of the border from text in points.
            </summary>
      <remarks>
        <p>Gets the distance from text for the first border.</p>
        <p>Sets the distance from text for all borders in the collection excluding diagonal borders.</p>
        <p>Has no effect and will be automatically reset to zero for borders of table cells.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.BorderCollection.Shadow">
      <summary>
            Gets or sets a value indicating whether the border has a shadow.
            </summary>
      <remarks>
        <p>Gets the value from the first border in the collection.</p>
        <p>Sets the value for all borders in the collection excluding diagonal borders.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.BookmarkCollection">
      <summary>
            A collection of <see cref="T:Aspose.Words.Bookmark" /> objects that represent the bookmarks in the specified range.
            </summary>
    </member>
    <member name="M:Aspose.Words.BookmarkCollection.Remove(Aspose.Words.Bookmark)">
      <summary>
            Removes the specified bookmark from the document.
            </summary>
      <param name="bookmark">The bookmark to remove.</param>
    </member>
    <member name="M:Aspose.Words.BookmarkCollection.Remove(System.String)">
      <summary>
            Removes a bookmark with the specified name.
            </summary>
      <param name="bookmarkName">The case-insensitive name of the bookmark to remove.</param>
    </member>
    <member name="M:Aspose.Words.BookmarkCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a bookmark at the specified index.
            </summary>
      <param name="index">The zero-based index of the bookmark to remove.</param>
    </member>
    <member name="M:Aspose.Words.BookmarkCollection.Clear">
      <summary>
            Removes all bookmarks from this collection and from the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.BookmarkCollection.GetEnumerator">
      <summary>
            Returns an enumerator object.
            </summary>
    </member>
    <member name="P:Aspose.Words.BookmarkCollection.Count">
      <summary>
            Returns the number of bookmarks in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Words.BookmarkCollection.Item(System.Int32)">
      <summary>
            Returns a bookmark at the specified index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="P:Aspose.Words.BookmarkCollection.Item(System.String)">
      <summary>
            Returns a bookmark by name.
            </summary>
      <remarks>
        <p>Returns null if the bookmark with the specified name cannot be found.</p>
      </remarks>
      <param name="bookmarkName">Case-insensitive name of the bookmark.</param>
    </member>
    <member name="T:Aspose.Words.OutlineLevel">
      <summary>
            Specifies the outline level of a paragraph in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level1">
      <summary>
            The paragraph is at the outline level 1 (topmost level).
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level2">
      <summary>
            The paragraph is at the outline level 2.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level3">
      <summary>
            The paragraph is at the outline level 3.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level4">
      <summary>
            The paragraph is at the outline level 4.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level5">
      <summary>
            The paragraph is at the outline level 5.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level6">
      <summary>
            The paragraph is at the outline level 6.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level7">
      <summary>
            The paragraph is at the outline level 7.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level8">
      <summary>
            The paragraph is at the outline level 8.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.Level9">
      <summary>
            The paragraph is at the outline level 9.
            </summary>
    </member>
    <member name="F:Aspose.Words.OutlineLevel.BodyText">
      <summary>
            The paragraph is at the level of the main text.
            </summary>
    </member>
    <member name="T:Aspose.Words.ControlChar">
      <summary>
            Control characters often encountered in documents.
            </summary>
      <remarks>
            Provides both char and string versions of the same constants. For example:
            string ControlChar.LineBreak and char ControlChar.LineBreakChar have the same value.
            </remarks>
    </member>
    <member name="F:Aspose.Words.ControlChar.CellChar">
      <summary>
            End of a table cell or end of a table row character: (char)7 or "\a". 
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.TabChar">
      <summary>
            Tab character: (char)9 or "\t".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.LineFeedChar">
      <summary>
            Line feed character: (char)10 or "\n".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.LineBreakChar">
      <summary>
            Line break character: (char)11 or "\v".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.PageBreakChar">
      <summary>
            Page break character: (char)12 or "\f".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.SectionBreakChar">
      <summary>
            End of section character: (char)12 or "\f". 
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.ParagraphBreakChar">
      <summary>
            End of paragraph character: (char)13 or "\r". 
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.ColumnBreakChar">
      <summary>
            Enf of column character: (char)14.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.FieldStartChar">
      <summary>
            Start of MS Word field character: (char)19.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.FieldSeparatorChar">
      <summary>
            Field separator character separates field code from field value. Optional in some fields. Value: (char)20.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.FieldEndChar">
      <summary>
            End of MS Word field character: (char)21.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.NonBreakingHyphenChar">
      <summary>
            Nonbreaking Hyphen in Microsoft Word is (char)30.
            </summary>
      <remarks>
        <p>Nonbreaking Hyphen in Microsoft Word does not correspond to the 
            Unicode character U+2011 non-breaking hyphen but instead represents
            internal information that tells Microsoft Word to display a hyphen and not to break a line.</p>
        <p>Useful info: http://www.cs.tut.fi/~jkorpela/dashes.html#linebreaks.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.ControlChar.OptionalHyphenChar">
      <summary>
            Optional Hyphen in Microsoft Word is (char)31.
            </summary>
      <remarks>
        <p>Optional Hyphen in Microsoft Word does not correspond to the Unicode character U+00AD soft hyphen.
            Instead, it inserts internal information that tells Word about a possible hyphenation point.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.ControlChar.SpaceChar">
      <summary>
            Space character: (char)32.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.NonBreakingSpaceChar">
      <summary>
            Non-breaking space character: (char)160.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.DefaultTextInputChar">
      <summary>
            This is the "o" character used as a default value in text input form fields.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.Cell">
      <summary>
            End of a table cell or end of a table row character: "\x0007" or "\a". 
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.Tab">
      <summary>
            Tab character: "\x0009" or "\t".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.Lf">
      <summary>
            Line feed character: "\x000a" or "\n". Same as <see cref="F:Aspose.Words.ControlChar.LineFeed" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.LineFeed">
      <summary>
            Line feed character: "\x000a" or "\n". Same as <see cref="F:Aspose.Words.ControlChar.Lf" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.LineBreak">
      <summary>
            Line break character: "\x000b" or "\v".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.PageBreak">
      <summary>
            Page break character: "\x000c" or "\f". Note it has the same value as <see cref="F:Aspose.Words.ControlChar.SectionBreak" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.SectionBreak">
      <summary>
            End of section character: "\x000c" or "\f". Note it has the same value as <see cref="F:Aspose.Words.ControlChar.PageBreak" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.Cr">
      <summary>
            Carriage return character: "\x000d" or "\r". Same as <see cref="F:Aspose.Words.ControlChar.ParagraphBreak" />. 
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.ParagraphBreak">
      <summary>
            End of paragraph chracter: "\x000d" or "\r". Same as <see cref="F:Aspose.Words.ControlChar.Cr" /></summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.ColumnBreak">
      <summary>
            Enf of column character: "\x000e".
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.CrLf">
      <summary>
            Carriage return followed by line feed character: "\x000d\x000a" or "\r\n". 
            Not used as such in Microsoft Word documents, but commonly used in text files for paragraph breaks.
            </summary>
    </member>
    <member name="F:Aspose.Words.ControlChar.NonBreakingSpace">
      <summary>
            Non-breaking space character: "\x00a0".
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.CellMerge">
      <summary>
            Specifies how a cell in a table is merged with other cells.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellMerge.None">
      <summary>
            The cell is not merged.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellMerge.First">
      <summary>
            The cell is the first cell in a range of merged cells.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellMerge.Previous">
      <summary>
            The cell is merged to the previous cell horizontally or vertically.
            </summary>
    </member>
    <member name="T:Aspose.Words.Body">
      <summary>
            Represents a container for the main text of a section.
            </summary>
      <remarks>
        <p>
          <b>Body</b> can contain <b>Paragraph</b> and <b>Table</b> child nodes.</p>
        <p>
          <b>Body</b> is a section-level node and can only be a child of <b>Section</b>. 
            There can only be one <b>Body</b> in a <b>Section</b>.</p>
        <p>A minimal valid <b>Body</b> needs to contain at least one <b>Paragraph</b>.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Body.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Body</b> class.
            </summary>
      <remarks>
        <p>When <b>Body</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Body</b> to a <b>Section</b> use Section.InsertAfter or Section.InsertBefore.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Body.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitBodyStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitBodyEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Body.EnsureMinimum">
      <summary>
            Makes sure the content of <see cref="T:Aspose.Words.Body" /> is valid according to Microsoft Word.
            </summary>
      <remarks>
        <p>If the last child node of the <see cref="T:Aspose.Words.Body" /> is not a paragraph,
            creates and appends one empty <see cref="T:Aspose.Words.Paragraph" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Body.NodeType">
      <summary>
            Returns <b>NodeType.Body</b>.
            </summary>
    </member>
    <member name="T:Aspose.Words.Markup.CustomXmlProperty">
      <summary>
            Represents a single custom XML attribute or a smart tag property.
            </summary>
      <remarks>
        <para>Used as an item of a <see cref="T:Aspose.Words.Markup.CustomXmlPropertyCollection" /> collection.</para>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlProperty.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Aspose.Words.Markup.CustomXmlProperty.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="name">The name of the property. Cannot be null.</param>
      <param name="uri">The namespace URI of the property. Cannot be null.</param>
      <param name="value">The value of the property. Cannot be null.</param>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlProperty.Name">
      <summary>
            Specifies the name of the custom XML attribute or smart tag property.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlProperty.Uri">
      <summary>
            Gets or sets the namespace URI of the custom XML attribute or smart tag property.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Markup.CustomXmlProperty.Value">
      <summary>
            Gets or sets the value of the custom XML attribute or smart tag property.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
        <para>Default is empty string.</para>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Lists.ListTemplate">
      <summary>
            Specifies one of the predefined list formats available in Microsoft Word.
            </summary>
      <remarks>
        <p>A list template value is used as a parameter into the 
            <see cref="M:Aspose.Words.Lists.ListCollection.Add(Aspose.Words.Lists.ListTemplate)" /> method.</p>
        <p>Aspose.Words list templates correspond to the 21 list templates available
            in the Bullets and Numbering dialog box in Microsoft Word 2003.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletDefault">
      <summary>
        <p>Default bulleted list with 9 levels. Bullet of the first level is a disc, 
            bullet of the second level is a circle, bullet of the third level is a square. 
            Then formatting repeats for the remaining levels.</p>
        <p>Each level is indented to the right by 0.25" relative to the previous level.</p>
        <p>Corresponds to the 1st bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletDisk">
      <summary>
        <p>Same as BulletDefault.</p>
        <p>Corresponds to the 1st bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletCircle">
      <summary>
        <p>The bullet of the first level is a circle. The remaining levels are same as in BulletDefault.</p>
        <p>Corresponds to the 2nd bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletSquare">
      <summary>
        <p>The bullet of the first level is a square. The remaining levels are same as in BulletDefault.</p>
        <p>Corresponds to the 3rd bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletDiamonds">
      <summary>
        <p>The bullet of the first level is a 4-diamond Wingding character. The remaining levels are same as in BulletDefault.</p>
        <p>Corresponds to the 5th bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletArrowHead">
      <summary>
        <p>The bullet of the first level is an arrow head Wingding character. The remaining levels are same as in BulletDefault.</p>
        <p>Corresponds to the 6th bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.BulletTick">
      <summary>
        <p>The bullet of the first level is a tick Wingding character. The remaining levels are same as in BulletDefault.</p>
        <p>Corresponds to the 7th bulleted list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberDefault">
      <summary>
        <p>Default numbered list with 9 levels. Arabic numbering (1., 2., 3., ...) for the first level,
            lowecase letter numbering (a., b., c., ...) for the second level, 
            lowercase roman numbering (i., ii., iii., ...) for the third level. 
            Then formatting repeats for the remaining levels.</p>
        <p>Each level is indented to the right by 0.25" relative to the previous level.</p>
        <p>Corresponds to the 1st numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberArabicDot">
      <summary>
        <p>Same as NumberDefault.</p>
        <p>Corresponds to the 1st numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberArabicParenthesis">
      <summary>
        <p>The number of the first level is "1)". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 2nd numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberUppercaseRomanDot">
      <summary>
        <p>The number of the first level is "I.". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 3rd numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberUppercaseLetterDot">
      <summary>
        <p>The number of the first level is "A.". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 4th numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberLowercaseLetterParenthesis">
      <summary>
        <p>The number of the first level is "a)". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 5th numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberLowercaseLetterDot">
      <summary>
        <p>The number of the first level is "a.". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 6th numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.NumberLowercaseRomanDot">
      <summary>
        <p>The number of the first level is "i.". The remaining levels are same as in NumberDefault.</p>
        <p>Corresponds to the 7th numbered list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineNumbers">
      <summary>
        <p>An outline list with levels numbered "1), a), i), (1), (a), (i), 1., a., i.".</p>
        <p>Corresponds to the 1st outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineLegal">
      <summary>
        <p>An outline list with levels are numbered "1., 1.1., 1.1.1, ...".</p>
        <p>Corresponds to the 2nd outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineBullets">
      <summary>
        <p>An outline lists with various bullets for different levels.</p>
        <p>Corresponds to the 3rd outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineHeadingsArticleSection">
      <summary>
        <p>An outline list with levels linked to Heading styles.</p>
        <p>Corresponds to the 4th outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineHeadingsLegal">
      <summary>
        <p>An outline list with levels linked to Heading styles.</p>
        <p>Corresponds to the 5th outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineHeadingsNumbers">
      <summary>
        <p>An outline list with levels linked to Heading styles.</p>
        <p>Corresponds to the 6th outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListTemplate.OutlineHeadingsChapter">
      <summary>
        <p>An outline list with levels linked to Heading styles.</p>
        <p>Corresponds to the 7th outline list template in the Bullets and Numbering dialog box in Microsoft Word.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.WrapType">
      <summary>
            Specifies how text is wrapped around a shape or picture.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.WrapType" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.None">
      <summary>
            No text wrapping around the shape. The shape is placed behind or in front of text.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.Inline">
      <summary>
            The shape remains on the same layer as text and treated as a character.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.TopBottom">
      <summary>
            The text stops at the top of the shape and restarts on the line below the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.Square">
      <summary>
            Wraps text around all sides of the square bounding box of the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.Tight">
      <summary>
            Wraps tightly around the edges of the shape, instead of wrapping around the bounding box.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapType.Through">
      <summary>
            Same as Tight, but wraps inside any parts of the shape that are open.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.Shape">
      <summary>
            Represents an object in the drawing layer, such as an AutoShape, textbox, freeform, OLE object, ActiveX control, or picture.
            </summary>
      <remarks>
        <p>Using the <see cref="T:Aspose.Words.Drawing.Shape" /> class you can create or modify shapes in a Microsoft Word document.</p>
        <p>An important property of a shape is its <see cref="P:Aspose.Words.Drawing.ShapeBase.ShapeType" />. Shapes of different
            types can have different capabilities in a Word document. For example, only image and OLE shapes
            can have images inside them. Most of the shapes can have text, but not all.</p>
        <p>Shapes that can have text, can contain <see cref="T:Aspose.Words.Paragraph" /> and <see cref="T:Aspose.Words.Tables.Table" /> nodes 
            as children.</p>
        <seealso cref="T:Aspose.Words.Drawing.ShapeBase" />
        <seealso cref="T:Aspose.Words.Drawing.GroupShape" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.Shape.#ctor">
      <summary>
            Ctor for creating special nodes that never need to know the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.Drawing.Shape.#ctor(Aspose.Words.Document)">
      <summary>
            Ctor. Use this internally only.
            </summary>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.Shape.#ctor(Aspose.Words.Document,Aspose.Words.Drawing.ShapeType)">
      <summary>
            Creates a new shape object.
            </summary>
      <remarks>
        <p>You should specify desired shape properties after you created a shape.</p>
      </remarks>
      <param name="doc">The owner document.</param>
      <param name="shapeType">The type of the shape to create.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.Shape.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitShapeStart(Aspose.Words.Drawing.Shape)" />, then calls <see cref="M:Aspose.Words.Node.Accept(Aspose.Words.DocumentVisitor)" /> 
            for all child nodes of the shape and calls <see cref="M:Aspose.Words.DocumentVisitor.VisitShapeEnd(Aspose.Words.Drawing.Shape)" /> at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.Shape.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.Shape" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.StoryType">
      <summary>
            Returns <see cref="F:Aspose.Words.StoryType.Textbox" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.Filled">
      <summary>
            Determines whether the closed path of the shape will be filled.
            </summary>
      <remarks>
        <p>This is a shortcut to the <see cref="P:Aspose.Words.Drawing.Fill.On" /> property.</p>
        <p>The default value is <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.FillColor">
      <summary>
            Defines the brush color that fills the closed path of the shape.
            </summary>
      <remarks>
        <p>This is a shortcut to the <see cref="P:Aspose.Words.Drawing.Fill.Color" /> property.</p>
        <p>The default value is 
            <see cref="P:System.Drawing.Color.White" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.Stroked">
      <summary>
            Defines whether the path will be stroked.
            </summary>
      <remarks>
        <p>This is a shortcut to the <see cref="P:Aspose.Words.Drawing.Stroke.On" /> property.</p>
        <p>The default value is <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.StrokeWeight">
      <summary>
            Defines the brush thickness that strokes the path of a shape in points.
            </summary>
      <remarks>
        <p>This is a shortcut to the <see cref="P:Aspose.Words.Drawing.Stroke.Weight" /> property.</p>
        <p>The default value is 0.75.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.StrokeColor">
      <summary>
            Defines the color of a stroke.
            </summary>
      <remarks>
        <p>This is a shortcut to the <see cref="P:Aspose.Words.Drawing.Stroke.Color" /> property.</p>
        <p>The default value is 
            <see cref="P:System.Drawing.Color.Black" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.Stroke">
      <summary>
            Defines a stroke for a shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.Fill">
      <summary>
            Defines a fill for a shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.HasImage">
      <summary>
            Returns true if the shape has image bytes or links an image.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.ImageData">
      <summary>
            Provides access to the image of the shape. For a shape that cannot have an image, returns null.
            </summary>
      <remarks>
        <p>Not all shapes can have an image. If a shape cannot have an image this property returns null.</p>
        <p>Whether a shape can have an image or not depends on its <see cref="P:Aspose.Words.Drawing.ShapeBase.ShapeType" />. 
            Only <see cref="F:Aspose.Words.Drawing.ShapeType.Image" />, <see cref="F:Aspose.Words.Drawing.ShapeType.OleControl" />, <see cref="F:Aspose.Words.Drawing.ShapeType.OleObject" />
            can have an image.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.OleFormat">
      <summary>
            Provides access to the OLE data of a shape. For a shape that is not an OLE object or ActiveX control, returns null.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.TextBox">
      <summary>
            Defines attributes that specify how text is displayed in a shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.TextPath">
      <summary>
            Defines the text of the text path (of a WordArt object).
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.FirstParagraph">
      <summary>
            Gets the first paragraph in the shape.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.Shape.LastParagraph">
      <summary>
            Gets the last paragraph in the shape. 
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.Fill">
      <summary>
            Defines a fill for a shape.
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.Fill" /> property to access fill properties of a shape.
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.Fill" /> class directly.</p>
        <p>Although the <see cref="T:Aspose.Words.Drawing.Fill" /> class provides properties to specify solid color fill only, 
            all of the more complex fill types, including as gradient, pattern and texture are fully preserved 
            during document open-save cycles.</p>
        <seealso cref="P:Aspose.Words.Drawing.Shape.Fill" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Fill.Color">
      <summary>
            Defines the color of a fill.
            </summary>
      <remarks>
        <p>The default value is 
            <see cref="P:System.Drawing.Color.White" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Fill.Opacity">
      <summary>
            Defines the transparency of a fill. Valid range from 0 to 1, where 0 is fully transparent and 1 is fully opaque.
            </summary>
      <remarks>
        <p>The default value is 1.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Fill.On">
      <summary>
            Determines whether the shape will be filled.
            </summary>
      <remarks>
        <p>The default value is <b>true</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.Fill.ImageBytes">
      <summary>
            Gets the raw bytes of the fill texture or pattern.
            </summary>
      <remarks>
        <p>The default value is null.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.BookmarkEnd">
      <summary>
            Represents an end of a bookmark in a Word document.
            </summary>
      <remarks>
        <p>A complete bookmark in a Word document consists of a <see cref="T:Aspose.Words.BookmarkStart" />
            and a matching <see cref="T:Aspose.Words.BookmarkEnd" /> with the same bookmark name.</p>
        <p>
          <see cref="T:Aspose.Words.BookmarkStart" /> and <see cref="T:Aspose.Words.BookmarkEnd" /> are just markers inside a document
            that specify where the bookmark starts and ends.</p>
        <p>Use the <see cref="T:Aspose.Words.Bookmark" /> class as a "facade" to work with a bookmark
            as a single object.</p>
        <note>Currently bookmarks are supported only at the inline-level, that is inside <see cref="T:Aspose.Words.Paragraph" />,
            but bookmark start and bookmark end can be in different paragraphs.</note>
      </remarks>
    </member>
    <member name="M:Aspose.Words.BookmarkEnd.#ctor(Aspose.Words.Document,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Words.BookmarkEnd" /> class.
            </summary>
      <param name="doc">The owner document.</param>
      <param name="name">The name of the bookmark. Cannot be null.</param>
    </member>
    <member name="M:Aspose.Words.BookmarkEnd.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitBookmarkEnd(Aspose.Words.BookmarkEnd)" />.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>False if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="P:Aspose.Words.BookmarkEnd.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.BookmarkEnd" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.BookmarkEnd.Name">
      <summary>
            Gets the name of the bookmark.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Viewer.PageNavigator">
      <summary>
            Allows to navigate through the document pages.
            </summary>
      <remarks>
        <b>PageNavigator</b> allows to navigate through document pages. It accepts a <b>DocumentRenderer</b>
            object and supports various methods to move to previous, next, firs, last, and specified page.
            Use the <b>CurrentPage</b> property to obtain the current page.
            </remarks>
      <preliminary />
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.#ctor(Aspose.Words.Viewer.DocumentRenderer)">
      <summary>
            Constructs a page navigator instance.
            </summary>
      <param name="renderer">
        <b>DocumentRenderer</b> used to render the document.</param>
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.MoveToPreviousPage">
      <summary>
            Moves to previous page.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.MoveToNextPage">
      <summary>
            Moves to next page.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.MoveToFirstPage">
      <summary>
            Moves to first page.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.MoveToLastPage">
      <summary>
            Moves to last page.
            </summary>
    </member>
    <member name="M:Aspose.Words.Viewer.PageNavigator.GoToPage(System.Int32)">
      <summary>
            Goes to a page with the specified number.
            </summary>
      <param name="pageNumber">Desired page number.</param>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.Renderer">
      <summary>
            Returns the <b>DocumentRenderer</b> object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.PageCount">
      <summary>
            Gets total number of pages.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.CurrentPage">
      <summary>
            Gets a <b>Bitmap</b> object that represents current page.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.CurrentPageNumber">
      <summary>
            Gets number of current page.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.IsFirstPage">
      <summary>
            Returns true if current page is first.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.IsLastPage">
      <summary>
            Returns true if current page is last.
            </summary>
    </member>
    <member name="P:Aspose.Words.Viewer.PageNavigator.PageCounterString">
      <summary>
            Returns a string "Page x of y" where <i>x</i> is current page number and <i>y</i> is total number of pages.
            </summary>
    </member>
    <member name="T:Aspose.Words.PageBorderAppliesTo">
      <summary>
            Specifies which pages the page border is printed on.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="P:Aspose.Words.PageSetup.BorderAppliesTo" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.PageBorderAppliesTo.AllPages">
      <summary>
            Page border is shown on all pages of the section.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageBorderAppliesTo.FirstPage">
      <summary>
            Page border is shown on the first page of the section only.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageBorderAppliesTo.OtherPages">
      <summary>
            Page border is shown on all pages except the first page of the section.
            </summary>
    </member>
    <member name="T:Aspose.Words.Properties.DocumentProperty">
      <summary>
            Represents a custom or built-in document property.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Properties.DocumentPropertyCollection" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentProperty.ToString">
      <summary>
            Returns the property value as a string formatted according to the current locale.
            </summary>
      <remarks>
        <p>Converts a boolean property into "Y" or "N". 
            Converts a date property into a short date string.
            For all other types converts a property using Object.ToString().</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentProperty.ToInt">
      <summary>
            Returns the property value as integer.
            </summary>
      <remarks>
            Throws an exception if the property type is not <see cref="F:Aspose.Words.Properties.PropertyType.Number" />.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentProperty.ToDouble">
      <summary>
            Returns the property value as double.
            </summary>
      <remarks>
            Throws an exception if the property type is not <see cref="F:Aspose.Words.Properties.PropertyType.Number" />.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentProperty.ToDateTime">
      <summary>
            Returns the property value as DateTime in UTC.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not <see cref="F:Aspose.Words.Properties.PropertyType.DateTime" />.</p>
        <p>Microsoft Word stores only the date part (no time) for custom date properties.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.DocumentProperty.ToBool">
      <summary>
            Returns the property value as bool.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not <see cref="F:Aspose.Words.Properties.PropertyType.Boolean" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentProperty.Name">
      <summary>
            Returns the name of the property.
            </summary>
      <remarks>
        <para>Cannot be null and cannot be an empty string.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentProperty.Value">
      <summary>
            Gets or sets the value of the property.
            </summary>
      <remarks>
        <para>Cannot be null.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Properties.DocumentProperty.Type">
      <summary>
            Gets the data type of the property.
            </summary>
    </member>
    <member name="T:Aspose.Words.Lists.NamespaceDoc">
      <summary>
        <p>The <b>Aspose.Words.Lists</b> namespace contains classes for working
            with bulleted and numbered lists defined in a document.</p>
      </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.TextBoxWrapMode">
      <summary>
            Specifies how text wraps inside a shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextBoxWrapMode.Square">
      <summary>
            Text wraps inside a shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.TextBoxWrapMode.None">
      <summary>
            Text does not wrap inside a shape.
            </summary>
    </member>
    <member name="T:Aspose.Words.ViewOptions">
      <summary>
            Provides various options that control how a document is shown in Microsoft Word.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.ViewOptions" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.ViewOptions.ViewType">
      <summary>
            Controls the view mode in Microsoft Word.
            </summary>
    </member>
    <member name="P:Aspose.Words.ViewOptions.ZoomType">
      <summary>
            Gets or sets a zoom value based on the size of the window.
            </summary>
    </member>
    <member name="P:Aspose.Words.ViewOptions.ZoomPercent">
      <summary>
            Gets or sets the percentage (between 10 and 500) at which you want to view your document.
            </summary>
    </member>
    <member name="P:Aspose.Words.ViewOptions.DoNotDisplayPageBoundaries">
      <summary>
            Turns off display of the space between the top of the text and the top edge of the page.
            </summary>
    </member>
    <member name="P:Aspose.Words.ViewOptions.DisplayBackgroundShape">
      <summary>
            Controls display of the background shape in print layout view.
            </summary>
    </member>
    <member name="P:Aspose.Words.ViewOptions.FormsDesign">
      <summary>
            Specifies whether the document is in forms design mode. 
            </summary>
      <remarks>
        <p>Currently works only for documents in WordML format.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.ProtectionType">
      <summary>
            Protection type for a document.
            </summary>
    </member>
    <member name="F:Aspose.Words.ProtectionType.AllowOnlyComments">
      <summary>
            User can only modify comments in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.ProtectionType.AllowOnlyFormFields">
      <summary>
            User can only enter data in the form fields in the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.ProtectionType.AllowOnlyRevisions">
      <summary>
            User can only add revision marks to the document.
            </summary>
    </member>
    <member name="F:Aspose.Words.ProtectionType.ReadOnly">
      <summary>
            No changes are allowed to the document. Available since Microsoft Word 2003.
            </summary>
    </member>
    <member name="F:Aspose.Words.ProtectionType.NoProtection">
      <summary>
            The document is not protected.
            </summary>
    </member>
    <member name="T:Aspose.Words.Document">
      <summary>
            Represents a Word document.
            </summary>
      <remarks>
        <p>The <b>Document</b> is a central object in the Aspose.Words library.</p>
        <p>To load an existing document in any of the <see cref="T:Aspose.Words.LoadFormat" /> formats, pass a file name 
            or a stream into one of the <b>Document</b> constructors. To create a blank document, call the 
            constructor without parameters.</p>
        <p>Use one of the Save method overloads to save the document in any of the 
            <see cref="T:Aspose.Words.SaveFormat" />formats. 
            When the document is saved in Aspose.Pdf.Xml format, it can be converted into PDF using 
            <see href="http://www.aspose.com/Products/Aspose.Pdf/">Aspose.Pdf</see> (purchased separately).</p>
        <p>
          <see cref="P:Aspose.Words.Document.MailMerge" /> is the Aspose.Words's reporting engine that allows to populate
            reports designed in Microsoft Word with data from various data sources quickly and easily.
            The data can be from a DataSet, DataTable, DataView, IDataReader or an array of values.
            <b>MailMerge</b> will go through the records found in the data source and insert them into 
            mail merge fields in the document growing it as necessary.</p>
        <p>
          <b>Document</b> stores document-wide information such as <see cref="P:Aspose.Words.Document.Styles" />, 
            <see cref="P:Aspose.Words.Document.BuiltInDocumentProperties" />, <see cref="P:Aspose.Words.Document.CustomDocumentProperties" />, lists and macros. 
            Most of these objects are accessible via the corresponding properties of the <b>Document</b>.</p>
        <p>The <b>Document</b> is a root node of a tree that contains all other nodes of the document.
            The tree is a Composite design pattern and in many ways similar to XmlDocument. 
            The content of the document can be manipulated freely programmatically:</p>
        <list type="bullet">
          <item>The nodes of the document can be accessed via typed collections, for example <see cref="P:Aspose.Words.Document.Sections" />,
            <see cref="T:Aspose.Words.ParagraphCollection" /> etc.</item>
          <item>The nodes of the document can be selected by their node type using 
            <see cref="M:Aspose.Words.CompositeNode.GetChildNodes(Aspose.Words.NodeType,System.Boolean,System.Boolean)" />
            or using an XPath query with <see cref="M:Aspose.Words.CompositeNode.SelectNodes(System.String)" /> or <see cref="M:Aspose.Words.CompositeNode.SelectSingleNode(System.String)" />.</item>
          <item>Content nodes can be added or removed from anywhere in the document using 
            <see cref="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)" />, <see cref="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)" />, 
            <see cref="M:Aspose.Words.CompositeNode.RemoveChild(Aspose.Words.Node)" /> and other 
            methods provided by the base class <see cref="T:Aspose.Words.CompositeNode" />.</item>
          <item>The formatting attributes of each node can be changed via the properties of that node.</item>
        </list>
        <p>Consider using <see cref="T:Aspose.Words.DocumentBuilder" /> that simplifies the task of programmatically creating 
            or populating the document tree.</p>
        <p>The <b>Document</b> can contain only <see cref="T:Aspose.Words.Section" /> objects.</p>
        <p>In Microsoft Word, a valid document needs to have at least one section.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.Boolean)">
      <summary>
            Ctor that allows to create a completely empty document node or load a blank document.
            </summary>
    </member>
    <member name="M:Aspose.Words.Document.#ctor">
      <overloads>Creates or loads a document.</overloads>
      <summary>
            Creates a blank Word document.
            </summary>
      <remarks>
        <p>The document paper size is Letter by default. If you want to change page setup, use
            <see cref="P:Aspose.Words.Section.PageSetup">Section.PageSetup</see>.</p>
        <p>After creation, you can use <see cref="T:Aspose.Words.DocumentBuilder" /> to add document content easily.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.String)">
      <summary>
            Opens an existing document from a file. Automatically detects the file format.
            </summary>
      <param name="fileName">File name of the document to open.</param>
      <exception cref="T:System.ArgumentException">The name of the file cannot be null or empty string.</exception>
      <exception cref="T:Aspose.Words.UnsupportedFileFormatException">The document format is not recognized or not supported.</exception>
      <exception cref="T:Aspose.Words.FileCorruptedException">The document appears to be corrupted and cannot be loaded.</exception>
      <exception cref="T:Aspose.Words.PleaseReportException">There is a problem with the document and it should be reported to Aspose.Words developers.</exception>
      <exception cref="T:System.IO.IOException">There is an input/output exception.</exception>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.String,Aspose.Words.LoadFormat,System.String)">
      <summary>
            Opens an existing document from a file.
            </summary>
      <remarks>
        <remarks>
          <p>
If you know the format of the document upfront, you can use this constructor
and specify the format. It will work slightly faster than
other constructors that detect the format of the file automatically.
</p>
        </remarks>
        <remarks>
          <p>Use this constructor to open an encrypted Microsoft Word document. You need to know
the password to open an encrypted document. If the document is not encrypted, pass null or empty string.</p>
        </remarks>
      </remarks>
      <param name="fileName">File name of the document to open.</param>
      <param name="loadFormat">Specifies the format of the document.</param>
      <param name="password">A password to open an encrypted Word document. Pass null or empty string
            if the document is not encrypted.</param>
      <exception cref="T:System.ArgumentException">The name of the file cannot be null or empty string.</exception>
      <exception cref="T:Aspose.Words.UnsupportedFileFormatException">The document format is not recognized or not supported.</exception>
      <exception cref="T:Aspose.Words.FileCorruptedException">The document appears to be corrupted and cannot be loaded.</exception>
      <exception cref="T:Aspose.Words.PleaseReportException">There is a problem with the document and it should be reported to Aspose.Words developers.</exception>
      <exception cref="T:System.IO.IOException">There is an input/output exception.</exception>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.IO.Stream)">
      <summary>
            Opens an existing document from a stream. Automatically detects the file format.
            </summary>
      <remarks>
        <remarks>
          <p>
The document must be stored at the beginning of the stream. 
The stream must support random positioning.</p>
        </remarks>
      </remarks>
      <param name="stream">Stream where to load the document from.</param>
      <exception cref="T:System.ArgumentNullException">The stream cannot be null.</exception>
      <exception cref="T:Aspose.Words.UnsupportedFileFormatException">The document format is not recognized or not supported.</exception>
      <exception cref="T:Aspose.Words.FileCorruptedException">The document appears to be corrupted and cannot be loaded.</exception>
      <exception cref="T:Aspose.Words.PleaseReportException">There is a problem with the document and it should be reported to Aspose.Words developers.</exception>
      <exception cref="T:System.IO.IOException">There is an input/output exception.</exception>
      <exception cref="T:System.NotSupportedException">The stream does not support reading or seeking.</exception>
      <exception cref="T:System.ObjectDisposedException">The stream is a disposed object.</exception>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.IO.Stream,System.String)">
      <summary>
             Opens an existing document from a stream. Automatically detects the file format.
             </summary>
      <remarks>
        <remarks>
          <p>
The document must be stored at the beginning of the stream. 
The stream must support random positioning.</p>
        </remarks>
        <remarks>
          <p>The <i>baseUri</i> parameter is used to resolve relative URIs found in the document 
to absolute URIs in the following cases:</p>
          <list type="number">
            <item>When loading an HTML document from a stream and the document contains images with 
relative URIs and does not have a base URI specified in the BASE HTML element, 
the <i>baseUri</i> parameter is used to find the images.</item>
            <item>When saving in HTML or PDF format, <i>baseUri</i> is used to find images linked in the 
document using relative paths.</item>
          </list>
        </remarks>
      </remarks>
      <param name="stream">The stream where to load the document from.</param>
      <param name="baseUri">The base URI. Can be null or empty string.</param>
      <exception cref="T:System.ArgumentNullException">The stream cannot be null.</exception>
      <exception cref="T:Aspose.Words.UnsupportedFileFormatException">The document format is not recognized or not supported.</exception>
      <exception cref="T:Aspose.Words.FileCorruptedException">The document appears to be corrupted and cannot be loaded.</exception>
      <exception cref="T:Aspose.Words.PleaseReportException">There is a problem with the document and it should be reported to Aspose.Words developers.</exception>
      <exception cref="T:System.IO.IOException">There is an input/output exception.</exception>
      <exception cref="T:System.NotSupportedException">The stream does not support reading or seeking.</exception>
      <exception cref="T:System.ObjectDisposedException">The stream is a disposed object.</exception>
    </member>
    <member name="M:Aspose.Words.Document.#ctor(System.IO.Stream,System.String,Aspose.Words.LoadFormat,System.String)">
      <summary>
            Opens an existing document from a stream. 
            </summary>
      <remarks>
        <remarks>
          <p>
The document must be stored at the beginning of the stream. 
The stream must support random positioning.</p>
        </remarks>
        <remarks>
          <p>
If you know the format of the document upfront, you can use this constructor
and specify the format. It will work slightly faster than
other constructors that detect the format of the file automatically.
</p>
        </remarks>
        <remarks>
          <p>Use this constructor to open an encrypted Microsoft Word document. You need to know
the password to open an encrypted document. If the document is not encrypted, pass null or empty string.</p>
        </remarks>
        <remarks>
          <p>The <i>baseUri</i> parameter is used to resolve relative URIs found in the document 
to absolute URIs in the following cases:</p>
          <list type="number">
            <item>When loading an HTML document from a stream and the document contains images with 
relative URIs and does not have a base URI specified in the BASE HTML element, 
the <i>baseUri</i> parameter is used to find the images.</item>
            <item>When saving in HTML or PDF format, <i>baseUri</i> is used to find images linked in the 
document using relative paths.</item>
          </list>
        </remarks>
      </remarks>
      <param name="stream">The stream where to load the document from.</param>
      <param name="baseUri">The base URI. Can be null or empty string. </param>
      <param name="loadFormat">A <see cref="T:Aspose.Words.LoadFormat" /> value that
            specifies the format of the document.</param>
      <param name="password">A password to open an encrypted Word document. Pass null or empty string
            if the document is not encrypted.</param>
      <exception cref="T:System.ArgumentNullException">The stream cannot be null.</exception>
      <exception cref="T:Aspose.Words.UnsupportedFileFormatException">The document format is not recognized or not supported.</exception>
      <exception cref="T:Aspose.Words.FileCorruptedException">The document appears to be corrupted and cannot be loaded.</exception>
      <exception cref="T:Aspose.Words.PleaseReportException">There is a problem with the document and it should be reported to Aspose.Words developers.</exception>
      <exception cref="T:System.IO.IOException">There is an input/output exception.</exception>
      <exception cref="T:System.NotSupportedException">The stream does not support reading or seeking.</exception>
      <exception cref="T:System.ObjectDisposedException">The stream is a disposed object.</exception>
    </member>
    <member name="M:Aspose.Words.Document.Clone(System.Boolean)">
      <summary>
            Creates a duplicate of the document.
            </summary>
      <remarks>
        <p>If you need to generate many documents from a single document,
            just load the document into memory once, clone it and populate the cloned
            document with your data. This speeds up generation of documents because there is 
            no need to load and parse the document from file every time.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the content of the document; 
            false to clone only the document node and document-wide objects styles, lists, document properties etc.</param>
      <returns>The cloned document.</returns>
    </member>
    <member name="M:Aspose.Words.Document.Clone">
      <summary>
            Performs a deep copy of the <see cref="T:Aspose.Words.Document" />.
            </summary>
      <returns>The cloned document.</returns>
      <dev>Kept to remain compatiable with the old API.</dev>
    </member>
    <member name="M:Aspose.Words.Document.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitDocumentStart, then calls Accept for all child nodes of the document
            and calls DocumentVisitor.VisitDocumentEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Document.AppendDocument(Aspose.Words.Document,Aspose.Words.ImportFormatMode)">
      <summary>
            Appends the specified document to the end of this document.
            </summary>
      <param name="srcDoc">The document to append.</param>
      <param name="importFormatMode">Specifies how to merge style formatting that clashes.</param>
    </member>
    <member name="M:Aspose.Words.Document.DetectFileFormat(System.String)">
      <summary>
            Detects and returns the format of a document stored in a disk file.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>A <see cref="T:Aspose.Words.LoadFormat" /> value that indicates the detected file format.</returns>
    </member>
    <member name="M:Aspose.Words.Document.DetectFileFormat(System.IO.Stream)">
      <summary>
            Detects and returns the format of a document stored in a stream.
            </summary>
      <param name="stream">The stream.</param>
      <remarks>
        <para>The stream must be positioned at the beginning of the document.</para>
        <para>When this method returns, the position in the stream is restored to the original position.</para>
      </remarks>
      <returns>A <see cref="T:Aspose.Words.LoadFormat" /> value that indicates the detected file format.</returns>
    </member>
    <member name="M:Aspose.Words.Document.Save(System.String)">
      <overloads>Saves the document.</overloads>
      <summary>
            Saves the document to a file. Automatically determine the file format from the extension.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Document.SaveOptions" /> allows to specify additional options when saving a file.</p>
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
        <seealso cref="P:Aspose.Words.Document.IsTemplate" />
      </remarks>
      <param name="fileName">The name for the document. If a document with the 
            specified file name already exists, the existing document is overwritten.</param>
    </member>
    <member name="M:Aspose.Words.Document.Save(System.String,Aspose.Words.SaveFormat)">
      <summary>
            Saves the document with a new name or format.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Document.SaveOptions" /> allows to specify additional options when saving a file.</p>
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
        <seealso cref="P:Aspose.Words.Document.IsTemplate" />
      </remarks>
      <param name="fileName">The name for the document. If a document with the 
            specified file name already exists, the existing document is overwritten.</param>
      <param name="fileFormat">A <see cref="T:Aspose.Words.SaveFormat" /> value that
            specifies the format in which the document is saved.
            </param>
    </member>
    <member name="M:Aspose.Words.Document.Save(System.IO.Stream,Aspose.Words.SaveFormat)">
      <summary>
            Saves the document to a stream.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Document.SaveOptions" /> allows to specify additional options when saving a file.</p>
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
        <seealso cref="P:Aspose.Words.Document.IsTemplate" />
      </remarks>
      <param name="stream">Stream where to save the document.</param>
      <param name="saveFormat">
            A <see cref="T:Aspose.Words.SaveFormat" /> value that specifies the format in which the document is saved. 
            </param>
      <seealso cref="P:Aspose.Words.Document.IsTemplate" />
    </member>
    <member name="M:Aspose.Words.Document.Save(System.Object,Aspose.Words.SaveFormat)">
      <summary>
            Saves the document to a file or to a stream. Use from COM clients (ASP for example).
            </summary>
      <remarks>
        <p>Use this overload if you want to save the document to a .NET stream
            or a file from an ASP page or other COM client.</p>
        <p>Note that there are several Save overloads and for COM clients this method will 
            be available as <b>Save_4</b>.</p>
      </remarks>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Document.SaveOptions" /> allows to specify additional options when saving a file.</p>
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
        <seealso cref="P:Aspose.Words.Document.IsTemplate" />
      </remarks>
      <example>
        <code>
            [ASP]
            
            &lt;%@ LANGUAGE="VBScript" %&gt;
            &lt;%
            
            Option Explicit
            
            Dim doc
            Set doc = CreateObject("Aspose.Words.Document")
            
            'Create a .NET memory stream to save the document to.
            Dim stream
            Set stream = CreateObject("System.IO.MemoryStream")
            
            'Save the document to the stream.
            '0 save in DOC format
            '1 - TXT format
            '3 - HTML format
            doc.Save_4 stream, 0
            
            'Specify the document type.
            Response.ContentType = "application/msword"
            'Other options:
            'Response.ContentType = "text/plain"
            'Response.ContentType = "text/html"
            
            'Specify how the document is sent to the browser.
            Response.AddHeader "content-disposition","attachment; filename=MyDocument.doc"
            'Another option could be:
            'Response.AddHeader("content-disposition","inline; filename=MyDocument.doc"); 
            
            'Get data bytes from the stream and send it to the response.
            Dim bytes
            bytes = stream.ToArray()
            Response.BinaryWrite(bytes)
            
            Response.End
            %&gt;
            </code>
      </example>
      <param name="destination">Can be a file name or a <see cref="T:System.IO.Stream" />.</param>
      <param name="fileFormat">The format in which to save the document.</param>
    </member>
    <member name="M:Aspose.Words.Document.Save(System.String,Aspose.Words.SaveFormat,Aspose.Words.SaveType,System.Web.HttpResponse)">
      <summary>
            Sends the document to the client browser.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Document.SaveOptions" /> allows to specify additional options when saving a file.</p>
        <seealso cref="P:Aspose.Words.Document.SaveOptions" />
        <seealso cref="P:Aspose.Words.Document.IsTemplate" />
      </remarks>
      <param name="fileName">The name for the document that will appear at the client browser.
            The name should not contain path.</param>
      <param name="fileFormat">A <see cref="T:Aspose.Words.SaveFormat" /> value that
            specifies the format in which to send the document.</param>
      <param name="saveType">A <see cref="T:Aspose.Words.SaveType" /> value that
            specifies how the document is presented at the client browser.</param>
      <param name="response">Response object where to save the document.</param>
    </member>
    <member name="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean)">
      <overloads>Imports a node from another document to the current document.</overloads>
      <summary>
        <P>Imports a node from another document to the current document.</P>
      </summary>
      <remarks>
        <p>This method uses the <see cref="F:Aspose.Words.ImportFormatMode.UseDestinationStyles">ImportFormatMode.UseDestinationStyles</see> 
            option to resolve formatting.</p>
        <p>Importing a node creates a copy of the source node belonging to the importing document. 
The returned node has no parent. The source node is not altered or removed from the original document.</p>
        <p>Before a node from another document can be inserted into this document, it must be imported.
During import, document-specific properties such as references to styles and lists are translated
from the original to the importing document. After the node was imported, it can be inserted
into the appropriate place in the document using <see cref="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)" /> or 
<see cref="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)" />.</p>
        <p>If the source node already belongs to the destination document, then simply a deep clone
of the source node is created.</p>
        <seealso cref="T:Aspose.Words.NodeImporter" />
      </remarks>
      <param name="srcNode">The node being imported.</param>
      <param name="isImportChildren">True to import all child nodes recursively; otherwise, false.</param>
      <returns>The cloned node that belongs to the current document.</returns>
    </member>
    <member name="M:Aspose.Words.Document.ImportNode(Aspose.Words.Node,System.Boolean,Aspose.Words.ImportFormatMode)">
      <summary>
        <P>Imports a node from another document to the current document with an option to control formatting.</P>
      </summary>
      <remarks>
        <p>This overload is useful to control how styles and list formatting are imported.</p>
        <p>Importing a node creates a copy of the source node belonging to the importing document. 
The returned node has no parent. The source node is not altered or removed from the original document.</p>
        <p>Before a node from another document can be inserted into this document, it must be imported.
During import, document-specific properties such as references to styles and lists are translated
from the original to the importing document. After the node was imported, it can be inserted
into the appropriate place in the document using <see cref="M:Aspose.Words.CompositeNode.InsertBefore(Aspose.Words.Node,Aspose.Words.Node)" /> or 
<see cref="M:Aspose.Words.CompositeNode.InsertAfter(Aspose.Words.Node,Aspose.Words.Node)" />.</p>
        <p>If the source node already belongs to the destination document, then simply a deep clone
of the source node is created.</p>
        <seealso cref="T:Aspose.Words.ImportFormatMode" />
        <seealso cref="T:Aspose.Words.NodeImporter" />
      </remarks>
      <param name="srcNode">The node to imported.</param>
      <param name="isImportChildren">True to import all child nodes recursively; otherwise, false.</param>
      <param name="importFormatMode">Specifies how to merge style formatting that clashes.</param>
      <returns>The cloned, imported node. The node belongs to the destination document, but has no parent.</returns>
    </member>
    <member name="M:Aspose.Words.Document.EnsureMinimum">
      <summary>
            If the document contains no sections, creates one section with one paragraph.
            </summary>
    </member>
    <member name="M:Aspose.Words.Document.AcceptAllRevisions">
      <summary>
            Accepts all tracked changes in the document.
            </summary>
    </member>
    <member name="M:Aspose.Words.Document.Protect(Aspose.Words.ProtectionType)">
      <overloads>Protects the document from changes.</overloads>
      <summary>
            Protects the document from changes without changing the existing password or assigns a random password.
            </summary>
      <remarks>
        <p>When a document is protected, the user can make only limited changes, 
            such as adding annotations, making revisions, or completing a form.</p>
        <p>When you protect a document, and the document already has a protection password,
            the existing protection password is not changed.</p>
        <p>When you protect a document, and the document does not have a protection password,
            this method assigns a random password that makes it impossible to unprotect the document 
            in Microsoft Word, but you still can unprotect the document in Aspose.Words as it does not 
            require a password when unprotecting.</p>
      </remarks>
      <param name="type">Specifies the protection type for the document.</param>
    </member>
    <member name="M:Aspose.Words.Document.Protect(Aspose.Words.ProtectionType,System.String)">
      <summary>
            Protects the document from changes and optionally sets a protection password.
            </summary>
      <remarks>
        <p>When a document is protected, the user can make only limited changes, 
            such as adding annotations, making revisions, or completing a form.</p>
      </remarks>
      <param name="type">Specifies the protection type for the document.</param>
      <param name="password">The password to protect the document with.
            Specify null or empty string if you want to protect the document without a password.</param>
    </member>
    <member name="M:Aspose.Words.Document.Unprotect">
      <summary>
            Removes protection from the document. 
            </summary>
      <remarks>
        <para>This method unprotects the document even if it has a protection password.</para>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.UpdateWordCount">
      <summary>
            Updates word count properties of the document.
            </summary>
      <remarks>
        <p>
          <b>UpdateWordCount</b> recalculates and updates Characters, Words and Paragraphs
            properties in the <see cref="P:Aspose.Words.Document.BuiltInDocumentProperties" /> collection of the <b>Document</b>.</p>
        <p>Note that <b>UpdateWordCount</b> does not update number of lines and pages properties.</p>
        <p>When you use an evaluation version, the evaluation watermark will also be included 
            in the word count.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.UpdateTableLayout">
      <summary>
            Updates widths of cells and tables according to their preferred widths and content.
            </summary>
      <remarks>
        <p>You don't normally need to call this method as cell and table widths are maintained 
            automatically. You might need to call this method before exporting to PDF,
            only in rare cases where a table appear incorrectly laid out in PDF output.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.RemoveMacros">
      <summary>
            Removes all macros (the VBA project) from the document.
            </summary>
      <remarks>
        <p>By removing all macros from a document you can ensure the document contains no macro viruses.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.UpdateFields">
      <summary>
            Updates the values of document fields. Not all field types are updated.
            </summary>
      <remarks>
        <p>At the moment updates the results of DOCPROPERTY and DOCVARIABLE fields only. 
            You can update fields in a specific part of the document 
            using <see cref="M:Aspose.Words.Range.UpdateFields" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Document.JoinRunsWithSameFormatting">
      <summary>
            Joins runs with same formatting in all paragraphs of the document.
            </summary>
      <remarks>
        <p>This is an optimization method. Some documents contain adjacent runs with same formatting. 
            Usually this occurs if a document was intensively edited manually. 
            You can reduce the document size and speed up further processing by joining these runs.</p>
        <p>The operation checks every <see cref="T:Aspose.Words.Paragraph" /> node in the document for adjacent <see cref="T:Aspose.Words.Run" /> 
            nodes having identical properties. It ignores unique identifiers used to track editing sessions of run 
            creation and modification. First run in every joining sequence accumulates all text. Remaining 
            runs are deleted from the document.</p>
      </remarks>
      <returns>Number of joins performed. When <b>N</b> adjacent runs are being joined they count as <b>N - 1</b> joins.</returns>
    </member>
    <member name="P:Aspose.Words.Document.AttachedTemplate">
      <summary>
            Gets or sets the full path of the template attached to the document.
            </summary>
      <remarks>
        <p>Empty string means the document is attached to the Normal template.</p>
        <seealso cref="P:Aspose.Words.Properties.BuiltInDocumentProperties.Template" />
      </remarks>
      <exception cref="T:System.ArgumentNullException">Throws if you attempt to set to a null value.</exception>
    </member>
    <member name="P:Aspose.Words.Document.IsTemplate">
      <summary>
            Specifies whether the document will be saved as a Microsoft Word template or a normal document.
            </summary>
      <remarks>
        <para>This property allows to control whether the document will be saved as a template
            when writing to a stream. If you are writing to a file, then the file name extension
            will control whether the document is saved as a template (e.g. .DOC vs .DOT and .DOCX vs .DOTX).</para>
        <p>When any document is opened (normal or template), this property is always <b>false</b>. If you want 
            to save your document as a template, you need to set this property to <b>true</b> before saving.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.ShadeFormData">
      <summary>
            Specifies whether to turn on the gray shading on form fields.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.TrackRevisions">
      <summary>
        <b>True</b> if changes are tracked when this document is edited in Microsoft Word.
            </summary>
      <remarks>
        <p>Setting this option only instructs Microsoft Word whether the track changes
            is turned on or off. This property has no effect on changes to the document that you make
            programmatically via Aspose.Words. The changes that you make via Aspose.Words are never
            tracked as revisions.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.NodeType">
      <summary>
            Returns <b>NodeType.Document</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.BuiltInDocumentProperties">
      <summary>
            Returns a collection that represents all the built-in document properties of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.CustomDocumentProperties">
      <summary>
            Returns a collection that represents all the custom document properties of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.Variables">
      <summary>
            Returns the collection of variables added to a document or template. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.Styles">
      <summary>
            Returns a collection of styles defined in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.MailMerge">
      <summary>
            Returns a <b>MailMerge</b> object that represents the mail merge functionality for the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.ProtectionType">
      <summary>
            Gets the protection type of the document.
            </summary>
      <remarks>
        <p>This property allows to retrieve protection type currently set for the document.</p>
        <p>Use the <see cref="M:Aspose.Words.Document.Protect(Aspose.Words.ProtectionType,System.String)" /> and <see cref="M:Aspose.Words.Document.Unprotect" /> methods 
            to change protection type.</p>
        <p>When a document is protected, the user can make only limited changes, 
            such as adding annotations, making revisions, or completing a form.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.Sections">
      <summary>
            Returns a collection that represents all sections in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.FirstSection">
      <summary>
            Gets the first section in the document.
            </summary>
      <remarks>
            Returns null if there are no sections.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Document.LastSection">
      <summary>
            Gets the last section in the document.
            </summary>
      <remarks>
            Returns null if there are no sections.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Document.SaveOptions">
      <summary>
            Provides options to control how the document is saved.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.ViewOptions">
      <summary>
            Provides options to control how the document is displayed in Microsoft Word.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.CompatibilityOptions">
      <summary>
            Provides document compatibility options (that is, the user preferences entered on the <b>Compatibility</b>
            tab of the <b>Options</b> dialog in Word).
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.FootnoteOptions">
      <summary>
            Provides options that control numbering and positioning of footnotes in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.EndnoteOptions">
      <summary>
            Provides options that control numbering and positioning of endnotes in the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Document.HasRevisions">
      <summary>
            Returns <b>true</b> if the document has any tracked changes.
            </summary>
      <remarks>
        <seealso cref="M:Aspose.Words.Document.AcceptAllRevisions" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.HasMacros">
      <summary>
            Returns <b>true</b> if the document has a VBA project (macros).
            </summary>
      <remarks>
        <seealso cref="M:Aspose.Words.Document.RemoveMacros" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.VersionsCount">
      <summary>
            Gets the number of document versions that was stored in the DOC document.
            </summary>
      <remarks>
        <p>Versions in Microsoft Word are accessed via the File/Versions menu. Microsoft Word supports 
            versions only for DOC files.</p>
        <p>This property allows to detect if there were document versions stored in this document
            before it was opened in Aspose.Words. Aspose.Words provides no other support for document versions.
            If you save this document using Aspose.Words, the document will be saved without versions.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.DefaultTabStop">
      <summary>
            Gets or sets the interval (in points) between the default tab stops. 
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.TabStopCollection" />
        <seealso cref="T:Aspose.Words.TabStop" />
      </remarks>
    </member>
    <member name="E:Aspose.Words.Document.NodeInserting">
      <summary>Occurs when a node belonging to this document is about to be inserted into another node.</summary>
    </member>
    <member name="E:Aspose.Words.Document.NodeInserted">
      <summary>Occurs when a node belonging to this document has been inserted into another node.</summary>
    </member>
    <member name="E:Aspose.Words.Document.NodeRemoving">
      <summary>Occurs when a node belonging to this document is about to be removed from the document.</summary>
    </member>
    <member name="E:Aspose.Words.Document.NodeRemoved">
      <summary>Occurs when a node belonging to this document has been removed from its parent.</summary>
    </member>
    <member name="P:Aspose.Words.Document.Lists">
      <summary>
            Provides access to the list formatting used in the document.
            </summary>
      <remarks>
        <p>For more information see the description of the <see cref="T:Aspose.Words.Lists.ListCollection" /> class.</p>
        <seealso cref="T:Aspose.Words.Lists.ListCollection" />
        <seealso cref="T:Aspose.Words.Lists.List" />
        <seealso cref="T:Aspose.Words.ListFormat" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Document.OriginalFileName">
      <summary>
            Gets the original file name of the document.
            </summary>
      <remarks>
        <p>Returns null if the document was loaded from a stream or created blank.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Tables.CellVerticalAlignment">
      <summary>
            Specifies vertical justification of text inside a table cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellVerticalAlignment.Top">
      <summary>
            Text is aligned at the top of a cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellVerticalAlignment.Center">
      <summary>
            Text is aligned in the middle of a cell.
            </summary>
    </member>
    <member name="F:Aspose.Words.Tables.CellVerticalAlignment.Bottom">
      <summary>
            Text is aligned at the bottom of the cell.
            </summary>
    </member>
    <member name="T:Aspose.Words.TextColumn">
      <summary>
            Represents a single text column. <b>TextColumn</b> is a member of the <see cref="T:Aspose.Words.TextColumnCollection" /> collection. 
            The <b>TextColumns</b> collection includes all the columns in a section of a document.
            </summary>
      <remarks>
        <p>
          <b>TextColumn</b> objects are only used to specify columns with custom width and spacing. If you want
            the columns in the document to be of equal width, set TextColumns.<see cref="P:Aspose.Words.TextColumnCollection.EvenlySpaced" /> to <b>true</b>.</p>
        <p>When a new <b>TextColumn</b> is created it has its width and spacing set to zero.</p>
        <seealso cref="T:Aspose.Words.TextColumnCollection" />
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="T:Aspose.Words.Section" />
      </remarks>
      <dev>
            This is both a presentation and a model class. Represents width and spacing of a single column 
            in a section. Only used for custom width columns (not for evenly spaced columns).
            </dev>
    </member>
    <member name="P:Aspose.Words.TextColumn.Width">
      <summary>
            Gets or sets the width of the text column in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.TextColumn.SpaceAfter">
      <summary>
            Gets or sets the space between this column and the next column in points. Not required for the last column.
            </summary>
    </member>
    <member name="T:Aspose.Words.PageVerticalAlignment">
      <summary>
            Specifies vertical justification of text on each page.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="P:Aspose.Words.PageSetup.VerticalAlignment" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.PageVerticalAlignment.Bottom">
      <summary>
            Text is aligned at the bottom of the page.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageVerticalAlignment.Center">
      <summary>
            Text is aligned in the middle of the page.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageVerticalAlignment.Justify">
      <summary>
            Text is spread to fill the page.
            </summary>
    </member>
    <member name="F:Aspose.Words.PageVerticalAlignment.Top">
      <summary>
            Text is aligned at the top of the page.
            </summary>
    </member>
    <member name="T:Aspose.Words.Orientation">
      <summary>
            Specifies page orientation.
            </summary>
    </member>
    <member name="F:Aspose.Words.Orientation.Portrait">
      <summary>
            Portrait page orientation (narrow and tall).
            </summary>
    </member>
    <member name="F:Aspose.Words.Orientation.Landscape">
      <summary>
            Landscape page orientation (wide and short).
            </summary>
    </member>
    <member name="T:Aspose.Words.Properties.CustomDocumentProperties">
      <summary>
             A collection of custom document properties. 
             </summary>
      <remarks>
        <p>Each <see cref="T:Aspose.Words.Properties.DocumentProperty" /> object represents a custom property of a container document.</p>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.BuiltInDocumentProperties" />
        <seealso cref="P:Aspose.Words.Document.CustomDocumentProperties" />
      </remarks>
      <remarks>
        <p>The names of the properties are case-insensitive.</p>
        <p>The properties in the collection are sorted alphabetically by name.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Properties.CustomDocumentProperties.Add(System.String,System.String)">
      <overloads>Creates a new custom document property.</overloads>
      <summary>
            Creates a new custom document property of the <b>PropertyType.String</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.CustomDocumentProperties.Add(System.String,System.Int32)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Number</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.CustomDocumentProperties.Add(System.String,System.DateTime)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.DateTime</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.CustomDocumentProperties.Add(System.String,System.Boolean)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Boolean</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Words.Properties.CustomDocumentProperties.Add(System.String,System.Double)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Float</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="T:Aspose.Words.Reporting.MailMerge">
      <summary>
            Represents the mail merge functionality.
            </summary>
      <remarks>
        <p>For mail merge operation to work, the document should contain Word MERGEFIELD and 
            optionally NEXT fields. During mail merge operation, merge fields in the document are 
            replaced with values from your data source.</p>
        <p>There are two distinct ways to use mail merge: with mail merge regions and without.</p>
        <p>The simplest mail merge is without regions and it is very similar to how mail merge
            works in Word. Use <tt>Execute</tt> methods to merge information from some 
            data source such as <b>DataTable</b>, <b>DataView</b>, <b>IDataReader</b> or an array of objects into your document. The 
            <b>MailMerge</b> object processes all records of the data source and copies and appends 
            content of the whole document for each record.</p>
        <p>Note that when <b>MailMerge</b> object encounters a NEXT field, it selects next record 
            in the data source and continues merging without copying any content.</p>
        <p>Use <tt>ExecuteWithRegions</tt> methods to merge information into a 
            document with mail merge regions defined. You can use 
            <b>DataSet</b>, <b>DataTable</b>, <b>DataView</b> or <b>IDataReader</b> 
            as data sources for this operation.</p>
        <p>You need to use mail merge regions if you want to dynamically grow portions inside the 
            document. Without mail merge regions whole document will be repeated for every record of
            the data source.</p>
        <seealso cref="T:Aspose.Words.Document" />
        <seealso cref="P:Aspose.Words.Document.MailMerge" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(Aspose.Words.Reporting.IMailMergeDataSource)">
      <summary>
            Performs a mail merge from a custom data source.
            </summary>
      <remarks>
        <p>Use this method to fill mail merge fields in the document with values from 
            any data source such as a list or hashtable or objects. You need to write your 
            own class that implements the <see cref="T:Aspose.Words.Reporting.IMailMergeDataSource" /> interface.</p>
      </remarks>
      <param name="dataSource">An object that implements the custom mail merge data source interface.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(System.String[],System.Object[])">
      <overloads>Performs a mail merge operation.</overloads>
      <summary>
            Performs a mail merge operation for a single record.
            </summary>
      <remarks>
        <p>Use this method to fill mail merge fields in the document with values from 
            an array of objects.</p>
        <p>This method merges data for one record only. The array of field names
            and the array of values represent the data of a single record.</p>
        <p>This method does not use mail merge regions.</p>
      </remarks>
      <param name="fieldNames">Array of merge field names. Field names are not case sensitive.
            If a field name that is not found in the document is encountered, it is ignored.</param>
      <param name="values">Array of values to be inserted into the merge fields.
            Number of elements in this array must be the same as the number of elements in fieldNames.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(System.Data.DataTable)">
      <summary>
            Performs mail merge from a DataTable into the document.
            </summary>
      <remarks>
        <p>Use this method to fill mail merge fields in the document with values from a 
            <b>DataTable</b>.</p>
        <p>All records from the table are merged into the document.</p>
        <p>You can use NEXT field in the Word document to cause <b>MailMerge</b> object to select 
            next record from the <b>DataTable</b> and continue merging. 
            This can be used when creating  documents such as mailing labels.</p>
        <p>When <b>MailMerge</b> object reaches end of the main document and there are still more 
            rows in the <b>DataTable</b>, it copies entire content of 
            the main document and appends it to the end of the destination document using a section 
            break as a separator.</p>
      </remarks>
      <param name="table">Table that contains data to be inserted into mail merge fields.
            Field names are not case sensitive.
            If a field name that is not found in the document is encountered, it is ignored.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteADO(System.Object)">
      <summary>
            Performs mail merge from an ADO Recordset object into the document.
            </summary>
      <remarks>
        <p>This method is useful when you intend to use Aspose.Words classes as 
            COM objects from unmanaged code such as an application built using
            ASP or Visual Basic 6.0.</p>
        <p>For more information see description of MailMerge.Execute(DataTable).</p>
      </remarks>
      <example>
        <code>
            [VBScript]
            
            Dim RS
            Set RS = CreateObject("ADODB.Recordset")
            RS.Open _
            	"SELECT TOP 50 * FROM Customers ORDER BY Country, CompanyName", _
            	"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=Northwind.mdb"
            
            Dim License
            Set License = CreateObject("Aspose.Words.License")
            License.SetLicense "C:\MyPath\MyLicense.lic"
            
            Dim Helper 
            Set Helper = CreateObject("Aspose.Words.ComHelper")
            Dim Doc
            Set Doc = Helper.Open("CustomerLabels.doc")
            
            Doc.MailMerge.ExecuteADO RS
            Doc.Save "C:\MyPath\CustomerLabels Out VBScript.doc"
            </code>
      </example>
      <param name="recordset">ADO Recordset or Record object.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(System.Data.IDataReader)">
      <summary>
            Performs mail merge from IDataReader into the document.
            </summary>
      <remarks>
        <p>You can pass <b>SqlDataReader</b> or <b>OleDbDataReader</b> object into this
            method as a parameter because they both implemented <b>IDataReader</b> interface.</p>
        <p>Note this method does not use mail merge regions and for multiple records the 
            document will grow by repeating the whole document.</p>
      </remarks>
      <param name="dataReader">Data source for the mail merge operation.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(System.Data.DataView)">
      <summary>
            Performs mail merge from a DataView into the document.
            </summary>
      <remarks>
        <p>This method is useful if you retrieve data into a <b>DataTable</b> but then
            need to apply a filter or sort before the mail merge.</p>
        <p>Note this method does not use mail merge regions and for multiple records the 
            document will grow by repeating the whole document.</p>
      </remarks>
      <param name="dataView">Data source for the mail merge operation.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.Execute(System.Data.DataRow)">
      <summary>
            Performs mail merge from a DataRow into the document.
            </summary>
      <remarks>
        <p>Use this method to fill mail merge fields in the document with values from a <b>DataRow</b>.</p>
      </remarks>
      <param name="row">Row that contains data to be inserted into mail merge fields.
            Field names are not case sensitive.
            If a field name that is not found in the document is encountered, it is ignored.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegions(Aspose.Words.Reporting.IMailMergeDataSource)">
      <summary>
            Performs a mail merge from a custom data source with mail merge regions.
            </summary>
      <remarks>
        <p>Use this method to fill mail merge fields in the document with values from 
            any data source such as a list or hashtable or objects. You need to write your 
            own class that implements the <see cref="T:Aspose.Words.Reporting.IMailMergeDataSource" /> interface.</p>
      </remarks>
      <param name="dataSource">An object that implements the custom mail merge data source interface.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegions(System.Data.DataSet)">
      <overloads>Performs a mail merge operation into a document with mail merge regions.</overloads>
      <summary>
            Performs mail merge from a DataSet 
            into a document with mail merge regions.
            </summary>
      <remarks>
        <p>Use this method to perform mail merge from one or more tables into repeatable mail 
            merge regions in the document. The mail merge regions inside the document will dynamically
            grow to accomodate records in the corresponding tables.</p>
        <p>Every table in the DataSet must have a name.</p>
        <p>The document must have mail merge regions defined with names that refer to the tables
            in the DataSet.</p>
        <p>To specify a mail merge region in the document you need to insert two mail merge fields
            to mark beginning and end of the mail merge region.</p>
        <p>All document content that is included inside a mail merge region will be automatically 
            repeated for every record in the DataTable.</p>
        <p>To mark beginning of a mail merge region insert a MERGEFIELD with name TableStart:MyTable,
            where MyTable corresponds to one of the table names in your DataSet.</p>
        <p>To mark the end of the mail merge region insert another MERGEFIELD with name TableEnd:MyTable.</p>
        <p>To insert a MERGEFIELD in Word use Insert/Field command and select MergeField then type the
            name of the field.</p>
        <p>Note that TableStart and TableEnd fields must be inside the same section in your document.</p>
        <p>If used inside a table, TableStart and TableEnd must be inside the same row in the table.</p>
        <p>Note that mail merge regions cannot be nested inside each other and they should be well
            formed (there is always a pair of matching TableStart and TableEnd with the same table name).</p>
      </remarks>
      <param name="dataSet">DataSet that contains data to be 
            inserted into mail merge fields.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegions(System.Data.DataTable)">
      <summary>
            Performs mail merge from a DataTable 
            into the document with mail merge regions.
            </summary>
      <remarks>
        <p>The document must have a mail merge region defined with name that matches 
            <b>DataTable.TableName</b>.</p>
        <p>If there are other mail merge regions defined in the document they are left intact.
            This allows to perform several mail merge operations.</p>
      </remarks>
      <param name="dataTable">Data source for the mail merge operation. The table must
            have its <b>TableName</b> property set.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegionsADO(System.Object,System.String)">
      <summary>
            Performs mail merge from an ADO Recordset object into the document with mail merge regions.
            </summary>
      <remarks>
        <p>This method is useful when you intend to use Aspose.Words classes as 
            COM objects from unmanaged code such as an application built using
            ASP or Visual Basic 6.0.</p>
        <p>For more information see description of MailMerge.ExecuteWithRegions(DataTable).</p>
      </remarks>
      <example>
        <code>
            [VBScript]
            
            Dim RS
            Set RS = CreateObject("ADODB.Recordset")
            RS.Open _
            	"SELECT * FROM AsposeWordOrderDetails WHERE OrderId = 10444 ORDER BY ProductID", _
            	"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=Northwind.mdb"
            
            Dim Helper 
            Set Helper = CreateObject("Aspose.Words.ComHelper")
            
            Dim Doc
            Set Doc = Helper.Open("Invoice.doc")
            
            Doc.MailMerge.ExecuteWithRegionsADO RS, "OrderDetails"
            Doc.Save "Invoice Out VBScript.doc"
            </code>
      </example>
      <param name="recordset">ADO Recordset or Record object.</param>
      <param name="tableName">Name of the mail merge region in the document to populate.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegions(System.Data.DataView)">
      <summary>
            Performs mail merge from a DataView into the document with mail merge regions.
            </summary>
      <remarks>
        <p>This method is useful if you retrieve data into a <b>DataTable</b> but then
            need to apply a filter or sort before the mail merge.</p>
        <p>The document must have a mail merge region defined with name that matches 
            <b>DataView.Table.TableName</b>.</p>
        <p>If there are other mail merge regions defined in the document they are left intact.
            This allows to perform several mail merge operations.</p>
      </remarks>
      <param name="dataView">Data source for the mail merge operation. The source table
            of the <b>DataView</b> must have its <b>TableName</b> property set.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.ExecuteWithRegions(System.Data.IDataReader,System.String)">
      <summary>
            Performs mail merge from IDataReader into the document with mail merge regions.
            </summary>
      <remarks>
        <p>You can pass <b>SqlDataReader</b> or <b>OleDbDataReader</b> object into this
            method as a parameter because they both implemented <b>IDataReader</b> interface.</p>
      </remarks>
      <param name="dataReader">Source of the data records for mail merge such as OleDbDataReader or SqlDataReader.</param>
      <param name="tableName">Name of the mail merge region in the document to populate.</param>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.GetFieldNames">
      <summary>
            Returns a collection of mail merge field names available in the document. 
            </summary>
      <remarks>
        <p>Returns full merge field names including optional prefix. Does not eliminate duplicate field names.</p>
        <p>A new string[] array is created on every call.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Reporting.MailMerge.DeleteFields">
      <summary>
            Removes mail merge related fields from the document.
            </summary>
      <remarks>
        <p>This method removes MERGEFIELD and NEXT fields from the document.</p>
        <p>This method could be useful if your mail merge operation does not always need
            to populate all fields in the document. Use this method to remove all remaining
            mail merge fields.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MailMerge.RemoveEmptyParagraphs">
      <summary>
            Specifies whether paragraphs that contained mail merge fields with no
            data should be removed from the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Reporting.MailMerge.UseNonMergeFields">
      <summary>
            When true, specifies that in addition to MERGEFIELD fields, mail merge is performed into some other types of fields.
            </summary>
      <remarks>
        <p>Normally, mail merge is only performed into MERGEFIELD fields, but several customers had their reporting
            built using other fields and had many documents created this way. To simplify migration (and because this 
            approach was independetly used by several customers) the ability to mail merge into other fields was introduced.</p>
        <p>When <b>UseNonMergeFields</b> is set to true, mail merge will be performed into the following fields:</p>
        <p>MERGEFIELD FieldName</p>
        <p>MACROBUTTON NOMACRO FieldName</p>
        <p>IF 0 = 0 "{FieldName}" ""</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Reporting.MailMerge.MappedDataFields">
      <summary>
            Returns a collection that represents mapped data fields for the mail merge operation.
            </summary>
      <remarks>
        <p>
            Mapped data fields allow to automatically map between names of fields in your data source
            and names of mail merge fields in the document.
            </p>
      </remarks>
    </member>
    <member name="E:Aspose.Words.Reporting.MailMerge.MergeField">
      <summary>
            MergeField event occurs during mail merge when a simple mail merge field is encountered in the document.
            </summary>
    </member>
    <member name="E:Aspose.Words.Reporting.MailMerge.MergeImageField">
      <summary>
            Occurs during mail merge when an image mail merge field is encountered in the document.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.OleFormat">
      <summary>
            Provides access to the data of an OLE object or ActiveX control.
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.OleFormat" /> property to access the data of an OLE object.
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.OleFormat" /> class directly.</p>
        <seealso cref="P:Aspose.Words.Drawing.Shape.OleFormat" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.Drawing.OleFormat.Save(System.IO.Stream)">
      <summary>
            Saves the data of an embedded OLE object into the specified stream.
            </summary>
      <remarks>
        <p>It is the responsibility of the caller to dispose the stream.</p>
      </remarks>
      <exception cref="T:System.InvalidOperationException">Throws if you attempt to save a linked object.</exception>
      <param name="stream">Where to save the OLE object data.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.OleFormat.Save(System.String)">
      <summary>
            Saves the data of an embedded OLE object into the file with the specified name.
            </summary>
      <exception cref="T:System.InvalidOperationException">Throws if you attempt to save a linked object.</exception>
      <param name="fileName">Name of the file to save the OLE object data.</param>
    </member>
    <member name="M:Aspose.Words.Drawing.OleFormat.GetOleEntry(System.String)">
      <summary>
            Gets a named stream from OLE object data.
            </summary>
      <param name="oleEntryName">Name of the OLE data stream.</param>
      <returns>An OLE data stream.</returns>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.ProgId">
      <summary>
            Gets or sets the ProgID of the OLE object.
            </summary>
      <remarks>
        <para>The ProgID property is not always present in Microsoft Word documents and cannot be relied upon.</para>
        <para>Cannot be null.</para>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.IsLink">
      <summary>
            Returns true if the OLE object is linked (when <see cref="P:Aspose.Words.Drawing.OleFormat.SourceFullName" /> is specified).
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.SourceFullName">
      <summary>
            Gets or sets the path and name of the source file for the linked OLE object.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
        <p>If <see cref="P:Aspose.Words.Drawing.OleFormat.SourceFullName" /> is not an empty string, the OLE object is linked.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.SourceItem">
      <summary>
            Gets or sets a string that is used to identify the portion of the source file that is being linked. 
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
        <p>For example, if the source file is a Microsoft Excel workbook, the <see cref="P:Aspose.Words.Drawing.OleFormat.SourceItem" />
            property might return "Workbook1!R3C1:R4C2" if the OLE object contains only a few cells from 
            the worksheet.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.AutoUpdate">
      <summary>
            Specifies whether the link to the OLE object is automatically updated or not in Microsoft Word.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.OleIcon">
      <summary>
            When <b>true</b>, the OLE object is displayed as an icon. 
            When <b>false</b>, the OLE object is displayed as content.
            </summary>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.IsLocked">
      <summary>
            Specifies whether the link to the OLE object is locked from updates.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.OleFormat.Clsid">
      <summary>
            Gets the CLSID of the OLE object.
            </summary>
    </member>
    <member name="T:Aspose.Words.LineStyle">
      <summary>
            Specifies line style of a <see cref="T:Aspose.Words.Border" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.None">
      <summary>
      </summary>
      <dev>
            In MS Word binary format LineStyle.None means no border for all objects, except table cells.
            
            For table cells LineStyle.None means inherit from the default table border.
            
            Apparently this looks like a very bad hack made by someone at MS and I work around it
            by making LineStyle.None to mean "no border" for any object in the model including table cells.
            The translation is performed in the binary cell reader/writer.
            
            I also use a single approach to indicate that a border is inherited. At first the border attribute 
            is simply missing, but if a use requests it, a Border object is instantiated in "inherited" mode.
            </dev>
    </member>
    <member name="F:Aspose.Words.LineStyle.Single">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Thick">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Double">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Hairline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DashLargeGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DotDash">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DotDotDash">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Triple">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickSmallGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThickThinSmallGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickThinSmallGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickMediumGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThickThinMediumGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickThinMediumGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickLargeGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThickThinLargeGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.ThinThickThinLargeGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Wave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DoubleWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DashSmallGap">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.DashDotStroker">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Emboss3D">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Engrave3D">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Outset">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.LineStyle.Inset">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.ParagraphCollection">
      <summary>
            Provides typed access to a collection of <see cref="T:Aspose.Words.Paragraph" /> nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.ParagraphCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>Paragraph</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="T:Aspose.Words.Paragraph">
      <summary>
             Represents a paragraph of text.
             </summary>
      <remarks>
        <p>
          <see cref="T:Aspose.Words.Paragraph" /> is a block-level node and can be a child of classes derived from 
             <see cref="T:Aspose.Words.Story" /> or <see cref="T:Aspose.Words.InlineStory" />.</p>
        <p>
          <see cref="T:Aspose.Words.Paragraph" /> can contain any number of inline-level nodes and bookmarks.</p>
        <p>The complete list of child nodes that can occur inside a paragraph consists of
             <see cref="T:Aspose.Words.BookmarkStart" />, <see cref="T:Aspose.Words.BookmarkEnd" />,
             <see cref="T:Aspose.Words.Fields.FieldStart" />, <see cref="T:Aspose.Words.Fields.FieldSeparator" />, <see cref="T:Aspose.Words.Fields.FieldEnd" />, <see cref="T:Aspose.Words.Fields.FormField" />,
             <see cref="T:Aspose.Words.Comment" />, <see cref="T:Aspose.Words.Footnote" />,
             <see cref="T:Aspose.Words.Run" />, <see cref="T:Aspose.Words.SpecialChar" />,
             <see cref="T:Aspose.Words.Drawing.Shape" />, <see cref="T:Aspose.Words.Drawing.GroupShape" />,
             <see cref="T:Aspose.Words.Markup.SmartTag" />.</p>
        <p>A valid paragraph in Microsoft Word always ends with a paragraph break character and
             a minimal valid paragraph consists just of a paragraph break. The <b>Paragraph</b>
             class automatically appends the appropriate paragraph break character at the end
             and this character is not part of the child nodes of the <b>Paragraph</b>, therefore
             a <b>Paragraph</b> can be empty.</p>
        <p>Do not include the end of paragraph <see cref="F:Aspose.Words.ControlChar.ParagraphBreak">ControlChar.ParagraphBreak</see> 
             or end of cell <see cref="F:Aspose.Words.ControlChar.Cell">ControlChar.Cell</see> characters inside the text of 
             the paragraph as it might make the paragraph invalid when the document is opened in Microsoft Word.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Paragraph.#ctor(Aspose.Words.Document)">
      <summary>
            Initializes a new instance of the <b>Paragraph</b> class.
            </summary>
      <remarks>
        <p>When <b>Paragraph</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>Paragraph</b> to the document use InsertAfter or InsertBefore 
            on the story where you want the paragraph inserted.</p>
      </remarks>
      <param name="doc">The owner document.</param>
    </member>
    <member name="M:Aspose.Words.Paragraph.Clone(System.Boolean)">
      <summary>
Creates a duplicate of the node.
</summary>
      <remarks>
        <p>This method serves as a copy constructor for nodes. 
The cloned node has no parent, but belongs to the same document as the original node.</p>
        <p>This method always performs a deep copy of the node. The <i>isCloneChildren</i> parameter
specifies whether to perform copy all child nodes as well.</p>
      </remarks>
      <param name="isCloneChildren">True to recursively clone the subtree under the specified node; 
false to clone only the node itself.</param>
      <returns>The cloned node.</returns>
    </member>
    <member name="M:Aspose.Words.Paragraph.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitParagraphStart, then calls Accept for all child nodes 
            of the paragraph and calls DocumentVisitor.VisitParagraphEnd at the end.
            </remarks>
    </member>
    <member name="M:Aspose.Words.Paragraph.GetText">
      <summary>
             Gets the text of this paragraph including the end of paragraph character.
             </summary>
      <remarks>
        <p>The text of all child nodes is concatenated and the end of paragraph character is appended as follows:</p>
        <list type="bullet">
          <item>If the paragraph is the last paragraph of <see cref="T:Aspose.Words.Body" />, then 
            <see cref="F:Aspose.Words.ControlChar.SectionBreak">ControlChar.SectionBreak</see> (\x000c) is appended.</item>
          <item>If the paragraph is the last paragraph of <see cref="T:Aspose.Words.Tables.Cell" />, then 
            <see cref="F:Aspose.Words.ControlChar.Cell">ControlChar.Cell</see> (\x0007) is appended.</item>
          <item>For all other paragraphs 
            <see cref="F:Aspose.Words.ControlChar.ParagraphBreak">ControlChar.ParagraphBreak</see> (\r) is appended.</item>
        </list>
        <p>The returned string includes all control and special characters as described in <see cref="T:Aspose.Words.ControlChar" />.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Paragraph.GetDirectParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.GetDirectParaAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.FetchInheritedParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.FetchParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.SetParaAttr(System.Int32,System.Object)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.RemoveParaAttr(System.Int32)">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.ClearParaAttrs">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.GetDirectRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.GetDirectRunAttrByIndex(System.Int32,System.Int32@,System.Object@)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.FetchInheritedRunAttr(System.Int32)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.SetRunAttr(System.Int32,System.Object)">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="M:Aspose.Words.Paragraph.ClearRunAttrs">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.NodeType">
      <summary>
            Returns <b>NodeType.Paragraph</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.ParentStory">
      <summary>
            Retrieves the parent section-level story that can be <see cref="T:Aspose.Words.Body" /> or <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.ParentSection">
      <summary>
            Retrieves the parent <see cref="T:Aspose.Words.Section" /> of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsInCell">
      <summary>
            True if this paragraph is an immediate child of <see cref="T:Aspose.Words.Tables.Cell" />; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsEndOfCell">
      <summary>
            True if this paragraph is the last paragraph in a <see cref="T:Aspose.Words.Tables.Cell" />; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsEndOfSection">
      <summary>
            True if this paragraph is the last paragraph in the <b>Body</b> (main text story) of a <b>Section</b>; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsEndOfHeaderFooter">
      <summary>
            True if this paragraph is the last paragraph in the <b>HeaderFooter</b> (main text story) of a <b>Section</b>; false otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsEndOfDocument">
      <summary>
            True if this paragraph is the last paragraph in the last section of the document.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.ParagraphFormat">
      <summary>
            Provides access to the paragraph formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.ListFormat">
      <summary>
            Provides access to the list formatting properties of the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.Runs">
      <summary>
            Provides access to the typed collection of pieces of text inside the paragraph.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.ParagraphBreakFont">
      <summary>
            Provides access to the font formatting of the paragraph break character.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsInsertRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsDeleteRevision">
      <summary>
Returns true if this object was deleted in Microsoft Word while change tracking was enabled.
</summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.DirectParaAttrsCount">
      <summary>
            IParaAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.DirectRunAttrsCount">
      <summary>
            IRunAttrSource.
            </summary>
    </member>
    <member name="P:Aspose.Words.Paragraph.IsListItem">
      <summary>
            True when the paragraph is an item in a bulleted or numbered list.
            </summary>
    </member>
    <member name="T:Aspose.Words.StoryType">
      <summary>
            Text of a Word document is stored in stories. <b>StoryType</b> identifies a story.
            </summary>
      <dev>I'm not sure I need this in the public API and not sure if I need this at all.</dev>
    </member>
    <member name="F:Aspose.Words.StoryType.MainText">
      <summary>
            Contains the main text of the document, represented by <see cref="T:Aspose.Words.Body" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.Footnotes">
      <summary>
            Contains footnote text, represented by <see cref="T:Aspose.Words.Footnote" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.Endnotes">
      <summary>
            Contains endnotes text, represented by <see cref="T:Aspose.Words.Footnote" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.Comments">
      <summary>
            Contains document comments (annotations). 
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.Textbox">
      <summary>
            Contains shape or textbox text, represented by <see cref="T:Aspose.Words.Drawing.Shape" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.EvenPagesHeader">
      <summary>
            Contains text of the even pages header, represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.PrimaryHeader">
      <summary>
            Contains text of the primary header. When header is different for odd and even pages,
            contains text of the odd pages header. Represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.EvenPagesFooter">
      <summary>
            Contains text of the even pages footer, represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.PrimaryFooter">
      <summary>
            Contains text of the primary footer. When footer is different for odd and even pages,
            contains text of the odd pages footer. Represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.FirstPageHeader">
      <summary>
            Contains text of the first page header, represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="F:Aspose.Words.StoryType.FirstPageFooter">
      <summary>
            Contains text of the first page footer, represented by <see cref="T:Aspose.Words.HeaderFooter" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.HeaderFooterCollection">
      <summary>
            Provides typed access to <see cref="T:Aspose.Words.HeaderFooter" /> nodes of a <b>Section</b>.
            </summary>
      <remarks>
        <p>There can be maximum of one <b>HeaderFooter</b></p> of each <see cref="T:Aspose.Words.HeaderFooterType" /> per
            <b>Section</b>.
            <p><b>HeaderFooter</b> objects can occur in any order in the collection.</p></remarks>
    </member>
    <member name="M:Aspose.Words.HeaderFooterCollection.LinkToPrevious(System.Boolean)">
      <summary>
            Links or unlinks all headers and footers to the corresponding
            headers and footers in the previous section.
            </summary>
      <remarks>
        <p>If any of the headers or footers do not exist, creates them automatically.</p>
      </remarks>
      <param name="isLinkToPrevious">True to link the headers and footers to the previous section;
            false to unlink them.</param>
    </member>
    <member name="M:Aspose.Words.HeaderFooterCollection.LinkToPrevious(Aspose.Words.HeaderFooterType,System.Boolean)">
      <summary>
            Links or unlinks the specified header or footer to the corresponding
            header or footer in the previous section.
            </summary>
      <remarks>
        <p>If the header or footer of the specified type does not exist, creates it automatically.</p>
      </remarks>
      <param name="headerFooterType">A <see cref="T:Aspose.Words.HeaderFooterType" /> value
            that specfies the header or footer to link/unlink.</param>
      <param name="isLinkToPrevious">True to link the header or footer to the previous section; 
            false to unlink.</param>
    </member>
    <member name="P:Aspose.Words.HeaderFooterCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>HeaderFooter</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="P:Aspose.Words.HeaderFooterCollection.Item(Aspose.Words.HeaderFooterType)">
      <summary>
            Retrieves a <b>HeaderFooter</b> of the specified type.
            </summary>
      <remarks>
            Returns null if the header/footer of the specified type is not found.
            </remarks>
      <param name="headerFooterType">A <see cref="T:Aspose.Words.HeaderFooterType" /> value
            that specifies the type of the header/footer to retrieve.</param>
    </member>
    <member name="T:Aspose.Words.Lists.ListLevelAlignment">
      <summary>
            Specifies alignment for the list number or bullet.
            </summary>
      <remarks>
        <p>Used as a value for the <see cref="P:Aspose.Words.Lists.ListLevel.Alignment" /> property.</p>
      </remarks>
    </member>
    <member name="F:Aspose.Words.Lists.ListLevelAlignment.Left">
      <summary>
            The list label is aligned to the left of the number position.
            </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListLevelAlignment.Center">
      <summary>
            The list label is centered at the number position.
            </summary>
    </member>
    <member name="F:Aspose.Words.Lists.ListLevelAlignment.Right">
      <summary>
            This list label is aligned to the right of the number position.
            </summary>
    </member>
    <member name="T:Aspose.Words.Lists.ListLevel">
      <summary>
            Defines formatting for a list level.
            </summary>
      <remarks>
        <p>You do not create objects of this class. List level objects are created automatically
            when a list is created. You access <see cref="T:Aspose.Words.Lists.ListLevel" /> objects via the 
            <see cref="T:Aspose.Words.Lists.ListLevelCollection" /> collection.</p>
        <p>Use the properties of <see cref="T:Aspose.Words.Lists.ListLevel" /> to specify list formatting
            for individual list levels.</p>
      </remarks>
      <dev>
            Not sure where lvlElt.tplc is stored in the DOC file. 
            Sounds like it is a template code for individual list levels.
            VA: All tplc are stored in a separate table in a document.
                They can be seen in binary going one after another.
                Not sure how to locate them in the document structure though.
            </dev>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.StartAt">
      <summary>
            Returns or sets the starting number for this list level.
            </summary>
      <remarks>
        <p>Default value is 1.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.NumberStyle">
      <summary>
            Returns or sets the number style for this list level.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.NumberFormat">
      <summary>
            Returns or sets the number format for the list level. 
            </summary>
      <remarks>
        <p>Among normal text characters, the string can contain placeholder characters \x0000 to \x0008
            representing the numbers from the corresponding list levels.</p>
        <p>For example, the string "\x0000.\x0001)" will generate a list label
            that looks something like "1.5)". The number "1" is the current number from
            the 1st list level, the number "5" is the current number from the 2nd list level.</p>
        <p>Null is not allowed, but an empty string meaning no number is valid.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.Alignment">
      <summary>
            Gets or sets the justification of the actual number of the list item.
            </summary>
      <remarks>
        <p>The list label is justified relative to the <see cref="P:Aspose.Words.Lists.ListLevel.NumberPosition" /> property.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.IsLegal">
      <summary>
            True if the level turns all inherited numbers to arabic, false if it preserves their number style.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.RestartAfterLevel">
      <summary>
            Sets or returns the list level that must appear before the specified list level restarts numbering. 
            </summary>
      <remarks>
        <para>The value of -1 means the numbering will continue.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.TrailingCharacter">
      <summary>
            Returns or sets the character inserted after the number for the list level. 
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.Font">
      <summary>
            Specifies character formatting used for the list label.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.TabPosition">
      <summary>
            Returns or sets the tab position (in points) for the list level.
            </summary>
      <remarks>
        <p>Has effect only when <see cref="P:Aspose.Words.Lists.ListLevel.TrailingCharacter" /> is a tab.</p>
        <seealso cref="P:Aspose.Words.Lists.ListLevel.NumberPosition" />
        <seealso cref="P:Aspose.Words.Lists.ListLevel.TextPosition" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.NumberPosition">
      <summary>
            Returns or sets the position (in points) of the number or bullet for the list level. 
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Lists.ListLevel.NumberPosition" /> corresponds to LeftIndent plus FirstLineIndent of the paragraph.</p>
        <seealso cref="P:Aspose.Words.Lists.ListLevel.TextPosition" />
        <seealso cref="P:Aspose.Words.Lists.ListLevel.TabPosition" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.TextPosition">
      <summary>
            Returns or sets the position (in points) for the second line of wrapping text for the list level.
            </summary>
      <remarks>
        <p>
          <see cref="P:Aspose.Words.Lists.ListLevel.TextPosition" /> corresponds to LeftIndent of the paragraph.</p>
        <seealso cref="P:Aspose.Words.Lists.ListLevel.NumberPosition" />
        <seealso cref="P:Aspose.Words.Lists.ListLevel.TabPosition" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevel.LinkedStyle">
      <summary>
            Gets or sets the paragraph style that is linked to this list level.
            </summary>
      <remarks>
        <p>This property is null when the list level is not linked to a paragraph style. 
            This property can be set to null.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.ReplaceAction">
      <summary>
            Allows the user to specify what happens to the current match during a replace operation.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.ReplaceEvaluator" />
        <seealso cref="T:Aspose.Words.Range" />
        <seealso cref="M:Aspose.Words.Range.Replace(System.String,System.String,System.Boolean,System.Boolean)" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.ReplaceAction.Replace">
      <summary>
            Replace the current match.
            </summary>
    </member>
    <member name="F:Aspose.Words.ReplaceAction.Skip">
      <summary>
            Skip the current match.
            </summary>
    </member>
    <member name="F:Aspose.Words.ReplaceAction.Stop">
      <summary>
            Terminate the replace operation.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.WrapSide">
      <summary>
            Specifies what side(s) of the shape or picture the text wraps around.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.WrapSide" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapSide.Both">
      <summary>
            The document text wraps on both sides of the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapSide.Left">
      <summary>
            The document text wraps on the left side of the shape only. There is a text free area on the right of the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapSide.Right">
      <summary>
            The document text wraps on the right side of the shape only. There is a text free area on the left side of the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapSide.Largest">
      <summary>
            The document text wraps on the side of the shape that is fartherst from the page margin, leaving text free area on the other side of the shape.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.WrapSide.Default">
      <summary>
            Default value is <see cref="F:Aspose.Words.Drawing.WrapSide.Both" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.HorizontalAlignment">
      <summary>
            Specifies horizontal alignment of a floating shape, text frame or floating table.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ShapeBase.HorizontalAlignment" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.None">
      <summary>
            The object is explicitly positioned, usually using its <b>Left</b> property.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.Left">
      <summary>
            The object is aligned to the left of the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.Center">
      <summary>
            The object is centered relative to the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.Right">
      <summary>
            The object is aligned to the right of the reference object.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.Inside">
      <summary>
            Not documented.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.HorizontalAlignment.Outside">
      <summary>
            Not documented.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ArrowType">
      <summary>
            Specifies the type of an arrow at a line end.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.StartArrowType" />
        <seealso cref="P:Aspose.Words.Drawing.Stroke.EndArrowType" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.None">
      <summary>
            The line does not have an arrow at the end.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.Arrow">
      <summary>
            The arrow is a solid triangle.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.Block">
      <summary>
            The arrow is a solid block.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.Diamond">
      <summary>
            The arrow is a solid diamond.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.Oval">
      <summary>
            The arrow is a solid oval.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ArrowType.Open">
      <summary>
            The arrow is an open arrow.
            </summary>
    </member>
    <member name="T:Aspose.Words.Range">
      <summary>
            Represents a contiguous area in a document.
            </summary>
      <remarks>
        <p>The document is represented by a tree of nodes and the nodes provide operations
            to work with the tree, but some operations are easier to perform if the document 
            is treated as a contiguous sequence of text.</p>
        <p>
          <b>Range</b> is a "facade" interface that provide methods that treat the document 
            or portions of the document as "flat" text regardless of the fact that the document
            nodes are stored in a tree-like object model.</p>
        <p>
          <b>Range</b> does not contain any text or nodes, it is merely a view or "window"
            over a fragment of a document.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Range.Delete">
      <summary>
            Deletes all characters of the range.
            </summary>
    </member>
    <member name="M:Aspose.Words.Range.Replace(System.String,System.String,System.Boolean,System.Boolean)">
      <overloads>Replaces all occurrences of a specified string in this range, with another string.</overloads>
      <summary>
            Replaces all occurrences of a specified string with another string.
            </summary>
      <remarks>
        <p>An exception is thrown if a captured or replacement string contain one
            or more special characters: paragraph break, cell break, section break, 
            field start, field separator, field end, inline picture, drawing object, footnote.</p>
      </remarks>
      <param name="oldValue">A string to be replaced.</param>
      <param name="newValue">A string to replace all occurrences of oldValue.</param>
      <param name="isMatchCase">True indicates case-sensitive comparison, false indicates case-insensitive comparision.</param>
      <param name="isMatchWholeWord">True indicates the oldValue must be a standalone word.</param>
      <returns>The number of replacements made.</returns>
    </member>
    <member name="M:Aspose.Words.Range.Replace(System.Text.RegularExpressions.Regex,System.String)">
      <summary>
            Replaces all occurrences of a character pattern specified by a regular expression with another string.
            </summary>
      <remarks>
        <p>Replaces the whole match captured by the regular expression.</p>
        <p>An exception is thrown if a captured or replacement string contain one
            or more special characters: paragraph break, cell break, section break, 
            field start, field separator, field end, inline picture, drawing object, footnote.</p>
      </remarks>
      <param name="pattern">A regular expression pattern used to find matches.</param>
      <param name="replacement">A string to replace all occurrences of oldValue.</param>
      <returns>The number of replacements made.</returns>
    </member>
    <member name="M:Aspose.Words.Range.Replace(System.Text.RegularExpressions.Regex,Aspose.Words.ReplaceEvaluator,System.Boolean)">
      <summary>
            Finds all occurrences of a character pattern specified by a regular expression and calls a
            user defined replace evaluator method.
            </summary>
      <remarks>
        <p>An exception is thrown if a captured or replacement string contain one
            or more special characters: paragraph break, cell break, section break, 
            field start, field separator, field end, inline picture, drawing object, footnote.</p>
      </remarks>
      <param name="pattern">A regular expression pattern used to find matches.</param>
      <param name="evaluator">The user-defined method which evaluates replacement at each step.</param>
      <param name="isForward">True to replace from the beginning of the range to the end.</param>
      <returns>The number of replacements made.</returns>
    </member>
    <member name="M:Aspose.Words.Range.UpdateFields">
      <summary>
            Updates the values of document fields in this range. Not all field types are updated.
            </summary>
      <remarks>
        <p>At the moment updates the results of DOCPROPERTY and DOCVARIABLE fields only.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Range.Text">
      <summary>
            Gets the text of the range.
            </summary>
      <remarks>
        <p>The returned string includes all control and special characters as described in <see cref="T:Aspose.Words.ControlChar" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Range.FormFields">
      <summary>
            Returns a <see cref="P:Aspose.Words.Range.FormFields" /> collection that represents all form fields in the range.
            </summary>
    </member>
    <member name="P:Aspose.Words.Range.Bookmarks">
      <summary>
            Returns a <see cref="P:Aspose.Words.Range.Bookmarks" /> collection that represents all bookmarks in the range.
            </summary>
    </member>
    <member name="T:Aspose.Words.Tables.TableCollection">
      <summary>
            Provides typed access to a collection of <see cref="T:Aspose.Words.Tables.Table" /> nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.Tables.TableCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>Table</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="T:Aspose.Words.StyleType">
      <summary>
            Represents type of the style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleType.Paragraph">
      <summary>
            The style is a paragraph style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleType.Character">
      <summary>
            The style is a character style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleType.Table">
      <summary>
            The style is a table style.
            </summary>
    </member>
    <member name="F:Aspose.Words.StyleType.List">
      <summary>
            The style is a list style.
            </summary>
    </member>
    <member name="T:Aspose.Words.LineNumberRestartMode">
      <summary>
            Determines when automatic line numbering restarts.
            </summary>
      <remarks>
        <seealso cref="T:Aspose.Words.PageSetup" />
        <seealso cref="P:Aspose.Words.PageSetup.LineNumberRestartMode" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.LineNumberRestartMode.RestartPage">
      <summary>
            Line numbering restarts at the start of every page.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineNumberRestartMode.RestartSection">
      <summary>
            Line numbering restarts at the section start.
            </summary>
    </member>
    <member name="F:Aspose.Words.LineNumberRestartMode.Continuous">
      <summary>
            Line numbering continious from the previous section.
            </summary>
    </member>
    <member name="T:Aspose.Words.HeaderFooter">
      <summary>
            Represents a container for the header or footer text of a section.
            </summary>
      <remarks>
        <p>
          <b>HeaderFooter</b> can contain <b>Paragraph</b> and <b>Table</b> child nodes.</p>
        <p>
          <b>HeaderFooter</b> is a section-level node and can only be a child of <b>Section</b>. 
            There can only be one <b>HeaderFooter</b> or each <see cref="P:Aspose.Words.HeaderFooter.HeaderFooterType" /> in a <b>Section</b>.</p>
        <p>If <b>Section</b> does not have a <b>HeaderFooter</b> of a specific type or
            the <b>HeaderFooter</b> has no child nodes, this header/footer is considered linked to 
            the header/footer of the same type of the previous section in Microsoft Word.</p>
        <p>When <b>HeaderFooter</b> contains at least one one <b>Paragraph</b>, it is no longer
            considered linked to previous in Microsoft Word.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.HeaderFooter.#ctor(Aspose.Words.Document,Aspose.Words.HeaderFooterType)">
      <summary>
            Creates a new header or footer of the specified type.
            </summary>
      <remarks>
        <p>When <b>HeaderFooter</b> is created, it belongs to the specified document, but is not 
            yet part of the document and <b>ParentNode</b> is null.</p>
        <p>To append <b>HederFooter</b> to a <b>Section</b> use Section.InsertAfter, Section.InsertBefore,
            HeadersFooters.Add or HeadersFooters.Insert.</p>
      </remarks>
      <param name="doc">The owner document.</param>
      <param name="headerFooterType">A <see cref="T:Aspose.Words.HeaderFooterType" /> value
            that specifies the type of the header or footer.</param>
    </member>
    <member name="M:Aspose.Words.HeaderFooter.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
Accepts a visitor.
</summary>
      <remarks>
        <p>Enumerates over this node and all of its children. Each node calls a corresponding method on DocumentVisitor.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the nodes.</param>
      <returns>True if all nodes were visited; false if DocumentVisitor stopped the operation before visiting all nodes.</returns>
      <remarks>
            Calls DocumentVisitor.VisitHeaderFooterStart, then calls Accept for all child nodes of the section
            and calls DocumentVisitor.VisitHeaderFooterEnd at the end.
            </remarks>
    </member>
    <member name="P:Aspose.Words.HeaderFooter.NodeType">
      <summary>
            Returns <b>NodeType.HeaderFooter</b>.
            </summary>
    </member>
    <member name="P:Aspose.Words.HeaderFooter.HeaderFooterType">
      <summary>
            Gets the type of this header/footer.
            </summary>
    </member>
    <member name="P:Aspose.Words.HeaderFooter.IsHeader">
      <summary>
            True if this <b>HeaderFooter</b> object is a header. 
            </summary>
    </member>
    <member name="P:Aspose.Words.HeaderFooter.IsLinkedToPrevious">
      <summary>
            True if this header or footer is linked to the corresponding header or footer 
            in the previous section.
            </summary>
      <remarks>
        <p>Default is true.</p>
        <p>Note, when your link a header or footer, its contents is cleared.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Lists.ListLevelCollection">
      <summary>
            A collection of list formatting for each level in a list.
            </summary>
    </member>
    <member name="M:Aspose.Words.Lists.ListLevelCollection.GetEnumerator">
      <summary>
            Gets the enumerator object that will enumerate levels in this list.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevelCollection.Item(System.Int32)">
      <summary>
            Gets a list level by index.
            </summary>
    </member>
    <member name="P:Aspose.Words.Lists.ListLevelCollection.Count">
      <summary>
            Gets the number of levels in this list.
            </summary>
      <remarks>
        <p>There could be 1 or 9 levels in a list.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.Fields.FieldSeparator">
      <summary>
            Represents a Word field separator that separates the field code from the field result.
            </summary>
      <remarks>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldSeparator" /> is an inline-level node and represented 
            by the <see cref="F:Aspose.Words.ControlChar.FieldSeparatorChar" /> control character in the document.</p>
        <p>
          <see cref="T:Aspose.Words.Fields.FieldSeparator" /> can only be a child of <see cref="T:Aspose.Words.Paragraph" />.</p>
        <p>A complete field in a Microsoft Word document is a complex structure consisting of
a field start character, field code, field separator character, field result
and field end character. Some fields only have field start, field code and field end.</p>
        <p>To easily insert a new field into a document, use the <see cref="M:Aspose.Words.DocumentBuilder.InsertField(System.String,System.String)" />
method.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Words.Fields.FieldSeparator.Accept(Aspose.Words.DocumentVisitor)">
      <summary>
            Accepts a visitor.
            </summary>
      <remarks>
        <p>Calls <see cref="M:Aspose.Words.DocumentVisitor.VisitFieldSeparator(Aspose.Words.Fields.FieldSeparator)" />.</p>
        <p>For more info see the Visitor design pattern.</p>
      </remarks>
      <param name="visitor">The visitor that will visit the node.</param>
      <returns>
        <b>False</b> if the visitor requested the enumeration to stop.</returns>
    </member>
    <member name="P:Aspose.Words.Fields.FieldSeparator.NodeType">
      <summary>
            Returns <see cref="F:Aspose.Words.NodeType.FieldSeparator" />.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.TextPath">
      <summary>
            Defines the text and formatting of the text path (of a WordArt object).
            </summary>
      <remarks>
        <p>Use the <see cref="P:Aspose.Words.Drawing.Shape.TextPath" /> property to access WordArt properties of a shape.
            You do not create instances of the <see cref="T:Aspose.Words.Drawing.TextPath" /> class directly.</p>
        <seealso cref="P:Aspose.Words.Drawing.Shape.TextPath" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.On">
      <summary>
            Defines whether the text is displayed. 
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.FitPath">
      <summary>
            Defines whether the text fits the path of a shape.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.FitShape">
      <summary>
            Defines whether the text fits bounding box of a shape. 
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.FontFamily">
      <summary>
            Defines the family of the textpath font. 
            </summary>
      <remarks>
        <p>The default value is Arial.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Size">
      <summary>
            Defines the size of the font in points.
            </summary>
      <remarks>
        <p>The default value is 36.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Bold">
      <summary>
            True if the font is formatted as bold.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Italic">
      <summary>
            True if the font is formatted as italic.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.SmallCaps">
      <summary>
            True if the font is formatted as small capital letters.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.RotateLetters">
      <summary>
            Determines whether the letters of the text are rotated. 
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Trim">
      <summary>
            Determines whether extra space is removed above and below the text.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Kerning">
      <summary>
            Determines whether kerning is turned on.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Shadow">
      <summary>
            Defines whether a shadow is applied to the text on a text path.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Underline">
      <summary>
            True if the font is underlined.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.StrikeThrough">
      <summary>
            True if the font is formatted as strikethrough text.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.SameLetterHeights">
      <summary>
            Determines whether all letters will be the same height regardless of initial case.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Text">
      <summary>
            Defines the text of the text path.
            </summary>
      <remarks>
        <p>The default value is an empty string.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.TextPathAlignment">
      <summary>
            Defines the alignment of text.
            </summary>
      <remarks>
        <p>The default value is <see cref="F:Aspose.Words.Drawing.TextPathAlignment.Center" />.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.ReverseRows">
      <summary>
            Determines whether the layout order of rows is reversed.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
        <p>If <b>true</b>, the layout order of rows is reversed. This attribute is used for vertical text layout.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.Spacing">
      <summary>
            Defines the amount of spacing for text. 1 means 100%.
            </summary>
      <remarks>
        <p>The default value is 1.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Drawing.TextPath.XScale">
      <summary>
            Determines whether a straight textpath will be used instead of the shape path.
            </summary>
      <remarks>
        <p>The default value is <b>false</b>.</p>
        <p>If <b>true</b>, the text runs along a path from left to right along the x value of 
            the lower boundary of the shape.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.VisitorAction">
      <summary>
            Allows the visitor to control the enumeration of nodes.
            </summary>
    </member>
    <member name="F:Aspose.Words.VisitorAction.Continue">
      <summary>
            The visitor requests the enumeration to continue.
            </summary>
    </member>
    <member name="F:Aspose.Words.VisitorAction.SkipThisNode">
      <summary>
            The visitor requests to skip the current node and continue enumeration.
            </summary>
    </member>
    <member name="F:Aspose.Words.VisitorAction.Stop">
      <summary>
            The visitor requests the enumeration of nodes to stop.
            </summary>
    </member>
    <member name="T:Aspose.Words.FootnoteOptions">
      <summary>
            Represents the footnote or endnote numbering options.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Document.FootnoteOptions" />
        <seealso cref="P:Aspose.Words.Document.EndnoteOptions" />
      </remarks>
    </member>
    <member name="P:Aspose.Words.FootnoteOptions.Location">
      <summary>
            Specifies the footnote or endnote position.
            </summary>
    </member>
    <member name="P:Aspose.Words.FootnoteOptions.NumberStyle">
      <summary>
            Specifies the number format for automatically numbered footnotes or endnotes.
            </summary>
    </member>
    <member name="P:Aspose.Words.FootnoteOptions.StartNumber">
      <summary>
            Specifies the starting number or character for the first automatically numbered footnotes or endnotes.
            </summary>
    </member>
    <member name="P:Aspose.Words.FootnoteOptions.RestartRule">
      <summary>
            Determines when automatic numbering restarts.
            </summary>
    </member>
    <member name="T:Aspose.Words.Border">
      <summary>
            Represents a border of an object.
            </summary>
      <remarks>
        <p>Borders can be applied to various document elements including paragraph,
            run of text inside a paragraph or a table cell.</p>
      </remarks>
      <dev>
            This is a model and also presentation class that allows to see and modify border attributes.
            </dev>
    </member>
    <member name="M:Aspose.Words.Border.ClearFormatting">
      <summary>
            Resets border properties to default values.
            </summary>
      <remarks>
            When border properties are reset to default values, the border is invisible.
            </remarks>
    </member>
    <member name="P:Aspose.Words.Border.LineStyle">
      <summary>
            Gets or sets the border style.
            </summary>
      <remarks>
        <para>If you set line style to none, then line width is automatically changed to zero.</para>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Border.LineWidth">
      <summary>
            Gets or sets the border width in points.
            </summary>
      <remarks>
        <p>If you set line width greater than zero when line style is none, the line style is 
            automatically changed to single line.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Words.Border.IsVisible">
      <summary>
            Returns true if the LineStyle is not LineStyle.None.
            </summary>
    </member>
    <member name="P:Aspose.Words.Border.Color">
      <summary>
             Gets or sets the border color.
            </summary>
    </member>
    <member name="P:Aspose.Words.Border.DistanceFromText">
      <summary>
            Gets or sets distance of the border from text or from the page edge in points.
            </summary>
      <remarks>
            Has no effect and will be automatically reset to zero for borders of table cells.
            
            <seealso cref="P:Aspose.Words.PageSetup.BorderDistanceFrom" /></remarks>
    </member>
    <member name="P:Aspose.Words.Border.Shadow">
      <summary>
            Gets or sets a value indicating whether the border has a shadow.
            </summary>
      <remarks>
        <p>In Microsoft Word, for a border to have a shadow, the borders on all four sides
            (left, top, right and bottom) should be of the same type, width, color and all should have
            the Shadow property set to true.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Words.TabStop">
      <summary>
            Represents a single custom tab stop. The <b>TabStop</b> object is a member of the 
            <see cref="T:Aspose.Words.TabStopCollection" /> collection.
            </summary>
      <remarks>
        <p>Normally, a tab stop specifies a position where a tab stop exists. But because
            tab stops can be inherited from parent styles, it might be needed for the child object 
            to define explicitly that there is no tab stop at a given position. To clear
            an inherited tab stop at a given position, create a <b>TabStop</b> object and set 
            <see cref="P:Aspose.Words.TabStop.Alignment" /> to <c>TabAlignment.Clear</c>.</p>
        <p>Fore more information see <see cref="T:Aspose.Words.TabStopCollection" />.</p>
        <seealso cref="T:Aspose.Words.ParagraphFormat" />
        <seealso cref="T:Aspose.Words.TabStopCollection" />
        <seealso cref="P:Aspose.Words.Document.DefaultTabStop" />
      </remarks>
    </member>
    <member name="M:Aspose.Words.TabStop.#ctor">
      <summary>
            Ctor.
            </summary>
    </member>
    <member name="M:Aspose.Words.TabStop.#ctor(System.Double)">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Aspose.Words.TabStop.#ctor(System.Double,Aspose.Words.TabAlignment,Aspose.Words.TabLeader)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="position">The position of the tab stop in points.</param>
      <param name="alignment">A <see cref="T:Aspose.Words.TabAlignment" /> value that 
            specifies the alignment of text at this tab stop.</param>
      <param name="leader">A <see cref="T:Aspose.Words.TabLeader" /> value that specifies
            the type of the leader line displayed under the tab character.</param>
    </member>
    <member name="M:Aspose.Words.TabStop.#ctor(System.Int32,Aspose.Words.TabAlignment,Aspose.Words.TabLeader)">
      <summary>
            Ctor.
            </summary>
    </member>
    <member name="P:Aspose.Words.TabStop.Position">
      <summary>
            Gets the position of the tab stop in points.
            </summary>
    </member>
    <member name="P:Aspose.Words.TabStop.Alignment">
      <summary>
            Gets or sets the alignment of text at this tab stop.
            </summary>
    </member>
    <member name="P:Aspose.Words.TabStop.Leader">
      <summary>
            Gets or sets the type of the leader line displayed under the tab character.
            </summary>
    </member>
    <member name="P:Aspose.Words.TabStop.IsClear">
      <summary>
            Returns true if this tab stop clears any existing tab stops in this position.
            </summary>
    </member>
    <member name="T:Aspose.Words.RunCollection">
      <summary>
            Provides typed access to a collection of <see cref="T:Aspose.Words.Run" /> nodes.
            </summary>
    </member>
    <member name="P:Aspose.Words.RunCollection.Item(System.Int32)">
      <summary>
            Retrieves a <b>Run</b> at the given index.
            </summary>
      <remarks>
        <remarks>
          <p>The index is zero-based.</p>
          <p>Negative indexes are allowed and indicate access from the back of the collection. 
For example -1 means the last item, -2 means the second before last and so on.</p>
          <p>If index is greater than or equal to the number of items in the list, this returns a null reference.</p>
          <p>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</p>
        </remarks>
      </remarks>
      <param name="index">An index into the collection.</param>
    </member>
    <member name="T:Aspose.Words.HeightRule">
      <summary>
            Specifies the rule for determining the height of an object.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeightRule.AtLeast">
      <summary>
            The height will be at least the specified height in points. It will grow, if needed,
            to accommodate all text inside an object.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeightRule.Exactly">
      <summary>
            The height is specified exactly in points. Please note that if the text cannot
            fit inside the object of this height, it will appear truncated.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeightRule.Auto">
      <summary>
            The height will grow automatically to accommodate all text inside an object.
            </summary>
    </member>
    <member name="T:Aspose.Words.PaperTray">
      <summary>
            Specifies the paper tray (bin) where the printer needs to take the paper from.
            </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.AutomaticSheetFeed">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.DefaultBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.EnvelopeFeed">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.FormSource">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.LargeCapacityBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.LargeFormatBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.LowerBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.ManualEnvelopeFeed">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.ManualFeed">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.MiddleBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.OnlyBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.PaperCassette">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.SmallFormatBin">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.TractorFeed">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Words.PaperTray.UpperBin">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Words.HeaderFooterType">
      <summary>
            Identifies the type of header or footer found in a Word file.
            </summary>
      <rev>
            This is a per section header/footer. 
            Do not renumber as the value of the enum used as an index into plcfhdd.
            </rev>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.HeaderEven">
      <summary>
            Header for even numbered pages.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.HeaderPrimary">
      <summary>
            Primary header, also used for odd numbered pages.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.FooterEven">
      <summary>
            Footer for even numbered pages.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.FooterPrimary">
      <summary>
            Primary footer, also used for odd numbered pages.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.HeaderFirst">
      <summary>
            Header for the first page of the section.
            </summary>
    </member>
    <member name="F:Aspose.Words.HeaderFooterType.FooterFirst">
      <summary>
            Footer for the first page of the section.
            </summary>
    </member>
    <member name="T:Aspose.Words.Drawing.ImageType">
      <summary>
            Specifies the type (format) of an image in a Microsoft Word document.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.ImageData.ImageType" />
      </remarks>
      <dev>
            Do not renumber these. The values correspond to MSOBLIPTYPE in the Binary Drawing format.
            </dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.NoImage">
      <summary>
            The is no image data.
            </summary>
      <dev>
            The spec says: "An error occured during loading."
            I've seen this in some places, more likely it means "this blip record is unused".
            </dev>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Unknown">
      <summary>
            An unknown image type or image type that cannot be directly stored inside a Microsoft Word document.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Emf">
      <summary>
            Windows Enhanced Metafile.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Wmf">
      <summary>
            Windows Metafile. 
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Pict">
      <summary>
            Macintosh PICT. An existing image will be preserved in a document, but inserting new
            PICT images into a document is not supported.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Jpeg">
      <summary>
            JPEG JFIF.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Png">
      <summary>
            Portable Network Graphics.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.ImageType.Bmp">
      <summary>
            Windows Bitmap.
            </summary>
      <dev>
            Note this is BMP in my model, but in a Word document this is stored as a DIB.
            DIB is basically a BMP without a header.
            </dev>
    </member>
    <member name="T:Aspose.Words.Drawing.EndCap">
      <summary>
            Specifies line cap style.
            </summary>
      <remarks>
        <seealso cref="P:Aspose.Words.Drawing.Stroke.EndCap" />
      </remarks>
    </member>
    <member name="F:Aspose.Words.Drawing.EndCap.Round">
      <summary>
            Rounded ends.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.EndCap.Square">
      <summary>
            Square protrudes by half line width.
            </summary>
    </member>
    <member name="F:Aspose.Words.Drawing.EndCap.Flat">
      <summary>
            Line ends at end point.
            </summary>
    </member>
    <member name="T:Aspose.Words.Shading">
      <summary>
            Contains shading attributes for an object.
            </summary>
      <dev>
            This is a model and also presentation class that allows to see and modify shading attributes.
            </dev>
    </member>
    <member name="M:Aspose.Words.Shading.ClearFormatting">
      <summary>
            Removes shading from the object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Shading.BackgroundPatternColor">
      <summary>
            Gets or sets the color that's applied to the background of the Shading object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Shading.ForegroundPatternColor">
      <summary>
            Gets or sets the color that's applied to the foreground of the Shading object.
            </summary>
    </member>
    <member name="P:Aspose.Words.Shading.Texture">
      <summary>
            Gets or sets the shading texture.
            </summary>
    </member>
    <member name="T:Aspose.Words.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Words.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Words.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder of the component assembly.</p>
        <p>3. The folder of the client's calling assembly.</p>
        <p>4. The folder of the entry assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code><param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.Words.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
  </members>
</doc>